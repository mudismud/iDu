<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <data>
        <template id="assets_backend" name="course_assets" inherit_id="web.assets_backend">
            <xpath expr="." position="inside">
                <script type="text/javascript" src="/openacademy/static/src/js/tree_view_button.js"></script>
            </xpath>
        </template>

        <record id="action_new_course1" model="ir.actions.act_window">
            <field name="name">Course</field>
            <field name="res_model">openacademy.course</field>
            <field name="view_type">form</field>
            <field name="view_mode">form</field>
            <field name="target">current</field>
        </record>

        <record model="ir.ui.view" id="course_form_view">
            <field name="name">course.form</field>
            <field name="model">openacademy.course</field>
            <field name="groups_id" eval="[(4, ref('group_openacademy_manager')), (4, ref('group_openacademy_user'))]"/>
            <field name="arch" type="xml">
                <form string="Course Form">
					 <!-- workflow 声明-->
                    <!-- 添加header标签用来显示workflow中的按钮-->
                    <header>
                        <button name="openacademy.action_new_course1" type="action" string="New course" confirm="Do you want to create a new course?" groups="openacademy.group_openacademy_manager"/>
                        <button name="invoke_xmlrpc" type="object" string="XML RPC Invoke" class="oe_highlight" confirm="Do you want to invoke XML RPC?" groups="openacademy.group_openacademy_manager"/>
                        <button name="invoke_jsonrpc" type="object" string="JSON RPC Invoke" class="oe_highlight" confirm="Do you want to invoke JSON RPC?" groups="openacademy.group_openacademy_manager"/>
                        <button name="invoke_context" type="object" string="Context Invoke" class="oe_highlight" confirm="Do you want to invoke context?"  context="{'context_type': 'type'}"/>
                        <!-- 首先指明button的type为workflow类型 -->
                        <!-- name 对应于workflow.transition中的signal-->
                        <!-- states 属性用来控制button显示隐藏，例如states="init"，当state属性为init时，这个button显示，否则不显示 -->
                        <button name="workflow_start" states="init" string="Start" type="workflow" class="oe_highlight"/>
                        <button name="workflow_confirm" states="start" string="Confirm" type="workflow" class="oe_highlight"/>
                        <button name="workflow_end" states="confirm" string="Complete" type="workflow" class="oe_highlight"/>
                        <button name="workflow_cancel" states ="start" string="Cancel" type="workflow" class="oe_highlight"/>
                        <!-- 右上角 进度显示。注意在此处已经使用的state属性，所以在接下来的tree标签里面就不能再次声明<field name="state"/>了如果再次声明此处的进度显示便会失去作用 -->
                        <field name="state" widget="statusbar" statusbar_visible="start,confirm,complete" statusbar_colors='{"start":"red","confirm":"blue","confirm":"green"}' clickable="True"/>
                    </header>
                    <sheet>
						<div class="oe_title">
							<label for="name" class="oe_edit_only" string="Course Name" />
                            <h1><field name="name"/></h1>
						</div>
						<separator string="General" colspan="2" />
						<group colspan="2" col="2">
                            <field name="no"/>
                            <field name="credit" groups="openacademy.group_openacademy_manager"/>
                            <field name="color" widget="color" attrs="{'invisible': False, 'required': True}"/>
                            <!--<field name="credit"/>-->
                            <field name="type" attrs="{'invisible': [('credit', '!=', False)], 'required': [('color', '!=', False)]}" groups="openacademy.group_openacademy_manager" />
						</group>
                        <group>
							<field name="responsible_id" groups="openacademy.group_openacademy_manager"/>
                            <!--<field name="responsible_id"/>-->
                            <field name="teacher_id" domain="[('name','=','Test')]" options="{'no_create': False, 'no_quick_create':False, 'no_create_edit':False}"/>
                            <!--<field name="teacher"/>-->
                        </group>
						<notebook>
							<page string="Description">
                                <field name="description" placeholder="course description..." />
								<!--<field name="description"/>-->
							</page>
                            <page string="Sessions">
                                <field name="session_ids">
                                    <tree string="Registered sessions">
                                        <field name="name"/>
                                        <field name="instructor_id"/>
                                    </tree>
                                </field>
                            </page>
                            <page string="Attachments">
                                <field name="attachments" widget="many2many_binary"/>
                            </page>
							<page string="About">
								This is an example of notebooks
							</page>
						</notebook>
                    </sheet>
                    <div class="oe_chatter">
                        <field name="message_follower_ids" widget="mail_followers"/>
                        <field name="message_ids" widget="mail_thread"/>
                    </div>
                </form>
            </field>
        </record>

		<record model="ir.ui.view" id="course_search_view_new">
            <field name="name">course.search</field>
            <field name="model">openacademy.course</field>
            <field name="arch" type="xml">
                <search>
                    <field name="name"/>
                    <field name="description"/>
                    <field name="description" string="Name and description"
                           filter_domain="['|', ('name', 'ilike', self), ('description', 'ilike', self)]"/>
                    <filter name="my_courses" string="My Courses"
                            domain="[('responsible_id', '=', uid)]"/>
                    <group string="Group By">
                        <filter name="by_responsible" string="Responsible"
                                context="{'group_by': 'responsible_id'}"/>
                    </group>
                </search>
            </field>
        </record>

        <record model="ir.ui.view" id="course_search_view">
            <field name="name">course.search</field>
            <field name="model">openacademy.course</field>
            <field name="arch" type="xml">
                <search>
                    <field name="name"/>
                    <field name="description"/>
                </search>
            </field>
        </record>
		
		<record model="ir.ui.view" id="course_tree_view">
            <field name="name">course.tree</field>
            <field name="model">openacademy.course</field>
            <field name="arch" type="xml">
                <tree string="Course Tree" create="true" edit="true" delete="true">
					<field name="name" />
                    <field name="no"/>
                    <field name="credit"/>
					<!--<field name="teacher"/>-->
					<field name="description"/>
					<field name="responsible_id"/>
				</tree>
            </field>
        </record>

        <!-- window action -->
        <!--
            The following tag is an action definition for a "window action",
            that is an action opening a view or a set of views
        -->
        <record model="ir.actions.act_window" id="course_list_action">
            <field name="name">Courses</field>
            <field name="res_model">openacademy.course</field>
            <field name="view_type">form</field>
            <field name="view_mode">tree,form</field>
            <field name="search_view_id" ref="course_search_view_new"></field>
            <field name="context" eval="{'search_default_my_courses': 1}"/>
            <field name="domain">[('create_date','&gt;=', time.strftime('%Y-%m-%d 00:00:00')),('create_date', '&lt;', context_today().strftime('%Y-%m-%d 23:59:59'))]</field>
            <field name="help" type="html">
                <p class="oe_view_nocontent_create">Create the first course
                </p>
            </field>
        </record>

        <!-- 另外一种实现方式 -->
         <record id="course_list_server_action" model="ir.actions.server">
             <field name="name">Courses Server Action</field>
             <field name="model_id" ref="model_openacademy_course"/>
             <field name="state">code</field>
             <field name="code">
action = env["openacademy.scheduler_demo"].custom_funct_date()
             </field>
             <field eval="True" name="condition"/>
         </record>

        <record id="upload_course_list_server_action" model="ir.actions.server">
            <field name="name">Upload</field>
            <field name="type">ir.actions.server</field>
            <field name="model_id" ref="model_openacademy_course"></field>
            <field name="state">code</field>
            <field name="condition">True</field>
            <field name="code">
action = env["openacademy.scheduler_demo"].automated_action_method()
            </field>
        </record>

        <record id="course_list_custom_action" model="ir.values">
            <field name="name">Upload</field>
            <field name="model_id" ref="model_openacademy_course"></field>
            <field name="model">openacademy.course</field>
            <field name="key">action</field>
            <field name="key2">client_action_multi</field>
            <field name="value" eval="'ir.actions.server,' + str(ref('upload_course_list_server_action'))"></field>
            <field name="action_id" ref="upload_course_list_server_action"></field>
        </record>
    </data>
</odoo>