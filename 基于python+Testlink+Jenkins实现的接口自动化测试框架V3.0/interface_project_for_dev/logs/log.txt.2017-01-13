2017-01-13 10:39:16,244 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 10:39:16,246 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 10:39:16,263 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 10:39:16,352 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 10:41:13,374 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 10:41:13,375 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 10:41:13,388 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 10:41:13,391 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 10:46:14,944 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 10:46:14,944 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 10:46:14,956 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 10:46:14,959 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 10:48:05,842 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 10:48:05,843 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 10:48:05,857 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 10:48:05,860 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 10:49:26,542 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 10:49:26,542 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 10:49:26,716 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 10:49:26,853 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 10:50:05,552 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 10:50:05,553 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 10:50:05,565 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 10:50:05,567 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 10:50:05,857 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 10:50:05,858 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 10:50:05,930 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 10:50:05,930 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 10:50:05,958 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 10:50:05,984 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 10:50:05,984 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 10:50:06,757 global_function.py[line: 19] INFO: 获取测试用例信息 [{'layout': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'execution_type': '1', 'summary': '', 'name': 'test-n-登陆掌贝pos机', 'full_tc_external_id': 'pj_pos-1', 'is_open': '1', 'author_login': 'admin', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'updater_login': 'admin', 'active': '1', 'modification_ts': '2016-11-30 15:41:36', 'updater_first_name': 'Testlink', 'node_order': '1000', 'status': '1', 'id': '149', 'version': '1', 'testcase_id': '148', 'author_id': '1', 'importance': '2', 'updater_last_name': 'Administrator', 'creation_ts': '2016-07-27 18:32:10', 'updater_id': '1', 'steps': [{'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183'}, {'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182'}, {'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'step_number': '3', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150'}], 'tc_external_id': '1', 'estimated_exec_duration': '', 'testsuite_id': '147'}]
2017-01-13 10:50:06,929 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 10:50:07,585 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 10:50:07,585 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105005', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 10:50:07,614 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 10:50:07,615 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 10:50:07,615 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 10:50:07,615 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 10:50:07,615 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105005', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 10:50:07,624 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 10:50:07,625 global_function.py[line: 89] ERROR: 运行用例出错 global name 'str_dic' is not defined
2017-01-13 10:50:07,625 main.py[line: 75] INFO: 用例[148]运行结果：('Fail', '执行用例出错 148')
2017-01-13 10:50:07,625 main.py[line: 78] INFO: 按项目运行测试
2017-01-13 10:50:07,625 main.py[line: 115] INFO: 运行指定项目
2017-01-13 10:50:07,786 main.py[line: 131] INFO: 正在读取测项目[id：73, project：pj_wechatno]的协议，host，端口配置...
2017-01-13 10:50:07,787 main.py[line: 134] INFO: 成功读取配置信息：{"protocol":"http","host":"m.test.saofu.cn","port":80} 
2017-01-13 10:50:07,788 main.py[line: 150] INFO: 正在执行测试项目[id：73, project：pj_wechatno]
2017-01-13 10:50:07,788 testproject.py[line: 23] INFO: 正在获取测试项目[id：73, name：pj_wechatno]对应对应的测试计划名称列表
2017-01-13 10:50:08,005 testproject.py[line: 28] INFO: 成功获取项目测试计划名称列表[list=['plan1_of_wechatno']]
2017-01-13 10:50:08,168 testproject.py[line: 38] INFO: 正在执行项目测试计划[project：pj_wechatno，testplan：plan1_of_wechatno]
2017-01-13 10:50:08,169 testplan.py[line: 29] INFO: 正在获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例
2017-01-13 10:50:08,596 testplan.py[line: 35] INFO: 成功获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例id：dict_keys(['76', '120', '88', '98', '126', '93', '110', '102', '80', '114', '106'])
2017-01-13 10:50:08,784 testplan.py[line: 45] INFO: 获取测试用例信息 [{'layout': '1', 'preconditions': '', 'execution_type': '2', 'summary': '', 'name': 'test-n-显示默认页面', 'full_tc_external_id': 'wecharno-1', 'is_open': '1', 'author_login': 'admin', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'updater_login': 'admin', 'active': '1', 'modification_ts': '2016-11-29 18:17:12', 'updater_first_name': 'Testlink', 'node_order': '1000', 'status': '1', 'id': '77', 'version': '1', 'testcase_id': '76', 'author_id': '1', 'importance': '2', 'updater_last_name': 'Administrator', 'creation_ts': '2016-07-18 15:52:00', 'updater_id': '1', 'steps': [{'execution_type': '2', 'active': '1', 'expected_results': '<p>\n\t｛&ldquo;检查&rdquo;:&ldquo;BODY&rdquo;，</p>\n<p>\n\t&ldquo;匹配规则&rdquo;：&ldquo;包含字符串&rdquo;，</p>\n<p>\n\t&ldquo;条件&rdquo;：【｛&ldquo;模式&rdquo;：&ldquo;\\&quot;currentPage\\&quot;:1&rdquo;，&ldquo;消息&rdquo;：&ldquo;接口返回错误&rdquo;｝，｛&ldquo;模式&rdquo;：&ldquo;\\&quot;pageStartRow\\&quot;:0&quot;，&ldquo;消息&rdquo;：&ldquo;接口返回错误&rdquo;｝】</p>\n<p>\n\t｝</p>\n', 'step_number': '1', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/goods/plist&quot;,<br />\n\t&quot;参数&quot;:{&quot;page_size&quot;:&quot;10&quot;,&quot;page_no&quot;:&quot;1&quot;,&quot;cateIds&quot;:&quot;&quot;,&quot;orderBy&quot;:&quot;&quot;,&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;name&quot;:&quot;&quot;}<br />\n\t}</p>\n', 'id': '78'}], 'tc_external_id': '1', 'estimated_exec_duration': '', 'testsuite_id': '75'}]
2017-01-13 10:50:08,935 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 10:50:08,935 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105005', 76, 'test-n-显示默认页面', '微商城-显示商品列表接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 10:50:08,936 testplan.py[line: 72] INFO: 开始执行测试用例[id=76，name=test-n-显示默认页面]
2017-01-13 10:50:08,936 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"方法":"post","url":"/goods/plist","参数":{"page_size":"10","page_no":"1","cateIds":"","orderBy":"","serial":"[global_serial]","name":""}}
2017-01-13 10:50:08,936 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"BODY","匹配规则":"包含字符串","条件":[{"模式":"\"currentPage\":1","消息":"接口返回错误"},{"模式":"\"pageStartRow\":0","消息":"接口返回错误"}]}
2017-01-13 10:50:08,936 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 10:50:08,936 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105005', 76, 'test-n-显示默认页面', 'plan1_of_wechatno', 'pj_wechatno', 78, 1, '', 'http', 'm.test.saofu.cn', 80, '{"方法":"post","url":"/goods/plist","参数":{"page_size":"10","page_no":"1","cateIds":"","orderBy":"","serial":"[global_serial]","name":""}}', '{"检查":"BODY","匹配规则":"包含字符串","条件":[{"模式":"\\"currentPage\\":1","消息":"接口返回错误"},{"模式":"\\"pageStartRow\\":0","消息":"接口返回错误"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 10:50:08,937 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 10:50:08,937 casestep.py[line: 170] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_urlencode
2017-01-13 10:50:45,924 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 10:50:45,924 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 10:50:45,940 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 10:50:45,943 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 10:50:45,992 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 10:50:45,992 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 10:50:45,993 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 10:50:45,994 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 10:50:45,994 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 10:50:45,996 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 10:50:45,996 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 10:50:46,220 global_function.py[line: 19] INFO: 获取测试用例信息 [{'name': 'test-n-登陆掌贝pos机', 'updater_first_name': 'Testlink', 'testcase_id': '148', 'author_id': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'tc_external_id': '1', 'estimated_exec_duration': '', 'updater_login': 'admin', 'creation_ts': '2016-07-27 18:32:10', 'status': '1', 'full_tc_external_id': 'pj_pos-1', 'execution_type': '1', 'author_login': 'admin', 'id': '149', 'testsuite_id': '147', 'author_first_name': 'Testlink', 'summary': '', 'importance': '2', 'steps': [{'execution_type': '1', 'active': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'step_number': '1'}, {'execution_type': '1', 'active': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'step_number': '2'}, {'execution_type': '1', 'active': '1', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'step_number': '3'}], 'active': '1', 'node_order': '1000', 'updater_last_name': 'Administrator', 'layout': '1', 'updater_id': '1', 'author_last_name': 'Administrator', 'modification_ts': '2016-11-30 15:41:36', 'is_open': '1', 'version': '1'}]
2017-01-13 10:50:46,383 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 10:50:47,240 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 10:50:47,240 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105045', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 10:50:47,241 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 10:50:47,241 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 10:50:47,241 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 10:50:47,241 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 10:50:47,241 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105045', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 10:50:47,242 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 10:50:47,243 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 10:50:47,243 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 10:50:47,246 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 10:50:47,246 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 10:50:47,246 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 10:50:47,246 global_function.py[line: 89] ERROR: 运行用例出错 local variable 'result_of_step' referenced before assignment
2017-01-13 10:50:47,246 main.py[line: 75] INFO: 用例[148]运行结果：('Fail', '执行用例出错 148')
2017-01-13 10:50:47,246 main.py[line: 78] INFO: 按项目运行测试
2017-01-13 10:50:47,246 main.py[line: 115] INFO: 运行指定项目
2017-01-13 10:50:47,409 main.py[line: 131] INFO: 正在读取测项目[id：73, project：pj_wechatno]的协议，host，端口配置...
2017-01-13 10:50:47,409 main.py[line: 134] INFO: 成功读取配置信息：{"protocol":"http","host":"m.test.saofu.cn","port":80} 
2017-01-13 10:50:47,411 main.py[line: 150] INFO: 正在执行测试项目[id：73, project：pj_wechatno]
2017-01-13 10:50:47,412 testproject.py[line: 23] INFO: 正在获取测试项目[id：73, name：pj_wechatno]对应对应的测试计划名称列表
2017-01-13 10:50:47,571 testproject.py[line: 28] INFO: 成功获取项目测试计划名称列表[list=['plan1_of_wechatno']]
2017-01-13 10:50:47,753 testproject.py[line: 38] INFO: 正在执行项目测试计划[project：pj_wechatno，testplan：plan1_of_wechatno]
2017-01-13 10:50:47,753 testplan.py[line: 29] INFO: 正在获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例
2017-01-13 10:50:48,017 testplan.py[line: 35] INFO: 成功获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例id：dict_keys(['126', '88', '76', '98', '120', '80', '114', '106', '93', '110', '102'])
2017-01-13 10:50:48,189 testplan.py[line: 45] INFO: 获取测试用例信息 [{'name': 'test-n-免费领取优惠券', 'updater_first_name': 'Testlink', 'testcase_id': '126', 'author_id': '1', 'preconditions': '', 'tc_external_id': '12', 'estimated_exec_duration': '', 'updater_login': 'admin', 'creation_ts': '2016-07-26 15:06:38', 'status': '1', 'full_tc_external_id': 'wecharno-12', 'execution_type': '1', 'author_login': 'admin', 'id': '127', 'testsuite_id': '125', 'author_first_name': 'Testlink', 'summary': '<p>\n\t1、运行时，ulr中的40758966216286146560取自base_info.serial字段</p>\n<p>\n\t&nbsp;</p>\n<p>\n\t&nbsp;</p>\n', 'importance': '2', 'steps': [{'execution_type': '1', 'active': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行SQl&quot;,</p>\n<p>\n\t&quot;更新&quot;:&quot;UPDATE base_info SET sku_quantity = 1000&nbsp; WHERE serial = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(\\&quot;40758966216286146560\\&quot;,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '181', 'expected_results': '', 'step_number': '1'}, {'execution_type': '1', 'active': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;更新&quot;:&quot;</p>\n<pre style="background-color:#ffffff;color:#000000;font-family:\'宋体\';font-size:12pt;">\n<span style="color:#008080;font-weight:bold;">UPDATE base_info SET listing = 1  WHERE serial = %s</span>&quot;,\n</pre>\n<p>\n\t&quot;参数&quot;:&quot;(40758966216286146560,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '180', 'expected_results': '', 'step_number': '2'}, {'execution_type': '1', 'active': '1', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;urL&quot;:&quot;/kq/getincoupon/40758966216286146560/[global_openId]&quot;,<br />\n\t&quot;参数&quot;:&quot;&quot;<br />\n\t}</p>\n', 'id': '128', 'expected_results': '<p>\n\t{</p>\n<p>\n\t&quot;检查&quot;：&ldquo;body&rdquo;,</p>\n<p>\n\t&quot;匹配规则&quot;：&ldquo;包含字符串&rdquo;,</p>\n<p>\n\t&ldquo;条件&rdquo;：[{&quot;模式&quot;：&ldquo;success\\&quot;:true&quot;,&quot;消息&quot;：&ldquo;<span style="color:#008080;font-weight:bold;">success不为ture,领取卡券失败</span>&rdquo;}]</p>\n<p>\n\t}</p>\n', 'step_number': '3'}], 'active': '1', 'node_order': '1000', 'updater_last_name': 'Administrator', 'layout': '1', 'updater_id': '1', 'author_last_name': 'Administrator', 'modification_ts': '2016-11-29 19:43:22', 'is_open': '1', 'version': '1'}]
2017-01-13 10:50:48,342 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 10:50:48,342 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105045', 126, 'test-n-免费领取优惠券', '卡券中心-免费领取卡券接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 10:50:48,344 testplan.py[line: 72] INFO: 开始执行测试用例[id=126，name=test-n-免费领取优惠券]
2017-01-13 10:50:48,344 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行SQl","更新":"UPDATE base_info SET sku_quantity = 1000  WHERE serial = %s","参数":"(\"40758966216286146560\",)"}
2017-01-13 10:50:48,344 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：
2017-01-13 10:50:48,344 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 10:50:48,344 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 10:50:48,344 mydb.py[line: 72] INFO: query：UPDATE base_info SET sku_quantity = 1000  WHERE serial = 40758966216286146560
2017-01-13 10:59:04,202 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 10:59:04,203 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 10:59:04,214 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 10:59:04,223 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 10:59:04,331 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 10:59:04,332 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 10:59:04,334 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 10:59:04,334 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 10:59:04,336 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 10:59:04,341 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 10:59:04,341 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 10:59:04,525 global_function.py[line: 19] INFO: 获取测试用例信息 [{'importance': '2', 'preconditions': '<p>\n\t初始化用例</p>\n', 'author_login': 'admin', 'updater_last_name': 'Administrator', 'name': 'test-n-登陆掌贝pos机', 'is_open': '1', 'id': '149', 'author_last_name': 'Administrator', 'node_order': '1000', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'active': '1', 'id': '183', 'execution_type': '1'}, {'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '2', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'active': '1', 'id': '182', 'execution_type': '1'}, {'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'step_number': '3', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'active': '1', 'id': '150', 'execution_type': '1'}], 'execution_type': '1', 'author_first_name': 'Testlink', 'status': '1', 'testcase_id': '148', 'estimated_exec_duration': '', 'active': '1', 'version': '1', 'tc_external_id': '1', 'layout': '1', 'full_tc_external_id': 'pj_pos-1', 'creation_ts': '2016-07-27 18:32:10', 'modification_ts': '2016-11-30 15:41:36', 'updater_login': 'admin', 'updater_id': '1', 'author_id': '1', 'updater_first_name': 'Testlink', 'testsuite_id': '147', 'summary': ''}]
2017-01-13 10:59:04,684 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 10:59:05,435 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 10:59:05,435 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105904', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 10:59:05,438 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 10:59:05,439 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 10:59:05,439 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 10:59:05,440 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 10:59:05,440 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105904', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 10:59:05,443 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 10:59:05,444 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 10:59:05,445 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 10:59:05,449 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 10:59:05,449 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 10:59:05,450 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 10:59:05,451 global_function.py[line: 89] ERROR: 运行用例出错 local variable 'result_of_step' referenced before assignment
2017-01-13 10:59:05,452 main.py[line: 75] INFO: 用例[148]运行结果：('Fail', '执行用例出错 148')
2017-01-13 10:59:05,453 main.py[line: 78] INFO: 按项目运行测试
2017-01-13 10:59:05,454 main.py[line: 115] INFO: 运行指定项目
2017-01-13 10:59:05,575 main.py[line: 131] INFO: 正在读取测项目[id：73, project：pj_wechatno]的协议，host，端口配置...
2017-01-13 10:59:05,575 main.py[line: 134] INFO: 成功读取配置信息：{"protocol":"http","host":"m.test.saofu.cn","port":80} 
2017-01-13 10:59:05,583 main.py[line: 150] INFO: 正在执行测试项目[id：73, project：pj_wechatno]
2017-01-13 10:59:05,584 testproject.py[line: 23] INFO: 正在获取测试项目[id：73, name：pj_wechatno]对应对应的测试计划名称列表
2017-01-13 10:59:05,733 testproject.py[line: 28] INFO: 成功获取项目测试计划名称列表[list=['plan1_of_wechatno']]
2017-01-13 10:59:05,868 testproject.py[line: 38] INFO: 正在执行项目测试计划[project：pj_wechatno，testplan：plan1_of_wechatno]
2017-01-13 10:59:05,868 testplan.py[line: 29] INFO: 正在获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例
2017-01-13 10:59:06,131 testplan.py[line: 35] INFO: 成功获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例id：dict_keys(['98', '106', '110', '102', '80', '114', '93', '126', '76', '88', '120'])
2017-01-13 10:59:06,387 testplan.py[line: 45] INFO: 获取测试用例信息 [{'importance': '2', 'preconditions': '', 'author_login': 'admin', 'updater_last_name': 'Administrator', 'name': 'test-n-查看购物车商品列表', 'is_open': '1', 'id': '99', 'author_last_name': 'Administrator', 'node_order': '1000', 'steps': [{'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cartlist?&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}<br />\n\t&nbsp;</p>\n', 'step_number': '2', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;code&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;200&quot;,&quot;消息&quot;:&quot;把商品移出购物车中失败&quot;}]</p>\n<p>\n\t}</p>\n', 'active': '1', 'id': '101', 'execution_type': '1'}], 'execution_type': '1', 'author_first_name': 'Testlink', 'status': '1', 'testcase_id': '98', 'estimated_exec_duration': '', 'active': '1', 'version': '1', 'tc_external_id': '6', 'layout': '1', 'full_tc_external_id': 'wecharno-6', 'creation_ts': '2016-07-20 15:50:42', 'modification_ts': '2016-11-29 18:13:45', 'updater_login': 'admin', 'updater_id': '1', 'author_id': '1', 'updater_first_name': 'Testlink', 'testsuite_id': '97', 'summary': ''}]
2017-01-13 10:59:06,594 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 10:59:06,595 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105904', 98, 'test-n-查看购物车商品列表', '微商城-查看购物车商品列表接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 10:59:06,600 testplan.py[line: 72] INFO: 开始执行测试用例[id=98，name=test-n-查看购物车商品列表]
2017-01-13 10:59:06,602 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"方法":"get","url":"/cartlist?","参数":{"serial":"[global_serial]","openId":"[global_openId]"}} 
2017-01-13 10:59:06,603 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"code","匹配规则":"包含字符串","条件":[{"模式":"200","消息":"把商品移出购物车中失败"}]}
2017-01-13 10:59:06,604 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 10:59:06,605 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105904', 98, 'test-n-查看购物车商品列表', 'plan1_of_wechatno', 'pj_wechatno', 101, 2, '', 'http', 'm.test.saofu.cn', 80, '{"方法":"get","url":"/cartlist?","参数":{"serial":"[global_serial]","openId":"[global_openId]"}} ', '{"检查":"code","匹配规则":"包含字符串","条件":[{"模式":"200","消息":"把商品移出购物车中失败"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 10:59:06,611 testcase.py[line: 78] INFO: 开始执行步骤操作[第2步]
2017-01-13 10:59:06,612 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_urlencode
2017-01-13 10:59:06,614 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_serial]
2017-01-13 10:59:06,615 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 10:59:06,616 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('serial', '[global_serial]'), ('openId', 'ous64uFCCLMyXYDJ-MkNilyCI5CY')])
2017-01-13 10:59:06,617 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 10:59:06,619 InterfaceUnittestTestCase.py[line: 35] INFO: 正在发起GET请求...
2017-01-13 10:59:06,621 httpprotocol.py[line: 56] INFO: 发起的请求为：http://m.test.saofu.cn:80/cartlist?serial=%5Bglobal_serial%5D&openId=ous64uFCCLMyXYDJ-MkNilyCI5CY
2017-01-13 10:59:06,622 httpprotocol.py[line: 57] INFO: 请求头为：{'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5CY'}
2017-01-13 10:59:06,984 InterfaceUnittestTestCase.py[line: 40] INFO: 正在对服务器返回body进行解码
2017-01-13 10:59:07,000 InterfaceUnittestTestCase.py[line: 54] INFO: 服务器返回结果"响应体(body)": {"success":false,"code":"4000","message":"Server Error"}
2017-01-13 10:59:07,000 InterfaceUnittestTestCase.py[line: 55] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 02:59:04 GMT'), ('Content-Type', 'application/json;charset=ISO-8859-1'), ('Content-Length', '56'), ('Connection', 'close'), ('Vary', 'Accept-Encoding')]
2017-01-13 10:59:07,001 InterfaceUnittestTestCase.py[line: 56] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 10:59:07,002 unittesttestcase.py[line: 64] INFO: 要匹配的模式（子字符串）为：200
2017-01-13 10:59:07,003 unittesttestcase.py[line: 292] WARNING: 未检测到从服务器返回中提取内容的要求，请检查是否正确填写预期结果
2017-01-13 10:59:25,837 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 10:59:25,837 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 10:59:25,862 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 10:59:25,867 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 10:59:25,969 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 10:59:25,969 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 10:59:25,973 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 10:59:25,973 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 10:59:25,976 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 10:59:25,978 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 10:59:25,978 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 10:59:26,326 global_function.py[line: 19] INFO: 获取测试用例信息 [{'active': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'id': '149', 'author_login': 'admin', 'testcase_id': '148', 'layout': '1', 'updater_first_name': 'Testlink', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator', 'steps': [{'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'id': '183', 'active': '1', 'execution_type': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '2', 'id': '182', 'active': '1', 'execution_type': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'step_number': '3', 'id': '150', 'active': '1', 'execution_type': '1'}], 'author_id': '1', 'is_open': '1', 'importance': '2', 'tc_external_id': '1', 'full_tc_external_id': 'pj_pos-1', 'status': '1', 'updater_id': '1', 'version': '1', 'creation_ts': '2016-07-27 18:32:10', 'updater_login': 'admin', 'modification_ts': '2016-11-30 15:41:36', 'node_order': '1000', 'name': 'test-n-登陆掌贝pos机', 'testsuite_id': '147', 'execution_type': '1', 'summary': ''}]
2017-01-13 10:59:26,608 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 10:59:27,720 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 10:59:27,721 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105925', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 10:59:27,723 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 10:59:27,723 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 10:59:27,724 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 10:59:27,724 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 10:59:27,724 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105925', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 10:59:27,726 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 10:59:27,727 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 10:59:27,727 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 10:59:27,731 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 10:59:27,731 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 10:59:27,731 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 10:59:27,731 global_function.py[line: 89] ERROR: 运行用例出错 local variable 'result_of_step' referenced before assignment
2017-01-13 10:59:27,732 main.py[line: 75] INFO: 用例[148]运行结果：('Fail', '执行用例出错 148')
2017-01-13 10:59:27,732 main.py[line: 78] INFO: 按项目运行测试
2017-01-13 10:59:27,732 main.py[line: 115] INFO: 运行指定项目
2017-01-13 10:59:27,960 main.py[line: 131] INFO: 正在读取测项目[id：73, project：pj_wechatno]的协议，host，端口配置...
2017-01-13 10:59:27,960 main.py[line: 134] INFO: 成功读取配置信息：{"protocol":"http","host":"m.test.saofu.cn","port":80} 
2017-01-13 10:59:27,963 main.py[line: 150] INFO: 正在执行测试项目[id：73, project：pj_wechatno]
2017-01-13 10:59:27,963 testproject.py[line: 23] INFO: 正在获取测试项目[id：73, name：pj_wechatno]对应对应的测试计划名称列表
2017-01-13 10:59:28,204 testproject.py[line: 28] INFO: 成功获取项目测试计划名称列表[list=['plan1_of_wechatno']]
2017-01-13 10:59:28,412 testproject.py[line: 38] INFO: 正在执行项目测试计划[project：pj_wechatno，testplan：plan1_of_wechatno]
2017-01-13 10:59:28,412 testplan.py[line: 29] INFO: 正在获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例
2017-01-13 10:59:28,637 testplan.py[line: 35] INFO: 成功获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例id：dict_keys(['120', '88', '98', '126', '114', '106', '76', '102', '110', '93', '80'])
2017-01-13 10:59:28,856 testplan.py[line: 45] INFO: 获取测试用例信息 [{'active': '0', 'preconditions': '', 'id': '121', 'author_login': 'admin', 'testcase_id': '120', 'layout': '1', 'updater_first_name': 'Testlink', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator', 'steps': [{'expected_results': '<p>\n\t{&quot;success&quot;:1,&quot;output_arg1&quot;:&quot;CMOrder.attach&quot;}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;class&quot;:&quot;CMOrder&quot;,<br />\n\t&quot;function&quot;:&quot;test_create_mall_order&quot;,<br />\n\t&quot;method&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/cmorder/1/4&quot;,<br />\n\t&quot;params&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;,&quot;fm&quot;:1,&quot;mallGoodsId&quot;:&quot;26838&quot;, &quot;amount&quot;:2,&quot;cartIds&quot;:&quot;&quot;,&quot;fetchTime&quot;:&quot;&quot;, &quot;remark&quot;:&quot;&quot;}<br />\n\t}</p>\n', 'step_number': '1', 'id': '122', 'active': '1', 'execution_type': '1'}, {'expected_results': '<p>\n\t{&quot;button_name&quot;:&quot;确认支付&quot;, &quot;page_title&quot;:&quot;储值卡&quot;}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;class&quot;:&quot;Pay5&quot;,<br />\n\t&quot;function&quot;:&quot;test_pay5&quot;,<br />\n\t&quot;method&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/pay/5?&quot;,<br />\n\t&quot;params&quot;:{&quot;orderId&quot;:&quot;[CMOrder.attach]&quot;,&quot;serial&quot;:&quot;[global_serial]&quot;}<br />\n\t}</p>\n', 'step_number': '2', 'id': '123', 'active': '1', 'execution_type': '1'}, {'expected_results': '<p>\n\t{</p>\n<p>\n\t&quot;getByWeixin&quot;: 0, &quot;codeType&quot;: 2, &quot;title&quot;: &quot;动态校验&quot;, &quot;subTitle&quot;: &quot;动态校验&quot;, &quot;notice&quot;: &quot;动态校验&quot;, &quot;description&quot;: &quot;动态校验&quot;,&quot;useLimit&quot;:&quot;动态校验&quot;,&nbsp; &quot;dateInfoType&quot;: &quot;动态校验&quot;, &quot;cardType&quot;: 1,&quot;listing&quot;: 1, &quot;fitAll&quot;: 1,&quot;detailTxt&quot;: &quot;动态校验&quot;,&quot;servicePhone&quot;:&quot;动态校验&quot;,&quot;cashLeastCost&quot;: &quot;动态校验&quot;,&quot;cashReduceCost&quot;: &quot;动态校验&quot;,&quot;discount&quot;: 0,&quot;channel&quot;: -1,&quot;branchId&quot;: -1,&quot;success&quot;: 1, &quot;skuQuantity&quot;:&quot;动态校验&quot;,&quot;output_arg1&quot;:&quot;GetInCoupon.card_code&quot;</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;class&quot;:&quot;GetInCoupon&quot;,<br />\n\t&quot;function&quot;:&quot;test_get_in_coupon&quot;,<br />\n\t&quot;method&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/kq/getincoupon/40758966216286146560/[global_openId]&quot;,<br />\n\t&quot;params&quot;:&quot;&quot;<br />\n\t}</p>\n', 'step_number': '3', 'id': '124', 'active': '1', 'execution_type': '1'}, {'expected_results': '<p>\n\t{&quot;success&quot;:1, &quot;receipt_fee&quot;:&quot;动态校验&quot;, &quot;balance&quot;:&quot;动态校验&quot;, &quot;bonus&quot;:&quot;动态校验&quot;, &quot;sum_amount_expend&quot;:&quot;动态校验&quot;,&nbsp; &quot;sum_bonus_expend&quot;:&quot;动态校验&quot;, &quot;balance_total&quot;:&quot;动态校验&quot;,&quot;coupon_weixin_verification_record&quot;:1}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;class&quot;:&quot;CardPay&quot;,<br />\n\t&quot;function&quot;:&quot;test_account_pay_with_cash_discount&quot;,<br />\n\t&quot;method&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/pay/card/doconfirm&quot;,<br />\n\t&quot;params&quot;:{&quot;orderId&quot;:&quot;[var]&quot;, &quot;openId&quot;:&quot;[global_openId]&quot;, &quot;productOrderId&quot;:&quot;[CMOrder.attach]&quot;,&quot;customerId&quot;:&quot;[var]&quot;, &quot;type&quot;:1, &quot;cardId&quot;:&quot;&quot;,&quot;customerName&quot;:&quot;[var]&quot;, &quot;shopId&quot;:&quot;[var]&quot;, &quot;yhCardId&quot;:&quot;[GetInCoupon.card_code]&quot;,&quot;yhCardType&quot;:&quot;CASH&quot;}<br />\n\t}</p>\n', 'step_number': '4', 'id': '129', 'active': '1', 'execution_type': '1'}], 'author_id': '1', 'is_open': '1', 'importance': '2', 'tc_external_id': '11', 'full_tc_external_id': 'wecharno-11', 'status': '1', 'updater_id': '1', 'version': '1', 'creation_ts': '2016-07-26 12:12:10', 'updater_login': 'admin', 'modification_ts': '2016-07-29 18:31:36', 'node_order': '3', 'name': 'test-n-储值卡支付-仅使用代金券优惠，会员账户支付', 'testsuite_id': '109', 'execution_type': '1', 'summary': '<p>\n\t消费不赠送积分,单规格商品</p>\n<p>\n\tulr中的40758966216286146560取自base_info.serial字段</p>\n'}]
2017-01-13 10:59:29,080 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 10:59:29,080 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105925', 120, 'test-n-储值卡支付-仅使用代金券优惠，会员账户支付', '微商城-储值卡支付接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 10:59:29,083 testplan.py[line: 72] INFO: 开始执行测试用例[id=120，name=test-n-储值卡支付-仅使用代金券优惠，会员账户支付]
2017-01-13 10:59:29,083 testcase.py[line: 28] WARNING: 用例[name=test-n-储值卡支付-仅使用代金券优惠，会员账户支付]处于禁用状态[active=0]，不执行
2017-01-13 10:59:29,083 testplan.py[line: 76] INFO: 正在更新用例执行结果
2017-01-13 10:59:29,084 mydb.py[line: 72] INFO: query：UPDATE testcase_report_tb SET runresult="Block", runtime="2017-01-13 10:59:29" WHERE executed_history_id = 20170113105925 AND testcase_id = 120 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 10:59:29,375 testplan.py[line: 87] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=120]的执行结果
2017-01-13 10:59:29,589 testplan.py[line: 45] INFO: 获取测试用例信息 [{'active': '1', 'preconditions': '', 'id': '89', 'author_login': 'admin', 'testcase_id': '88', 'layout': '1', 'updater_first_name': 'Testlink', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator', 'steps': [{'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;customer_id&quot;:1}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT id FROM customer WHERE channel_serial=%s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(\\&quot;[global_openId]\\&quot;,)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'id': '175', 'active': '1', 'execution_type': '1'}, {'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;更新&quot;:&quot;UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.customer_id],)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '2', 'id': '174', 'active': '1', 'execution_type': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;键值相等&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:true}, &quot;消息&quot;:&quot;把商品加如购物车失败，success不为true&quot;}]</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/addtocart&quot;,<br />\n\t&quot;参数&quot;:{&quot;mallGoodsId&quot;:26838,&quot;standardId&quot;:&quot;undefined&quot;,&quot;amount&quot;:1,&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}</p>\n', 'step_number': '3', 'id': '90', 'active': '1', 'execution_type': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;strIds&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT id FROM mall_shopping_cart WHERE customer_id = %s and closed=%s ORDER BY id DESC LIMIT 1&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.customer_id],1)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '4', 'id': '176', 'active': '1', 'execution_type': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;\\&quot;amount\\&quot;:1&quot;,&quot;消息&quot;:&quot;购物车中商品总数错误&quot;}, {&quot;模式&quot;:&quot;\\&quot;id\\&quot;:26838&quot;,&quot;消息&quot;:&quot;购物车中商品缺失&quot;}]</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cartlist?&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}<br />\n\t&nbsp;</p>\n', 'step_number': '5', 'id': '177', 'active': '1', 'execution_type': '1'}], 'author_id': '1', 'is_open': '1', 'importance': '2', 'tc_external_id': '4', 'full_tc_external_id': 'wecharno-4', 'status': '1', 'updater_id': '1', 'version': '1', 'creation_ts': '2016-07-20 12:07:40', 'updater_login': 'admin', 'modification_ts': '2016-11-29 17:58:09', 'node_order': '1000', 'name': 'test-n-把商品加入购物车', 'testsuite_id': '87', 'execution_type': '1', 'summary': ''}]
2017-01-13 10:59:29,780 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 10:59:29,781 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105925', 88, 'test-n-把商品加入购物车', '微商城-把商品加入购物车接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 10:59:29,783 testplan.py[line: 72] INFO: 开始执行测试用例[id=88，name=test-n-把商品加入购物车]
2017-01-13 10:59:29,783 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT id FROM customer WHERE channel_serial=%s","参数":"(\"[global_openId]\",)"}
2017-01-13 10:59:29,783 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"customer_id":1}}
2017-01-13 10:59:29,784 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 10:59:29,784 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105925', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 175, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT id FROM customer WHERE channel_serial=%s","参数":"(\\"[global_openId]\\",)"}', '{"检查":"body","输出":{"customer_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 10:59:29,786 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 10:59:29,786 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 10:59:29,786 casestep.py[line: 149] INFO: 转换后的参数体为：("ous64uFCCLMyXYDJ-MkNilyCI5CY",)
2017-01-13 10:59:29,786 mydb.py[line: 87] INFO: query：SELECT id FROM customer WHERE channel_serial=%s  data：('ous64uFCCLMyXYDJ-MkNilyCI5CY',)
2017-01-13 10:59:29,790 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(167020,), flag:True
2017-01-13 10:59:29,790 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 10:59:29,791 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'customer_id': 167020}]
2017-01-13 10:59:40,901 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 10:59:40,902 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 10:59:40,913 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 10:59:40,920 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 10:59:41,030 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 10:59:41,031 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 10:59:41,033 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 10:59:41,033 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 10:59:41,035 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 10:59:41,040 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 10:59:41,040 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 10:59:41,224 global_function.py[line: 19] INFO: 获取测试用例信息 [{'status': '1', 'modification_ts': '2016-11-30 15:41:36', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'step_number': '1', 'execution_type': '1', 'active': '1'}, {'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'step_number': '2', 'execution_type': '1', 'active': '1'}, {'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'step_number': '3', 'execution_type': '1', 'active': '1'}], 'author_login': 'admin', 'tc_external_id': '1', 'active': '1', 'summary': '', 'updater_last_name': 'Administrator', 'execution_type': '1', 'is_open': '1', 'author_last_name': 'Administrator', 'id': '149', 'creation_ts': '2016-07-27 18:32:10', 'version': '1', 'updater_first_name': 'Testlink', 'updater_login': 'admin', 'layout': '1', 'testcase_id': '148', 'estimated_exec_duration': '', 'node_order': '1000', 'testsuite_id': '147', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t初始化用例</p>\n', 'full_tc_external_id': 'pj_pos-1', 'name': 'test-n-登陆掌贝pos机', 'author_id': '1', 'importance': '2', 'updater_id': '1'}]
2017-01-13 10:59:41,359 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 10:59:41,993 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 10:59:41,994 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105940', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 10:59:41,996 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 10:59:41,996 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 10:59:41,997 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 10:59:41,998 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 10:59:41,998 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113105940', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 10:59:42,001 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 10:59:47,533 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 10:59:47,534 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 10:59:47,538 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 10:59:47,539 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 10:59:47,539 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 11:02:27,237 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 11:02:27,238 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 11:02:27,248 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 11:02:27,254 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 11:02:27,363 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 11:02:27,364 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 11:02:27,367 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 11:02:27,368 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 11:02:27,371 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 11:02:27,376 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 11:02:27,377 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 11:02:27,558 global_function.py[line: 19] INFO: 获取测试用例信息 [{'author_first_name': 'Testlink', 'updater_login': 'admin', 'author_login': 'admin', 'author_last_name': 'Administrator', 'name': 'test-n-登陆掌贝pos机', 'full_tc_external_id': 'pj_pos-1', 'summary': '', 'version': '1', 'execution_type': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'steps': [{'id': '183', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'active': '1', 'execution_type': '1'}, {'id': '182', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '2', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'active': '1', 'execution_type': '1'}, {'id': '150', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'step_number': '3', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'active': '1', 'execution_type': '1'}], 'layout': '1', 'testsuite_id': '147', 'node_order': '1000', 'estimated_exec_duration': '', 'updater_id': '1', 'updater_last_name': 'Administrator', 'is_open': '1', 'testcase_id': '148', 'author_id': '1', 'id': '149', 'tc_external_id': '1', 'importance': '2', 'creation_ts': '2016-07-27 18:32:10', 'updater_first_name': 'Testlink', 'modification_ts': '2016-11-30 15:41:36', 'active': '1', 'status': '1'}]
2017-01-13 11:02:27,676 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 11:02:28,316 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 11:02:28,317 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110227', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 11:02:28,319 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 11:02:28,319 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 11:02:28,320 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 11:02:28,321 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:02:28,321 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110227', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:02:28,324 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:03:17,160 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:03:17,161 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 11:03:17,165 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 11:03:17,167 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:03:17,167 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 11:04:36,630 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 11:04:36,630 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 11:04:36,643 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 11:04:36,645 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 11:04:36,690 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 11:04:36,690 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 11:04:36,691 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 11:04:36,691 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 11:04:36,692 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 11:04:36,693 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 11:04:36,693 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 11:04:36,820 global_function.py[line: 19] INFO: 获取测试用例信息 [{'estimated_exec_duration': '', 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'testcase_id': '148', 'full_tc_external_id': 'pj_pos-1', 'node_order': '1000', 'author_id': '1', 'name': 'test-n-登陆掌贝pos机', 'importance': '2', 'updater_id': '1', 'is_open': '1', 'tc_external_id': '1', 'version': '1', 'id': '149', 'steps': [{'step_number': '1', 'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183'}, {'step_number': '2', 'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182'}, {'step_number': '3', 'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150'}], 'updater_login': 'admin', 'creation_ts': '2016-07-27 18:32:10', 'active': '1', 'modification_ts': '2016-11-30 15:41:36', 'author_login': 'admin', 'status': '1', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t初始化用例</p>\n', 'summary': '', 'layout': '1', 'testsuite_id': '147', 'execution_type': '1'}]
2017-01-13 11:04:36,936 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 11:04:37,525 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 11:04:37,525 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110436', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 11:04:37,526 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 11:04:37,526 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 11:04:37,526 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 11:04:37,526 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:04:37,526 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110436', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:04:37,527 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:04:37,528 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:04:37,528 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 11:04:37,532 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 11:04:37,532 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:04:37,532 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 11:04:37,533 global_function.py[line: 89] ERROR: 运行用例出错 local variable 'result_of_step' referenced before assignment
2017-01-13 11:04:37,533 main.py[line: 75] INFO: 用例[148]运行结果：('Fail', '执行用例出错 148')
2017-01-13 11:04:37,533 main.py[line: 78] INFO: 按项目运行测试
2017-01-13 11:04:37,533 main.py[line: 115] INFO: 运行指定项目
2017-01-13 11:04:37,650 main.py[line: 131] INFO: 正在读取测项目[id：73, project：pj_wechatno]的协议，host，端口配置...
2017-01-13 11:04:37,650 main.py[line: 134] INFO: 成功读取配置信息：{"protocol":"http","host":"m.test.saofu.cn","port":80} 
2017-01-13 11:04:37,652 main.py[line: 150] INFO: 正在执行测试项目[id：73, project：pj_wechatno]
2017-01-13 11:04:37,652 testproject.py[line: 23] INFO: 正在获取测试项目[id：73, name：pj_wechatno]对应对应的测试计划名称列表
2017-01-13 11:04:37,779 testproject.py[line: 28] INFO: 成功获取项目测试计划名称列表[list=['plan1_of_wechatno']]
2017-01-13 11:04:37,897 testproject.py[line: 38] INFO: 正在执行项目测试计划[project：pj_wechatno，testplan：plan1_of_wechatno]
2017-01-13 11:04:37,897 testplan.py[line: 29] INFO: 正在获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例
2017-01-13 11:04:38,019 testplan.py[line: 35] INFO: 成功获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例id：dict_keys(['106', '120', '98', '88', '126', '110', '76', '93', '102', '80', '114'])
2017-01-13 11:04:38,143 testplan.py[line: 45] INFO: 获取测试用例信息 [{'estimated_exec_duration': '', 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'testcase_id': '106', 'full_tc_external_id': 'wecharno-8', 'node_order': '1000', 'author_id': '1', 'name': 'test-n-创建储值卡支付订单', 'importance': '2', 'updater_id': '1', 'is_open': '1', 'tc_external_id': '8', 'version': '1', 'id': '107', 'steps': [{'step_number': '1', 'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;\\&quot;success\\&quot;:true&quot;, &quot;消息&quot;:&quot;创建储值卡支付订单失败，success不为True&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;success&quot;: &quot;\\&quot;success\\&quot;:(.+?),&quot;,&quot;attach&quot;:&quot;attach\\&quot;:\\&quot;(.+?)\\&quot;&quot;}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;请求头&quot;：{&quot;Content-Type&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;charset&quot;:&quot;utf-8&quot;},<br />\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/cmorder/1/4&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;,&quot;fm&quot;:1,&quot;mallGoodsId&quot;:&quot;26838&quot;, &quot;amount&quot;:1,&quot;cartIds&quot;:&quot;&quot;,&quot;fetchTime&quot;:&quot;&quot;, &quot;remark&quot;:&quot;&quot;}<br />\n\t}</p>\n', 'id': '108'}], 'updater_login': 'admin', 'creation_ts': '2016-07-21 11:26:32', 'active': '1', 'modification_ts': '2016-11-29 17:33:09', 'author_login': 'admin', 'status': '1', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'preconditions': '', 'summary': '', 'layout': '1', 'testsuite_id': '105', 'execution_type': '1'}]
2017-01-13 11:04:38,285 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 11:04:38,285 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110436', 106, 'test-n-创建储值卡支付订单', '微商城-创建储值卡支付订单接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 11:04:38,286 testplan.py[line: 72] INFO: 开始执行测试用例[id=106，name=test-n-创建储值卡支付订单]
2017-01-13 11:04:38,286 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"请求头":{"Content-Type":"application/x-www-form-urlencoded","charset":"utf-8"},"方法":"post","url":"/cmorder/1/4","参数":{"serial":"[global_serial]","openId":"[global_openId]","fm":1,"mallGoodsId":"26838", "amount":1,"cartIds":"","fetchTime":"", "remark":""}}
2017-01-13 11:04:38,287 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"包含字符串","条件":[{"模式":"\"success\":true", "消息":"创建储值卡支付订单失败,success不为True"}],"输出":{"success": "\"success\":(.+?),","attach":"attach\":\"(.+?)\""}}
2017-01-13 11:04:38,287 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:04:38,287 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110436', 106, 'test-n-创建储值卡支付订单', 'plan1_of_wechatno', 'pj_wechatno', 108, 1, '', 'http', 'm.test.saofu.cn', 80, '{"请求头":{"Content-Type":"application/x-www-form-urlencoded","charset":"utf-8"},"方法":"post","url":"/cmorder/1/4","参数":{"serial":"[global_serial]","openId":"[global_openId]","fm":1,"mallGoodsId":"26838", "amount":1,"cartIds":"","fetchTime":"", "remark":""}}', '{"检查":"body","匹配规则":"包含字符串","条件":[{"模式":"\\"success\\":true", "消息":"创建储值卡支付订单失败,success不为True"}],"输出":{"success": "\\"success\\":(.+?),","attach":"attach\\":\\"(.+?)\\""}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:04:38,288 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:04:38,289 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_urlencode
2017-01-13 11:04:38,289 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_serial]
2017-01-13 11:04:38,289 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 11:04:38,289 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('serial', '[global_serial]'), ('openId', 'ous64uFCCLMyXYDJ-MkNilyCI5CY'), ('fm', 1), ('mallGoodsId', '26838'), ('amount', 1), ('cartIds', ''), ('fetchTime', ''), ('remark', '')])
2017-01-13 11:04:38,289 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:04:38,290 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:04:38,290 InterfaceUnittestTestCase.py[line: 30] INFO: 正在发起POST请求...
2017-01-13 11:04:38,290 httpprotocol.py[line: 74] INFO: 发起的请求为：http://m.test.saofu.cn:80/cmorder/1/4
2017-01-13 11:04:38,290 httpprotocol.py[line: 75] INFO: 参数为：b'serial=%5Bglobal_serial%5D&openId=ous64uFCCLMyXYDJ-MkNilyCI5CY&fm=1&mallGoodsId=26838&amount=1&cartIds=&fetchTime=&remark='
2017-01-13 11:04:38,291 httpprotocol.py[line: 76] INFO: 请求头为：OrderedDict([('Content-Type', 'application/x-www-form-urlencoded'), ('charset', 'utf-8'), ('Cookie', '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5CY')])
2017-01-13 11:04:38,497 InterfaceUnittestTestCase.py[line: 40] INFO: 正在对服务器返回body进行解码
2017-01-13 11:04:38,497 InterfaceUnittestTestCase.py[line: 54] INFO: 服务器返回结果"响应体(body)": {"success":false,"message":"系统错误","attach":null}
2017-01-13 11:04:38,497 InterfaceUnittestTestCase.py[line: 55] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 03:04:36 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding')]
2017-01-13 11:04:38,497 InterfaceUnittestTestCase.py[line: 56] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 11:04:38,498 unittesttestcase.py[line: 64] INFO: 要匹配的模式（子字符串）为："success":true
2017-01-13 11:04:38,499 testcase.py[line: 129] INFO: 步骤[1]执行失败,停止执行用例[id=106, name=test-n-创建储值卡支付订单]
2017-01-13 11:05:54,917 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 11:05:54,917 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 11:05:54,930 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 11:05:54,933 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 11:05:54,981 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 11:05:54,981 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 11:05:54,983 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 11:05:54,983 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 11:05:54,984 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 11:05:54,986 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 11:05:54,986 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 11:05:55,178 global_function.py[line: 19] INFO: 获取测试用例信息 [{'importance': '2', 'name': 'test-n-登陆掌贝pos机', 'version': '1', 'estimated_exec_duration': '', 'is_open': '1', 'tc_external_id': '1', 'updater_id': '1', 'testsuite_id': '147', 'full_tc_external_id': 'pj_pos-1', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'author_login': 'admin', 'modification_ts': '2016-11-30 15:41:36', 'updater_login': 'admin', 'status': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'layout': '1', 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'summary': '', 'execution_type': '1', 'author_id': '1', 'id': '149', 'steps': [{'execution_type': '1', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '1'}, {'execution_type': '1', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '2'}, {'execution_type': '1', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'active': '1', 'step_number': '3'}], 'creation_ts': '2016-07-27 18:32:10', 'testcase_id': '148', 'active': '1', 'node_order': '1000'}]
2017-01-13 11:05:55,330 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 11:05:55,984 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 11:05:55,984 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110554', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 11:05:55,985 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 11:05:55,986 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 11:05:55,986 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 11:05:55,986 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:05:55,986 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110554', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:05:55,988 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:05:55,988 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:05:55,989 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 11:05:55,991 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 11:05:55,991 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:05:55,992 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 11:05:55,992 global_function.py[line: 89] ERROR: 运行用例出错 local variable 'result_of_step' referenced before assignment
2017-01-13 11:05:55,992 main.py[line: 75] INFO: 用例[148]运行结果：('Fail', '执行用例出错 148')
2017-01-13 11:05:55,992 main.py[line: 78] INFO: 按项目运行测试
2017-01-13 11:05:55,992 main.py[line: 115] INFO: 运行指定项目
2017-01-13 11:05:56,110 main.py[line: 131] INFO: 正在读取测项目[id：73, project：pj_wechatno]的协议，host，端口配置...
2017-01-13 11:05:56,111 main.py[line: 134] INFO: 成功读取配置信息：{"protocol":"http","host":"m.test.saofu.cn","port":80} 
2017-01-13 11:05:56,112 main.py[line: 150] INFO: 正在执行测试项目[id：73, project：pj_wechatno]
2017-01-13 11:05:56,112 testproject.py[line: 23] INFO: 正在获取测试项目[id：73, name：pj_wechatno]对应对应的测试计划名称列表
2017-01-13 11:05:56,231 testproject.py[line: 28] INFO: 成功获取项目测试计划名称列表[list=['plan1_of_wechatno']]
2017-01-13 11:05:56,382 testproject.py[line: 38] INFO: 正在执行项目测试计划[project：pj_wechatno，testplan：plan1_of_wechatno]
2017-01-13 11:05:56,382 testplan.py[line: 29] INFO: 正在获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例
2017-01-13 11:05:56,527 testplan.py[line: 35] INFO: 成功获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例id：dict_keys(['93', '114', '120', '102', '126', '98', '88', '110', '80', '106', '76'])
2017-01-13 11:05:56,645 testplan.py[line: 45] INFO: 获取测试用例信息 [{'importance': '2', 'name': 'test-n-把商品移出购物车', 'version': '1', 'estimated_exec_duration': '', 'is_open': '1', 'tc_external_id': '5', 'updater_id': '1', 'testsuite_id': '91', 'full_tc_external_id': 'wecharno-5', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'author_login': 'admin', 'modification_ts': '2016-11-29 18:05:21', 'updater_login': 'admin', 'status': '1', 'preconditions': '', 'layout': '1', 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'summary': '', 'execution_type': '1', 'author_id': '1', 'id': '94', 'steps': [{'execution_type': '1', 'id': '95', 'expected_results': '', 'actions': '<p>\n\t{<br />\n\t&quot;步骤类型&quot;:&quot;执行用例&quot;,</p>\n<p>\n\t&quot;用例id&quot;:88,</p>\n<p>\n\t&quot;用例名称&quot;:&quot;test-n-把商品加入购物车&quot;<br />\n\t}</p>\n<p>\n\t&nbsp;</p>\n', 'active': '1', 'step_number': '1'}, {'execution_type': '1', 'id': '96', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;键值相等&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:true}, &quot;消息&quot;:&quot;把商品移出购物车失败，success不为true&quot;}]</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cart/delfromcart?&quot;,<br />\n\t&quot;参数&quot;:{&quot;strIds&quot;:&quot;[CaseStep.strIds]&quot;,&quot;serial&quot;:&quot;[global_serial]&quot;}<br />\n\t}</p>\n', 'active': '1', 'step_number': '2'}, {'execution_type': '1', 'id': '178', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;[]&quot;,&quot;消息&quot;:&quot;把商品移出购物车中失败&quot;}]</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cartlist?&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}<br />\n\t&nbsp;</p>\n', 'active': '1', 'step_number': '3'}], 'creation_ts': '2016-07-20 12:25:46', 'testcase_id': '93', 'active': '1', 'node_order': '1000'}]
2017-01-13 11:05:56,764 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 11:05:56,764 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110554', 93, 'test-n-把商品移出购物车', '微商城-把商品移出购物车接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 11:05:56,766 testplan.py[line: 72] INFO: 开始执行测试用例[id=93，name=test-n-把商品移出购物车]
2017-01-13 11:05:56,766 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行用例","用例id":88,"用例名称":"test-n-把商品加入购物车"} 
2017-01-13 11:05:56,766 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：
2017-01-13 11:05:56,766 testcase.py[line: 51] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:05:56,766 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110554', 93, 'test-n-把商品移出购物车', 'plan1_of_wechatno', 'pj_wechatno', 95, 1, '无', '无', '无', '无', '{"步骤类型":"执行用例","用例id":88,"用例名称":"test-n-把商品加入购物车"} ', '', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:05:56,767 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:05:56,893 global_function.py[line: 19] INFO: 获取测试用例信息 [{'importance': '2', 'name': 'test-n-把商品加入购物车', 'version': '1', 'estimated_exec_duration': '', 'is_open': '1', 'tc_external_id': '4', 'updater_id': '1', 'testsuite_id': '87', 'full_tc_external_id': 'wecharno-4', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'author_login': 'admin', 'modification_ts': '2016-11-29 17:58:09', 'updater_login': 'admin', 'status': '1', 'preconditions': '', 'layout': '1', 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'summary': '', 'execution_type': '1', 'author_id': '1', 'id': '89', 'steps': [{'execution_type': '1', 'id': '175', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;customer_id&quot;:1}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT id FROM customer WHERE channel_serial=%s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(\\&quot;[global_openId]\\&quot;,)&quot;</p>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '1'}, {'execution_type': '1', 'id': '174', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;更新&quot;:&quot;UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.customer_id],)&quot;</p>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '2'}, {'execution_type': '1', 'id': '90', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;键值相等&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:true}, &quot;消息&quot;:&quot;把商品加如购物车失败，success不为true&quot;}]</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/addtocart&quot;,<br />\n\t&quot;参数&quot;:{&quot;mallGoodsId&quot;:26838,&quot;standardId&quot;:&quot;undefined&quot;,&quot;amount&quot;:1,&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}</p>\n', 'active': '1', 'step_number': '3'}, {'execution_type': '1', 'id': '176', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;strIds&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT id FROM mall_shopping_cart WHERE customer_id = %s and closed=%s ORDER BY id DESC LIMIT 1&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.customer_id],1)&quot;</p>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '4'}, {'execution_type': '1', 'id': '177', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;\\&quot;amount\\&quot;:1&quot;,&quot;消息&quot;:&quot;购物车中商品总数错误&quot;}, {&quot;模式&quot;:&quot;\\&quot;id\\&quot;:26838&quot;,&quot;消息&quot;:&quot;购物车中商品缺失&quot;}]</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cartlist?&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}<br />\n\t&nbsp;</p>\n', 'active': '1', 'step_number': '5'}], 'creation_ts': '2016-07-20 12:07:40', 'testcase_id': '88', 'active': '1', 'node_order': '1000'}]
2017-01-13 11:05:57,016 global_function.py[line: 39] INFO: 正在读取套件[id=87]的协议，host，端口配置...
2017-01-13 11:05:57,259 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 11:05:57,259 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110554', 88, 'test-n-把商品加入购物车', '把商品加入购物车接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '0000-00-00 00:00:00')
2017-01-13 11:05:57,261 global_function.py[line: 71] INFO: 开始执行测试用例[id=88，name=test-n-把商品加入购物车]
2017-01-13 11:05:57,261 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT id FROM customer WHERE channel_serial=%s","参数":"(\"[global_openId]\",)"}
2017-01-13 11:05:57,261 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"customer_id":1}}
2017-01-13 11:05:57,261 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:05:57,261 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110554', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 175, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT id FROM customer WHERE channel_serial=%s","参数":"(\\"[global_openId]\\",)"}', '{"检查":"body","输出":{"customer_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:05:57,263 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:05:57,263 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 11:05:57,263 casestep.py[line: 149] INFO: 转换后的参数体为：("ous64uFCCLMyXYDJ-MkNilyCI5CY",)
2017-01-13 11:05:57,263 mydb.py[line: 87] INFO: query：SELECT id FROM customer WHERE channel_serial=%s  data：('ous64uFCCLMyXYDJ-MkNilyCI5CY',)
2017-01-13 11:05:57,267 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(167020,), flag:True
2017-01-13 11:05:57,267 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:05:57,267 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'customer_id': 167020}]
2017-01-13 11:05:57,267 global_function.py[line: 89] ERROR: 运行用例出错 local variable 'result_of_step' referenced before assignment
2017-01-13 11:07:51,931 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 11:07:51,931 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 11:07:51,947 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 11:07:51,951 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 11:07:52,010 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 11:07:52,010 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 11:07:52,012 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 11:07:52,012 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 11:07:52,013 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 11:07:52,015 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 11:07:52,016 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 11:07:52,157 global_function.py[line: 19] INFO: 获取测试用例信息 [{'updater_first_name': 'Testlink', 'is_open': '1', 'updater_id': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'full_tc_external_id': 'pj_pos-1', 'author_login': 'admin', 'testsuite_id': '147', 'version': '1', 'estimated_exec_duration': '', 'modification_ts': '2016-11-30 15:41:36', 'execution_type': '1', 'steps': [{'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'execution_type': '1'}, {'active': '1', 'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'execution_type': '1'}, {'active': '1', 'step_number': '3', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'execution_type': '1'}], 'name': 'test-n-登陆掌贝pos机', 'creation_ts': '2016-07-27 18:32:10', 'testcase_id': '148', 'status': '1', 'id': '149', 'updater_login': 'admin', 'author_first_name': 'Testlink', 'author_id': '1', 'active': '1', 'node_order': '1000', 'importance': '2', 'updater_last_name': 'Administrator', 'author_last_name': 'Administrator', 'tc_external_id': '1', 'layout': '1', 'summary': ''}]
2017-01-13 11:07:52,273 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 11:07:52,864 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 11:07:52,865 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 11:07:52,866 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 11:07:52,866 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 11:07:52,867 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 11:07:52,867 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:07:52,867 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:07:52,869 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:07:52,870 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:07:52,870 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 11:07:52,873 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 11:07:52,873 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:07:52,873 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 11:07:52,873 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:07:52,874 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:07:52",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT branch_id FROM account_operator WHERE id = %s', '\u53c2\u6570': [1318]}", expected_results="{'输出': {'branch_id': 1}, '检查': 'body'}" WHERE executed_history_id = 20170113110751 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:07:52,894 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2017-01-13 11:07:52,894 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2017-01-13 11:07:52,894 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:07:52,894 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:07:52,897 testcase.py[line: 78] INFO: 开始执行步骤操作[第2步]
2017-01-13 11:07:52,897 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2017-01-13 11:07:52,897 casestep.py[line: 149] INFO: 转换后的参数体为：(1485916418,)
2017-01-13 11:07:52,897 mydb.py[line: 87] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2017-01-13 11:07:52,901 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2017-01-13 11:07:52,901 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:07:52,902 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2017-01-13 11:07:52,902 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:07:52,902 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:07:52",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '\u53c2\u6570': [1485916418]}", expected_results="{'输出': {'serial_no': 2, 'device_no': 1}, '检查': 'body'}" WHERE executed_history_id = 20170113110751 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:07:52,904 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2017-01-13 11:07:52,904 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2017-01-13 11:07:52,905 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:07:52,905 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:07:52,907 testcase.py[line: 78] INFO: 开始执行步骤操作[第3步]
2017-01-13 11:07:52,907 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2017-01-13 11:07:52,908 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:07:52,908 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:07:52,908 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2017-01-13 11:07:52,908 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2017-01-13 11:07:52,909 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_product_version]
2017-01-13 11:07:52,909 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2017-01-13 11:07:52,909 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('DeviceId', '[CaseStep.device_no]'), ('SerialNo', '[CaseStep.serial_no]'), ('Content-Type', 'application/json;charset=utf-8'), ('ProductVersion', '[global_product_version]'), ('ProtocolVersion', '4.0')])
2017-01-13 11:07:52,909 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2017-01-13 11:07:52,910 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2017-01-13 11:07:52,910 httpprotocol.py[line: 75] INFO: 参数为：b'{"id": "1318", "password": "e10adc3949ba59abbe56e057f20f883e"}'
2017-01-13 11:07:52,910 httpprotocol.py[line: 76] INFO: 请求头为：OrderedDict([('DeviceId', '[CaseStep.device_no]'), ('SerialNo', '[CaseStep.serial_no]'), ('Content-Type', 'application/json;charset=utf-8'), ('ProductVersion', '[global_product_version]'), ('ProtocolVersion', '4.0')])
2017-01-13 11:07:53,344 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2017-01-13 11:07:53,344 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"code":"4000","reason":"查询设备信息失败，设备未出货或未激活","success":false}
2017-01-13 11:07:53,344 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 03:07:51 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2017-01-13 11:07:53,344 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 11:07:53,345 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2017-01-13 11:07:53,345 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：False
2017-01-13 11:07:53,346 testcase.py[line: 129] INFO: 步骤[3]执行失败,停止执行用例[id=148, name=test-n-登陆掌贝pos机]
2017-01-13 11:07:53,346 testcase.py[line: 136] INFO: 正在更新步骤执行结果
2017-01-13 11:07:53,346 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 126, in test_interface_of_json    self.assert_result(body)  File E:\Projects\interface_project_for_dev\unittesttestcase.py, line 113, in assert_result    self.assertEqual(dict_level_list[len(dict_level_list) -1], last_value, item[消息])AssertionError: True != False : 登录失败,success不为true", protocol_method="post", runtime="2017-01-13 11:07:52",step_action="{'\u51fd\u6570': 'test_interface_of_json', '\u8bf7\u6c42\u5934': {'DeviceId': '[CaseStep.device_no]', 'SerialNo': '[CaseStep.serial_no]', 'Content-Type': 'application/json;charset=utf-8', 'ProductVersion': '[global_product_version]', 'ProtocolVersion': '4.0'}, '\u65b9\u6cd5': 'post', 'url': '/saofu-client/password/login', '\u53c2\u6570': {'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}}", expected_results="{'条件': [{'模式': {'success': True}, '消息': '登录失败,success不为true'}, {'模式': {'message': '成功'}, '消息': 'message不为成功'}, {'模式': {'code': '4001'}, '消息': 'code不为4001'}], '输出': {'Token': {'token': 'value'}, 'OperatorId': {'operator': {'id': 'value'}}}, '检查': 'body', '匹配规则': '键值相等'}" WHERE executed_history_id = 20170113110751 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:07:53,347 global_function.py[line: 75] INFO: 正在更新用例执行结果
2017-01-13 11:07:53,347 mydb.py[line: 72] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-01-13 11:07:52" WHERE executed_history_id = 20170113110751 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:07:53,348 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2017-01-13 11:07:53,348 main.py[line: 75] INFO: 用例[148]运行结果：('Fail', '')
2017-01-13 11:07:53,349 main.py[line: 78] INFO: 按项目运行测试
2017-01-13 11:07:53,349 main.py[line: 115] INFO: 运行指定项目
2017-01-13 11:07:53,458 main.py[line: 131] INFO: 正在读取测项目[id：73, project：pj_wechatno]的协议，host，端口配置...
2017-01-13 11:07:53,459 main.py[line: 134] INFO: 成功读取配置信息：{"protocol":"http","host":"m.test.saofu.cn","port":80} 
2017-01-13 11:07:53,460 main.py[line: 150] INFO: 正在执行测试项目[id：73, project：pj_wechatno]
2017-01-13 11:07:53,460 testproject.py[line: 23] INFO: 正在获取测试项目[id：73, name：pj_wechatno]对应对应的测试计划名称列表
2017-01-13 11:07:53,573 testproject.py[line: 28] INFO: 成功获取项目测试计划名称列表[list=['plan1_of_wechatno']]
2017-01-13 11:07:53,692 testproject.py[line: 38] INFO: 正在执行项目测试计划[project：pj_wechatno，testplan：plan1_of_wechatno]
2017-01-13 11:07:53,692 testplan.py[line: 29] INFO: 正在获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例
2017-01-13 11:07:53,823 testplan.py[line: 35] INFO: 成功获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例id：dict_keys(['80', '93', '120', '98', '126', '114', '88', '102', '76', '106', '110'])
2017-01-13 11:07:53,972 testplan.py[line: 45] INFO: 获取测试用例信息 [{'updater_first_name': 'Testlink', 'is_open': '1', 'updater_id': '1', 'preconditions': '', 'full_tc_external_id': 'wecharno-2', 'author_login': 'admin', 'testsuite_id': '79', 'version': '1', 'estimated_exec_duration': '', 'modification_ts': '2016-11-29 18:16:14', 'execution_type': '1', 'steps': [{'active': '1', 'step_number': '1', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/goods/item?&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:26838, &quot;serial&quot;:&quot;[global_serial]&quot;}<br />\n\t}</p>\n', 'id': '82', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;立即购买&quot;,&quot;消息&quot;:&quot;点击商品时无法打开购买页面&quot;}]</p>\n<p>\n\t}</p>\n', 'execution_type': '1'}], 'name': 'test-n-点击商品', 'creation_ts': '2016-07-20 11:05:03', 'testcase_id': '80', 'status': '1', 'id': '81', 'updater_login': 'admin', 'author_first_name': 'Testlink', 'author_id': '1', 'active': '1', 'node_order': '1000', 'importance': '2', 'updater_last_name': 'Administrator', 'author_last_name': 'Administrator', 'tc_external_id': '2', 'layout': '1', 'summary': ''}]
2017-01-13 11:07:54,106 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 11:07:54,106 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 80, 'test-n-点击商品', '微商城-模拟点击页面跳转', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 11:07:54,107 testplan.py[line: 72] INFO: 开始执行测试用例[id=80，name=test-n-点击商品]
2017-01-13 11:07:54,107 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"方法":"get","url":"/goods/item?","参数":{"id":26838, "serial":"[global_serial]"}}
2017-01-13 11:07:54,107 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"包含字符串","条件":[{"模式":"立即购买","消息":"点击商品时无法打开购买页面"}]}
2017-01-13 11:07:54,107 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:07:54,108 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 80, 'test-n-点击商品', 'plan1_of_wechatno', 'pj_wechatno', 82, 1, '', 'http', 'm.test.saofu.cn', 80, '{"方法":"get","url":"/goods/item?","参数":{"id":26838, "serial":"[global_serial]"}}', '{"检查":"body","匹配规则":"包含字符串","条件":[{"模式":"立即购买","消息":"点击商品时无法打开购买页面"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:07:54,109 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:07:54,109 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_urlencode
2017-01-13 11:07:54,109 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_serial]
2017-01-13 11:07:54,110 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('id', 26838), ('serial', '10549840601068216320')])
2017-01-13 11:07:54,110 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:07:54,110 InterfaceUnittestTestCase.py[line: 35] INFO: 正在发起GET请求...
2017-01-13 11:07:54,110 httpprotocol.py[line: 56] INFO: 发起的请求为：http://m.test.saofu.cn:80/goods/item?id=26838&serial=10549840601068216320
2017-01-13 11:07:54,110 httpprotocol.py[line: 57] INFO: 请求头为：{'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5CY'}
2017-01-13 11:07:54,281 InterfaceUnittestTestCase.py[line: 40] INFO: 正在对服务器返回body进行解码
2017-01-13 11:07:54,281 InterfaceUnittestTestCase.py[line: 54] INFO: 服务器返回结果"响应体(body)": 





<!DOCTYPE html>
<link rel="stylesheet" href="/css/bind/banner.css?v=5.0.0-faae2" />  
<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no">
	<meta name="format-detection" content="telephone=no">
	<title>深圳云移</title>
	<link rel="stylesheet" href="/common/css/common-pc.css?v=5.0.0-faae2">
	<link rel="stylesheet" href="/component/swiper/css/swiper.css?v=5.0.0-faae2">
	<link rel="stylesheet" href="/css/malls/detail.css?v=5.0.0-faae2">
</head>
<body>
	<div class="wrapper">

		<!-- banner滚图 -->
		<div class="banner j-banner">
			<div class="swiper-container j-swiper-container">
			  	<div class="swiper-wrapper j-swiper-wrappper"></div>
			</div>
			<div class="pagination"></div>
		</div>

		<!-- 详细商品信息 -->
		<div class="message j-message"></div>

		<!-- 已选 -->
		<div class="choice j-choice dn">
			<span class="key j-choice-key">请选择商品规格</span>
			<span class="value j-choice-value"></span>
			<i class="arrow"></i>
		</div>

		<!-- 图文详情 -->
		<div class="pic-detail j-pic-detail dn">
			<div class="bottom-details">
			</div>
		</div>

		<!-- 选择规格 -->
		<div class="specification j-specification">

			<div class="wrap j-wrap">
				<i class="close j-close"></i>
				<!-- 商品信息 -->
				<div class="mes-wrap">
					<div class="mes j-mes">
						<!-- <img src="" height="160" width="214" alt="" class="pic">
						<div class="describe">
							<h3 class="title">￥<span class="j-price">345</span></h3>
							<p class="text">爱上邓丽君可拉伸的房间爱老师肯定放假阿斯蒂芬阿斯蒂芬</p>
						</div> -->
					</div>
				</div>

				<div class="j-type-num">
					<!-- 规格选择 -->
					<!-- <div class="type">
						<h3 class="title">规格选择</h3>
						<ul class="lists j-type">
							<li data="22"class="item j-item" price="22">颜色</li>
						</ul>
					</div> -->

					<!-- 购买数量 -->
					<div class="num cf">
						<h3 class="title">购买数量</h3>
						<div class="box" unselectable="on" style="-moz-user-select:none;-webkit-user-select:none;" onselectstart="return false;">
							<i class="reduce j-reduce" unselectable="on" style="-moz-user-select:none;-webkit-user-select:none;" onselectstart="return false;">-</i><input type="text" class="text j-text" readonly value="1" unselectable="on" style="-moz-user-select:none;-webkit-user-select:none;" onselectstart="return false;"/><i class="add j-add" unselectable="on" style="-moz-user-select:none;-webkit-user-select:none;" onselectstart="return false;">+</i>
						</div>
					</div>
				</div>

				<!-- 确定按钮 -->
				<a class="sure j-sure">确定</a>
			</div>
		</div>

		<!-- 底部固定栏 -->
		<footer class="footer j-footer">
			<a href="/mall/cart?serial=10549840601068216320" class="cart ">
				<span class="num j-cart-num"></span>
			</a>
			<span class="add-cart j-add-cart">加入购物车</span>
			<span class="buy buy-imdtly j-buy-imdtly">立即购买</span>
		</footer>

		<!-- 提示弹窗 -->
		<div class="popup j-popup">
			<p class="text j-tip-content"></p>
		</div>

	</div>
	<script type="text/javascript">
		// changed by huangtao
		var mallGoodStandardType = "", // 商品类型，1为单规格，2为双规格
			mallGoodsId = "",
			ctx = "",
			serial = "10549840601068216320",
			mallConfigSerial = "10549840601068216320";
	</script>

	<script src="/plugin/zepto/js/zepto.min.js?v=5.0.0-faae2"></script>
	<script src="/common/js/request.js?v=5.0.0-faae2"></script>
	<script src="/common/js/extend-number.js?v=5.0.0-faae2"></script>
	<script src="/component/iscroll/js/iscroll.js?v=5.0.0-faae2"></script>
	<script src="/component/swiper/js/swiper.min.js?v=5.0.0-faae2"></script>
	<script src="/js/malls/detail.js?v=5.0.0-faae2"></script>
</body>
</html>
2017-01-13 11:07:54,286 InterfaceUnittestTestCase.py[line: 55] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 03:07:52 GMT'), ('Content-Type', 'text/html;charset=UTF-8'), ('Content-Length', '3983'), ('Connection', 'close'), ('Set-Cookie', 'JSESSIONID=F5D0D16D424204C87C72CABAAB0B164B; Path=/; HttpOnly'), ('Content-Language', 'en-US')]
2017-01-13 11:07:54,286 InterfaceUnittestTestCase.py[line: 56] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 11:07:54,286 unittesttestcase.py[line: 64] INFO: 要匹配的模式（子字符串）为：立即购买
2017-01-13 11:07:54,286 unittesttestcase.py[line: 292] WARNING: 未检测到从服务器返回中提取内容的要求，请检查是否正确填写预期结果
2017-01-13 11:07:54,286 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:07:54,286 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="get", runtime="2017-01-13 11:07:54",step_action="{'\u65b9\u6cd5': 'get', 'url': '/goods/item?', '\u53c2\u6570': {'id': 26838, 'serial': '10549840601068216320'}}", expected_results="{'条件': [{'模式': '立即购买', '消息': '点击商品时无法打开购买页面'}], '检查': 'body', '匹配规则': '包含字符串'}" WHERE executed_history_id = 20170113110751 AND testcase_id = 80 AND step_id = 82 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:07:54,288 testcase.py[line: 161] INFO: 测试用例[id=80, name=test-n-点击商品]执行成功
2017-01-13 11:07:54,288 testplan.py[line: 76] INFO: 正在更新用例执行结果
2017-01-13 11:07:54,288 mydb.py[line: 72] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2017-01-13 11:07:54" WHERE executed_history_id = 20170113110751 AND testcase_id = 80 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:07:54,413 testplan.py[line: 87] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=80]的执行结果
2017-01-13 11:07:54,705 testplan.py[line: 45] INFO: 获取测试用例信息 [{'updater_first_name': 'Testlink', 'is_open': '1', 'updater_id': '1', 'preconditions': '', 'full_tc_external_id': 'wecharno-5', 'author_login': 'admin', 'testsuite_id': '91', 'version': '1', 'estimated_exec_duration': '', 'modification_ts': '2016-11-29 18:05:21', 'execution_type': '1', 'steps': [{'active': '1', 'step_number': '1', 'actions': '<p>\n\t{<br />\n\t&quot;步骤类型&quot;:&quot;执行用例&quot;,</p>\n<p>\n\t&quot;用例id&quot;:88,</p>\n<p>\n\t&quot;用例名称&quot;:&quot;test-n-把商品加入购物车&quot;<br />\n\t}</p>\n<p>\n\t&nbsp;</p>\n', 'id': '95', 'expected_results': '', 'execution_type': '1'}, {'active': '1', 'step_number': '2', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cart/delfromcart?&quot;,<br />\n\t&quot;参数&quot;:{&quot;strIds&quot;:&quot;[CaseStep.strIds]&quot;,&quot;serial&quot;:&quot;[global_serial]&quot;}<br />\n\t}</p>\n', 'id': '96', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;键值相等&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:true}, &quot;消息&quot;:&quot;把商品移出购物车失败，success不为true&quot;}]</p>\n<p>\n\t}</p>\n', 'execution_type': '1'}, {'active': '1', 'step_number': '3', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cartlist?&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}<br />\n\t&nbsp;</p>\n', 'id': '178', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;[]&quot;,&quot;消息&quot;:&quot;把商品移出购物车中失败&quot;}]</p>\n<p>\n\t}</p>\n', 'execution_type': '1'}], 'name': 'test-n-把商品移出购物车', 'creation_ts': '2016-07-20 12:25:46', 'testcase_id': '93', 'status': '1', 'id': '94', 'updater_login': 'admin', 'author_first_name': 'Testlink', 'author_id': '1', 'active': '1', 'node_order': '1000', 'importance': '2', 'updater_last_name': 'Administrator', 'author_last_name': 'Administrator', 'tc_external_id': '5', 'layout': '1', 'summary': ''}]
2017-01-13 11:07:54,817 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 11:07:54,817 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 93, 'test-n-把商品移出购物车', '微商城-把商品移出购物车接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 11:07:54,818 testplan.py[line: 72] INFO: 开始执行测试用例[id=93，name=test-n-把商品移出购物车]
2017-01-13 11:07:54,818 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行用例","用例id":88,"用例名称":"test-n-把商品加入购物车"} 
2017-01-13 11:07:54,818 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：
2017-01-13 11:07:54,819 testcase.py[line: 51] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:07:54,819 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 93, 'test-n-把商品移出购物车', 'plan1_of_wechatno', 'pj_wechatno', 95, 1, '无', '无', '无', '无', '{"步骤类型":"执行用例","用例id":88,"用例名称":"test-n-把商品加入购物车"} ', '', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:07:54,819 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:07:55,067 global_function.py[line: 19] INFO: 获取测试用例信息 [{'updater_first_name': 'Testlink', 'is_open': '1', 'updater_id': '1', 'preconditions': '', 'full_tc_external_id': 'wecharno-4', 'author_login': 'admin', 'testsuite_id': '87', 'version': '1', 'estimated_exec_duration': '', 'modification_ts': '2016-11-29 17:58:09', 'execution_type': '1', 'steps': [{'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT id FROM customer WHERE channel_serial=%s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(\\&quot;[global_openId]\\&quot;,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '175', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;customer_id&quot;:1}</p>\n<p>\n\t}</p>\n', 'execution_type': '1'}, {'active': '1', 'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;更新&quot;:&quot;UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.customer_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '174', 'expected_results': '', 'execution_type': '1'}, {'active': '1', 'step_number': '3', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/addtocart&quot;,<br />\n\t&quot;参数&quot;:{&quot;mallGoodsId&quot;:26838,&quot;standardId&quot;:&quot;undefined&quot;,&quot;amount&quot;:1,&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}</p>\n', 'id': '90', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;键值相等&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:true}, &quot;消息&quot;:&quot;把商品加如购物车失败，success不为true&quot;}]</p>\n<p>\n\t}</p>\n', 'execution_type': '1'}, {'active': '1', 'step_number': '4', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT id FROM mall_shopping_cart WHERE customer_id = %s and closed=%s ORDER BY id DESC LIMIT 1&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.customer_id],1)&quot;</p>\n<p>\n\t}</p>\n', 'id': '176', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;strIds&quot;:1}<br />\n\t}</p>\n', 'execution_type': '1'}, {'active': '1', 'step_number': '5', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cartlist?&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}<br />\n\t&nbsp;</p>\n', 'id': '177', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;\\&quot;amount\\&quot;:1&quot;,&quot;消息&quot;:&quot;购物车中商品总数错误&quot;}, {&quot;模式&quot;:&quot;\\&quot;id\\&quot;:26838&quot;,&quot;消息&quot;:&quot;购物车中商品缺失&quot;}]</p>\n<p>\n\t}</p>\n', 'execution_type': '1'}], 'name': 'test-n-把商品加入购物车', 'creation_ts': '2016-07-20 12:07:40', 'testcase_id': '88', 'status': '1', 'id': '89', 'updater_login': 'admin', 'author_first_name': 'Testlink', 'author_id': '1', 'active': '1', 'node_order': '1000', 'importance': '2', 'updater_last_name': 'Administrator', 'author_last_name': 'Administrator', 'tc_external_id': '4', 'layout': '1', 'summary': ''}]
2017-01-13 11:07:55,242 global_function.py[line: 39] INFO: 正在读取套件[id=87]的协议，host，端口配置...
2017-01-13 11:07:55,492 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 11:07:55,493 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 88, 'test-n-把商品加入购物车', '把商品加入购物车接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '0000-00-00 00:00:00')
2017-01-13 11:07:55,493 global_function.py[line: 71] INFO: 开始执行测试用例[id=88，name=test-n-把商品加入购物车]
2017-01-13 11:07:55,494 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT id FROM customer WHERE channel_serial=%s","参数":"(\"[global_openId]\",)"}
2017-01-13 11:07:55,494 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"customer_id":1}}
2017-01-13 11:07:55,494 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:07:55,494 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 175, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT id FROM customer WHERE channel_serial=%s","参数":"(\\"[global_openId]\\",)"}', '{"检查":"body","输出":{"customer_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:07:55,495 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:07:55,495 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 11:07:55,495 casestep.py[line: 149] INFO: 转换后的参数体为：("ous64uFCCLMyXYDJ-MkNilyCI5CY",)
2017-01-13 11:07:55,495 mydb.py[line: 87] INFO: query：SELECT id FROM customer WHERE channel_serial=%s  data：('ous64uFCCLMyXYDJ-MkNilyCI5CY',)
2017-01-13 11:07:55,499 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(167020,), flag:True
2017-01-13 11:07:55,499 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:07:55,499 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}, {'customer_id': 167020}]
2017-01-13 11:07:55,499 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:07:55,499 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:07:55",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT id FROM customer WHERE channel_serial=%s', '\u53c2\u6570': ['ous64uFCCLMyXYDJ-MkNilyCI5CY']}", expected_results="{'输出': {'customer_id': 1}, '检查': 'body'}" WHERE executed_history_id = 20170113110751 AND testcase_id = 88 AND step_id = 175 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:07:55,500 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","更新":"UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1","参数":"([CaseStep.customer_id],)"}
2017-01-13 11:07:55,500 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：
2017-01-13 11:07:55,501 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:07:55,501 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 174, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","更新":"UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1","参数":"([CaseStep.customer_id],)"}', '', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:07:55,502 testcase.py[line: 78] INFO: 开始执行步骤操作[第2步]
2017-01-13 11:07:55,502 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.customer_id]
2017-01-13 11:07:55,502 casestep.py[line: 149] INFO: 转换后的参数体为：(167020,)
2017-01-13 11:07:55,502 mydb.py[line: 72] INFO: query：UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = 167020 and closed=1
2017-01-13 11:07:55,974 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:07:55,974 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:07:55",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u66f4\u65b0': 'UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1', '\u53c2\u6570': [167020]}", expected_results="" WHERE executed_history_id = 20170113110751 AND testcase_id = 88 AND step_id = 174 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:07:55,976 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"方法":"post","url":"/addtocart","参数":{"mallGoodsId":26838,"standardId":"undefined","amount":1,"serial":"[global_serial]","openId":"[global_openId]"}}
2017-01-13 11:07:55,976 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"把商品加如购物车失败,success不为true"}]}
2017-01-13 11:07:55,976 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:07:55,976 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110751', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 90, 3, '', 'http', 'm.test.saofu.cn', '80', '{"方法":"post","url":"/addtocart","参数":{"mallGoodsId":26838,"standardId":"undefined","amount":1,"serial":"[global_serial]","openId":"[global_openId]"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"把商品加如购物车失败,success不为true"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:07:55,978 testcase.py[line: 78] INFO: 开始执行步骤操作[第3步]
2017-01-13 11:07:55,978 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_urlencode
2017-01-13 11:07:55,978 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_serial]
2017-01-13 11:07:55,979 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 11:07:55,979 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('mallGoodsId', 26838), ('standardId', 'undefined'), ('amount', 1), ('serial', '[global_serial]'), ('openId', 'ous64uFCCLMyXYDJ-MkNilyCI5CY')])
2017-01-13 11:07:55,979 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:07:55,979 InterfaceUnittestTestCase.py[line: 30] INFO: 正在发起POST请求...
2017-01-13 11:07:55,979 httpprotocol.py[line: 74] INFO: 发起的请求为：http://m.test.saofu.cn:80/addtocart
2017-01-13 11:07:55,979 httpprotocol.py[line: 75] INFO: 参数为：b'mallGoodsId=26838&standardId=undefined&amount=1&serial=%5Bglobal_serial%5D&openId=ous64uFCCLMyXYDJ-MkNilyCI5CY'
2017-01-13 11:07:55,980 httpprotocol.py[line: 76] INFO: 请求头为：{'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5CY'}
2017-01-13 11:07:56,328 InterfaceUnittestTestCase.py[line: 40] INFO: 正在对服务器返回body进行解码
2017-01-13 11:07:56,328 InterfaceUnittestTestCase.py[line: 54] INFO: 服务器返回结果"响应体(body)": {"success":false,"message":"加入购物车失败","attach":null}
2017-01-13 11:07:56,329 InterfaceUnittestTestCase.py[line: 55] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 03:07:54 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding')]
2017-01-13 11:07:56,329 InterfaceUnittestTestCase.py[line: 56] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 11:07:56,329 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2017-01-13 11:07:56,329 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：False
2017-01-13 11:07:56,329 testcase.py[line: 129] INFO: 步骤[3]执行失败,停止执行用例[id=88, name=test-n-把商品加入购物车]
2017-01-13 11:07:56,329 testcase.py[line: 136] INFO: 正在更新步骤执行结果
2017-01-13 11:07:56,329 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 65, in test_interface_of_urlencode    self.assert_result(body)  File E:\Projects\interface_project_for_dev\unittesttestcase.py, line 113, in assert_result    self.assertEqual(dict_level_list[len(dict_level_list) -1], last_value, item[消息])AssertionError: True != False : 把商品加如购物车失败,success不为true", protocol_method="post", runtime="2017-01-13 11:07:55",step_action="{'\u65b9\u6cd5': 'post', 'url': '/addtocart', '\u53c2\u6570': {'mallGoodsId': 26838, 'standardId': 'undefined', 'amount': 1, 'serial': '[global_serial]', 'openId': 'ous64uFCCLMyXYDJ-MkNilyCI5CY'}}", expected_results="{'条件': [{'模式': {'success': True}, '消息': '把商品加如购物车失败,success不为true'}], '检查': 'body', '匹配规则': '键值相等'}" WHERE executed_history_id = 20170113110751 AND testcase_id = 88 AND step_id = 90 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:07:56,331 global_function.py[line: 75] INFO: 正在更新用例执行结果
2017-01-13 11:07:56,331 mydb.py[line: 72] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-01-13 11:07:55" WHERE executed_history_id = 20170113110751 and testcase_id = 88 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:07:56,332 global_function.py[line: 82] INFO: 指定用例[88]已执行完
2017-01-13 11:08:36,848 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 11:08:36,848 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 11:08:36,858 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 11:08:36,863 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 11:08:36,967 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 11:08:36,968 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 11:08:36,970 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 11:08:36,970 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 11:08:36,972 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 11:08:36,977 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 11:08:36,977 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 11:08:37,125 global_function.py[line: 19] INFO: 获取测试用例信息 [{'name': 'test-n-登陆掌贝pos机', 'preconditions': '<p>\n\t初始化用例</p>\n', 'version': '1', 'layout': '1', 'summary': '', 'is_open': '1', 'tc_external_id': '1', 'updater_id': '1', 'id': '149', 'testsuite_id': '147', 'testcase_id': '148', 'creation_ts': '2016-07-27 18:32:10', 'modification_ts': '2016-11-30 15:41:36', 'active': '1', 'importance': '2', 'steps': [{'execution_type': '1', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1'}, {'execution_type': '1', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '2', 'active': '1'}, {'execution_type': '1', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'step_number': '3', 'active': '1'}], 'updater_last_name': 'Administrator', 'estimated_exec_duration': '', 'full_tc_external_id': 'pj_pos-1', 'execution_type': '1', 'author_id': '1', 'author_first_name': 'Testlink', 'updater_first_name': 'Testlink', 'author_login': 'admin', 'author_last_name': 'Administrator', 'status': '1', 'node_order': '1000', 'updater_login': 'admin'}]
2017-01-13 11:08:37,237 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 11:08:38,066 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 11:08:38,067 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110836', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 11:08:38,070 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 11:08:38,071 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 11:08:38,072 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 11:08:38,072 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:08:38,073 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110836', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:08:38,076 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:08:38,077 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:08:38,078 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 11:08:38,082 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 11:08:38,083 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:08:38,083 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 11:08:38,084 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:08:38,084 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:08:38",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT branch_id FROM account_operator WHERE id = %s', '\u53c2\u6570': [1318]}", expected_results="{'输出': {'branch_id': 1}, '检查': 'body'}" WHERE executed_history_id = 20170113110836 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:08:38,087 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2017-01-13 11:08:38,087 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2017-01-13 11:08:38,088 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:08:38,088 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110836', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:08:38,091 testcase.py[line: 78] INFO: 开始执行步骤操作[第2步]
2017-01-13 11:08:38,092 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2017-01-13 11:08:38,092 casestep.py[line: 149] INFO: 转换后的参数体为：(1485916418,)
2017-01-13 11:08:38,093 mydb.py[line: 87] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2017-01-13 11:08:38,098 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2017-01-13 11:08:38,098 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:08:38,099 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2017-01-13 11:08:38,099 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:08:38,100 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:08:38",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '\u53c2\u6570': [1485916418]}", expected_results="{'输出': {'serial_no': 2, 'device_no': 1}, '检查': 'body'}" WHERE executed_history_id = 20170113110836 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:08:38,102 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2017-01-13 11:08:38,103 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2017-01-13 11:08:38,103 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:08:38,104 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113110836', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:08:38,107 testcase.py[line: 78] INFO: 开始执行步骤操作[第3步]
2017-01-13 11:08:38,107 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2017-01-13 11:08:38,108 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:08:38,108 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:08:38,109 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2017-01-13 11:08:38,110 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2017-01-13 11:08:38,110 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_product_version]
2017-01-13 11:08:38,111 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2017-01-13 11:08:38,112 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('DeviceId', '[CaseStep.device_no]'), ('SerialNo', '[CaseStep.serial_no]'), ('Content-Type', 'application/json;charset=utf-8'), ('ProductVersion', '[global_product_version]'), ('ProtocolVersion', '4.0')])
2017-01-13 11:08:38,113 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2017-01-13 11:08:38,113 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2017-01-13 11:08:38,114 httpprotocol.py[line: 75] INFO: 参数为：b'{"id": "1318", "password": "e10adc3949ba59abbe56e057f20f883e"}'
2017-01-13 11:08:38,114 httpprotocol.py[line: 76] INFO: 请求头为：OrderedDict([('DeviceId', '[CaseStep.device_no]'), ('SerialNo', '[CaseStep.serial_no]'), ('Content-Type', 'application/json;charset=utf-8'), ('ProductVersion', '[global_product_version]'), ('ProtocolVersion', '4.0')])
2017-01-13 11:08:38,558 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2017-01-13 11:08:38,558 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"code":"4000","reason":"查询设备信息失败，设备未出货或未激活","success":false}
2017-01-13 11:08:38,559 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 03:08:36 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2017-01-13 11:08:38,560 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 11:08:38,560 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2017-01-13 11:08:38,561 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：False
2017-01-13 11:11:00,703 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 11:11:00,703 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 11:11:00,717 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 11:11:00,721 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 11:11:00,778 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 11:11:00,778 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 11:11:00,779 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 11:11:00,779 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 11:11:00,781 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 11:11:00,782 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 11:11:00,783 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 11:11:00,920 global_function.py[line: 19] INFO: 获取测试用例信息 [{'execution_type': '1', 'full_tc_external_id': 'pj_pos-1', 'testcase_id': '148', 'importance': '2', 'summary': '', 'author_first_name': 'Testlink', 'status': '1', 'author_last_name': 'Administrator', 'id': '149', 'creation_ts': '2016-07-27 18:32:10', 'updater_first_name': 'Testlink', 'active': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'node_order': '1000', 'is_open': '1', 'modification_ts': '2016-11-30 15:41:36', 'tc_external_id': '1', 'author_login': 'admin', 'layout': '1', 'name': 'test-n-登陆掌贝pos机', 'updater_login': 'admin', 'updater_id': '1', 'testsuite_id': '147', 'author_id': '1', 'estimated_exec_duration': '', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'id': '183', 'active': '1', 'step_number': '1', 'execution_type': '1'}, {'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'id': '182', 'active': '1', 'step_number': '2', 'execution_type': '1'}, {'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'id': '150', 'active': '1', 'step_number': '3', 'execution_type': '1'}], 'version': '1', 'updater_last_name': 'Administrator'}]
2017-01-13 11:11:01,030 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 11:11:01,637 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 11:11:01,638 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 11:11:01,639 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 11:11:01,640 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 11:11:01,640 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 11:11:01,640 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:01,640 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:01,641 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:11:01,642 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:01,642 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 11:11:01,645 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 11:11:01,645 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:11:01,645 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 11:11:01,645 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:11:01,645 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:11:01",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT branch_id FROM account_operator WHERE id = %s', '\u53c2\u6570': [1318]}", expected_results="{'检查': 'body', '输出': {'branch_id': 1}}" WHERE executed_history_id = 20170113111100 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:11:01,647 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2017-01-13 11:11:01,647 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2017-01-13 11:11:01,647 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:01,647 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:01,649 testcase.py[line: 78] INFO: 开始执行步骤操作[第2步]
2017-01-13 11:11:01,649 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2017-01-13 11:11:01,649 casestep.py[line: 149] INFO: 转换后的参数体为：(1485916418,)
2017-01-13 11:11:01,649 mydb.py[line: 87] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2017-01-13 11:11:01,653 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2017-01-13 11:11:01,653 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:11:01,653 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2017-01-13 11:11:01,653 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:11:01,653 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:11:01",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '\u53c2\u6570': [1485916418]}", expected_results="{'检查': 'body', '输出': {'device_no': 1, 'serial_no': 2}}" WHERE executed_history_id = 20170113111100 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:11:01,655 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2017-01-13 11:11:01,656 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2017-01-13 11:11:01,656 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:01,656 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:01,657 testcase.py[line: 78] INFO: 开始执行步骤操作[第3步]
2017-01-13 11:11:01,658 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2017-01-13 11:11:01,658 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:01,658 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:01,658 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2017-01-13 11:11:01,658 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2017-01-13 11:11:01,658 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_product_version]
2017-01-13 11:11:01,658 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2017-01-13 11:11:01,658 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('DeviceId', '[CaseStep.device_no]'), ('SerialNo', '[CaseStep.serial_no]'), ('Content-Type', 'application/json;charset=utf-8'), ('ProductVersion', '[global_product_version]'), ('ProtocolVersion', '4.0')])
2017-01-13 11:11:01,659 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2017-01-13 11:11:01,659 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2017-01-13 11:11:01,659 httpprotocol.py[line: 75] INFO: 参数为：b'{"id": "1318", "password": "e10adc3949ba59abbe56e057f20f883e"}'
2017-01-13 11:11:01,659 httpprotocol.py[line: 76] INFO: 请求头为：OrderedDict([('DeviceId', '[CaseStep.device_no]'), ('SerialNo', '[CaseStep.serial_no]'), ('Content-Type', 'application/json;charset=utf-8'), ('ProductVersion', '[global_product_version]'), ('ProtocolVersion', '4.0')])
2017-01-13 11:11:02,034 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2017-01-13 11:11:02,034 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"code":"4000","reason":"查询设备信息失败，设备未出货或未激活","success":false}
2017-01-13 11:11:02,034 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 03:10:59 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2017-01-13 11:11:02,034 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 11:11:02,034 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2017-01-13 11:11:02,035 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：False
2017-01-13 11:11:02,036 testcase.py[line: 129] INFO: 步骤[3]执行失败,停止执行用例[id=148, name=test-n-登陆掌贝pos机]
2017-01-13 11:11:02,036 testcase.py[line: 136] INFO: 正在更新步骤执行结果
2017-01-13 11:11:02,036 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 126, in test_interface_of_json    self.assert_result(body)  File E:\Projects\interface_project_for_dev\unittesttestcase.py, line 113, in assert_result    self.assertEqual(dict_level_list[len(dict_level_list) -1], last_value, item[消息])AssertionError: True != False : 登录失败,success不为true", protocol_method="post", runtime="2017-01-13 11:11:01",step_action="{'\u51fd\u6570': 'test_interface_of_json', '\u8bf7\u6c42\u5934': {'DeviceId': '[CaseStep.device_no]', 'SerialNo': '[CaseStep.serial_no]', 'Content-Type': 'application/json;charset=utf-8', 'ProductVersion': '[global_product_version]', 'ProtocolVersion': '4.0'}, '\u65b9\u6cd5': 'post', 'url': '/saofu-client/password/login', '\u53c2\u6570': {'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}}", expected_results="{'条件': [{'模式': {'success': True}, '消息': '登录失败,success不为true'}, {'模式': {'message': '成功'}, '消息': 'message不为成功'}, {'模式': {'code': '4001'}, '消息': 'code不为4001'}], '检查': 'body', '输出': {'OperatorId': {'operator': {'id': 'value'}}, 'Token': {'token': 'value'}}, '匹配规则': '键值相等'}" WHERE executed_history_id = 20170113111100 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:11:02,037 global_function.py[line: 75] INFO: 正在更新用例执行结果
2017-01-13 11:11:02,037 mydb.py[line: 72] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-01-13 11:11:01" WHERE executed_history_id = 20170113111100 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:11:02,038 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2017-01-13 11:11:02,038 main.py[line: 75] INFO: 用例[148]运行结果：('Fail', '')
2017-01-13 11:11:02,039 main.py[line: 78] INFO: 按项目运行测试
2017-01-13 11:11:02,039 main.py[line: 115] INFO: 运行指定项目
2017-01-13 11:11:02,150 main.py[line: 131] INFO: 正在读取测项目[id：73, project：pj_wechatno]的协议，host，端口配置...
2017-01-13 11:11:02,151 main.py[line: 134] INFO: 成功读取配置信息：{"protocol":"http","host":"m.test.saofu.cn","port":80} 
2017-01-13 11:11:02,152 main.py[line: 150] INFO: 正在执行测试项目[id：73, project：pj_wechatno]
2017-01-13 11:11:02,152 testproject.py[line: 23] INFO: 正在获取测试项目[id：73, name：pj_wechatno]对应对应的测试计划名称列表
2017-01-13 11:11:02,268 testproject.py[line: 28] INFO: 成功获取项目测试计划名称列表[list=['plan1_of_wechatno']]
2017-01-13 11:11:02,389 testproject.py[line: 38] INFO: 正在执行项目测试计划[project：pj_wechatno，testplan：plan1_of_wechatno]
2017-01-13 11:11:02,389 testplan.py[line: 29] INFO: 正在获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例
2017-01-13 11:11:02,528 testplan.py[line: 35] INFO: 成功获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例id：dict_keys(['126', '106', '110', '93', '102', '114', '80', '76', '88', '120', '98'])
2017-01-13 11:11:02,682 testplan.py[line: 45] INFO: 获取测试用例信息 [{'execution_type': '1', 'full_tc_external_id': 'wecharno-12', 'testcase_id': '126', 'importance': '2', 'summary': '<p>\n\t1、运行时，ulr中的40758966216286146560取自base_info.serial字段</p>\n<p>\n\t&nbsp;</p>\n<p>\n\t&nbsp;</p>\n', 'author_first_name': 'Testlink', 'status': '1', 'author_last_name': 'Administrator', 'id': '127', 'creation_ts': '2016-07-26 15:06:38', 'updater_first_name': 'Testlink', 'active': '1', 'preconditions': '', 'node_order': '1000', 'is_open': '1', 'modification_ts': '2016-11-29 19:43:22', 'tc_external_id': '12', 'author_login': 'admin', 'layout': '1', 'name': 'test-n-免费领取优惠券', 'updater_login': 'admin', 'updater_id': '1', 'testsuite_id': '125', 'author_id': '1', 'estimated_exec_duration': '', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行SQl&quot;,</p>\n<p>\n\t&quot;更新&quot;:&quot;UPDATE base_info SET sku_quantity = 1000&nbsp; WHERE serial = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(\\&quot;40758966216286146560\\&quot;,)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '', 'id': '181', 'active': '1', 'step_number': '1', 'execution_type': '1'}, {'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;更新&quot;:&quot;</p>\n<pre style="background-color:#ffffff;color:#000000;font-family:\'宋体\';font-size:12pt;">\n<span style="color:#008080;font-weight:bold;">UPDATE base_info SET listing = 1  WHERE serial = %s</span>&quot;,\n</pre>\n<p>\n\t&quot;参数&quot;:&quot;(40758966216286146560,)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '', 'id': '180', 'active': '1', 'step_number': '2', 'execution_type': '1'}, {'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;urL&quot;:&quot;/kq/getincoupon/40758966216286146560/[global_openId]&quot;,<br />\n\t&quot;参数&quot;:&quot;&quot;<br />\n\t}</p>\n', 'expected_results': '<p>\n\t{</p>\n<p>\n\t&quot;检查&quot;：&ldquo;body&rdquo;,</p>\n<p>\n\t&quot;匹配规则&quot;：&ldquo;包含字符串&rdquo;,</p>\n<p>\n\t&ldquo;条件&rdquo;：[{&quot;模式&quot;：&ldquo;success\\&quot;:true&quot;,&quot;消息&quot;：&ldquo;<span style="color:#008080;font-weight:bold;">success不为ture,领取卡券失败</span>&rdquo;}]</p>\n<p>\n\t}</p>\n', 'id': '128', 'active': '1', 'step_number': '3', 'execution_type': '1'}], 'version': '1', 'updater_last_name': 'Administrator'}]
2017-01-13 11:11:02,806 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 11:11:02,806 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 126, 'test-n-免费领取优惠券', '卡券中心-免费领取卡券接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 11:11:02,807 testplan.py[line: 72] INFO: 开始执行测试用例[id=126，name=test-n-免费领取优惠券]
2017-01-13 11:11:02,807 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行SQl","更新":"UPDATE base_info SET sku_quantity = 1000  WHERE serial = %s","参数":"(\"40758966216286146560\",)"}
2017-01-13 11:11:02,808 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：
2017-01-13 11:11:02,808 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:11:02,808 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:02,808 mydb.py[line: 72] INFO: query：UPDATE base_info SET sku_quantity = 1000  WHERE serial = 40758966216286146560
2017-01-13 11:11:02,814 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:11:02,814 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:11:02",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884cSQl', '\u66f4\u65b0': 'UPDATE base_info SET sku_quantity = 1000  WHERE serial = %s', '\u53c2\u6570': ['40758966216286146560']}", expected_results="" WHERE executed_history_id = 20170113111100 AND testcase_id = 126 AND step_id = 181 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:02,815 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","更新":"UPDATE base_info SET listing = 1  WHERE serial = %s","参数":"(40758966216286146560,)"}
2017-01-13 11:11:02,816 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：
2017-01-13 11:11:02,816 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:02,816 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 126, 'test-n-免费领取优惠券', 'plan1_of_wechatno', 'pj_wechatno', 180, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","更新":"UPDATE base_info SET listing = 1  WHERE serial = %s","参数":"(40758966216286146560,)"}', '', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:02,818 testcase.py[line: 78] INFO: 开始执行步骤操作[第2步]
2017-01-13 11:11:02,818 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:02,818 mydb.py[line: 72] INFO: query：UPDATE base_info SET listing = 1  WHERE serial = 40758966216286146560
2017-01-13 11:11:03,676 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:11:03,676 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:11:02",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u66f4\u65b0': 'UPDATE base_info SET listing = 1  WHERE serial = %s', '\u53c2\u6570': [40758966216286146560]}", expected_results="" WHERE executed_history_id = 20170113111100 AND testcase_id = 126 AND step_id = 180 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:03,678 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"方法":"post",url:"/kq/getincoupon/40758966216286146560/[global_openId]","参数":""}
2017-01-13 11:11:03,678 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"包含字符串","条件":[{"模式":"success\":true","消息":"success不为ture,领取卡券失败"}]}
2017-01-13 11:11:03,678 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:03,678 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 126, 'test-n-免费领取优惠券', 'plan1_of_wechatno', 'pj_wechatno', 128, 3, '', 'http', 'm.test.saofu.cn', 80, '{"方法":"post",url:"/kq/getincoupon/40758966216286146560/[global_openId]","参数":""}', '{"检查":"body","匹配规则":"包含字符串","条件":[{"模式":"success\\":true","消息":"success不为ture,领取卡券失败"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:03,680 testcase.py[line: 75] ERROR: 步骤[3]信息填写错误: Expecting property name enclosed in double quotes: line 1 column 14 (char 13),停止执行用例[id=126, name=test-n-免费领取优惠券]
2017-01-13 11:11:03,680 testplan.py[line: 76] INFO: 正在更新用例执行结果
2017-01-13 11:11:03,680 mydb.py[line: 72] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2017-01-13 11:11:02" WHERE executed_history_id = 20170113111100 AND testcase_id = 126 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:03,812 testplan.py[line: 87] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=126]的执行结果
2017-01-13 11:11:04,057 testplan.py[line: 45] INFO: 获取测试用例信息 [{'execution_type': '1', 'full_tc_external_id': 'wecharno-8', 'testcase_id': '106', 'importance': '2', 'summary': '', 'author_first_name': 'Testlink', 'status': '1', 'author_last_name': 'Administrator', 'id': '107', 'creation_ts': '2016-07-21 11:26:32', 'updater_first_name': 'Testlink', 'active': '1', 'preconditions': '', 'node_order': '1000', 'is_open': '1', 'modification_ts': '2016-11-29 17:33:09', 'tc_external_id': '8', 'author_login': 'admin', 'layout': '1', 'name': 'test-n-创建储值卡支付订单', 'updater_login': 'admin', 'updater_id': '1', 'testsuite_id': '105', 'author_id': '1', 'estimated_exec_duration': '', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;请求头&quot;：{&quot;Content-Type&quot;:&quot;application/x-www-form-urlencoded&quot;,&quot;charset&quot;:&quot;utf-8&quot;},<br />\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/cmorder/1/4&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;,&quot;fm&quot;:1,&quot;mallGoodsId&quot;:&quot;26838&quot;, &quot;amount&quot;:1,&quot;cartIds&quot;:&quot;&quot;,&quot;fetchTime&quot;:&quot;&quot;, &quot;remark&quot;:&quot;&quot;}<br />\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;\\&quot;success\\&quot;:true&quot;, &quot;消息&quot;:&quot;创建储值卡支付订单失败，success不为True&quot;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;success&quot;: &quot;\\&quot;success\\&quot;:(.+?),&quot;,&quot;attach&quot;:&quot;attach\\&quot;:\\&quot;(.+?)\\&quot;&quot;}<br />\n\t}</p>\n', 'id': '108', 'active': '1', 'step_number': '1', 'execution_type': '1'}], 'version': '1', 'updater_last_name': 'Administrator'}]
2017-01-13 11:11:04,169 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 11:11:04,170 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 106, 'test-n-创建储值卡支付订单', '微商城-创建储值卡支付订单接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 11:11:04,171 testplan.py[line: 72] INFO: 开始执行测试用例[id=106，name=test-n-创建储值卡支付订单]
2017-01-13 11:11:04,171 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"请求头":{"Content-Type":"application/x-www-form-urlencoded","charset":"utf-8"},"方法":"post","url":"/cmorder/1/4","参数":{"serial":"[global_serial]","openId":"[global_openId]","fm":1,"mallGoodsId":"26838", "amount":1,"cartIds":"","fetchTime":"", "remark":""}}
2017-01-13 11:11:04,171 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"包含字符串","条件":[{"模式":"\"success\":true", "消息":"创建储值卡支付订单失败,success不为True"}],"输出":{"success": "\"success\":(.+?),","attach":"attach\":\"(.+?)\""}}
2017-01-13 11:11:04,172 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:04,172 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 106, 'test-n-创建储值卡支付订单', 'plan1_of_wechatno', 'pj_wechatno', 108, 1, '', 'http', 'm.test.saofu.cn', 80, '{"请求头":{"Content-Type":"application/x-www-form-urlencoded","charset":"utf-8"},"方法":"post","url":"/cmorder/1/4","参数":{"serial":"[global_serial]","openId":"[global_openId]","fm":1,"mallGoodsId":"26838", "amount":1,"cartIds":"","fetchTime":"", "remark":""}}', '{"检查":"body","匹配规则":"包含字符串","条件":[{"模式":"\\"success\\":true", "消息":"创建储值卡支付订单失败,success不为True"}],"输出":{"success": "\\"success\\":(.+?),","attach":"attach\\":\\"(.+?)\\""}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:04,173 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:11:04,173 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_urlencode
2017-01-13 11:11:04,173 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_serial]
2017-01-13 11:11:04,173 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 11:11:04,173 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('serial', '[global_serial]'), ('openId', 'ous64uFCCLMyXYDJ-MkNilyCI5CY'), ('fm', 1), ('mallGoodsId', '26838'), ('amount', 1), ('cartIds', ''), ('fetchTime', ''), ('remark', '')])
2017-01-13 11:11:04,173 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:04,174 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:04,174 InterfaceUnittestTestCase.py[line: 30] INFO: 正在发起POST请求...
2017-01-13 11:11:04,174 httpprotocol.py[line: 74] INFO: 发起的请求为：http://m.test.saofu.cn:80/cmorder/1/4
2017-01-13 11:11:04,174 httpprotocol.py[line: 75] INFO: 参数为：b'serial=%5Bglobal_serial%5D&openId=ous64uFCCLMyXYDJ-MkNilyCI5CY&fm=1&mallGoodsId=26838&amount=1&cartIds=&fetchTime=&remark='
2017-01-13 11:11:04,174 httpprotocol.py[line: 76] INFO: 请求头为：OrderedDict([('Content-Type', 'application/x-www-form-urlencoded'), ('charset', 'utf-8'), ('Cookie', '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5CY')])
2017-01-13 11:11:04,224 InterfaceUnittestTestCase.py[line: 40] INFO: 正在对服务器返回body进行解码
2017-01-13 11:11:04,225 InterfaceUnittestTestCase.py[line: 54] INFO: 服务器返回结果"响应体(body)": {"success":false,"message":"系统错误","attach":null}
2017-01-13 11:11:04,225 InterfaceUnittestTestCase.py[line: 55] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 03:11:02 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding')]
2017-01-13 11:11:04,226 InterfaceUnittestTestCase.py[line: 56] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 11:11:04,226 unittesttestcase.py[line: 64] INFO: 要匹配的模式（子字符串）为："success":true
2017-01-13 11:11:04,228 testcase.py[line: 129] INFO: 步骤[1]执行失败,停止执行用例[id=106, name=test-n-创建储值卡支付订单]
2017-01-13 11:11:04,229 testcase.py[line: 136] INFO: 正在更新步骤执行结果
2017-01-13 11:11:04,229 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 65, in test_interface_of_urlencode    self.assert_result(body)  File E:\Projects\interface_project_for_dev\unittesttestcase.py, line 65, in assert_result    self.assertIn(pattern_str, response_to_check, item[消息])AssertionError: success:true not found in {success:false,message:系统错误,attach:null} : 创建储值卡支付订单失败,success不为True", protocol_method="post", runtime="2017-01-13 11:11:04",step_action="{'\u8bf7\u6c42\u5934': {'Content-Type': 'application/x-www-form-urlencoded', 'charset': 'utf-8'}, '\u65b9\u6cd5': 'post', 'url': '/cmorder/1/4', '\u53c2\u6570': {'serial': '[global_serial]', 'openId': 'ous64uFCCLMyXYDJ-MkNilyCI5CY', 'fm': 1, 'mallGoodsId': '26838', 'amount': 1, 'cartIds': '', 'fetchTime': '', 'remark': ''}}", expected_results="{'条件': [{'模式': ''success':true', '消息': '创建储值卡支付订单失败,success不为True'}], '检查': 'body', '输出': {'success': ''success':(.+?),', 'attach': 'attach':'(.+?)''}, '匹配规则': '包含字符串'}" WHERE executed_history_id = 20170113111100 AND testcase_id = 106 AND step_id = 108 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:04,234 testplan.py[line: 76] INFO: 正在更新用例执行结果
2017-01-13 11:11:04,234 mydb.py[line: 72] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-01-13 11:11:04" WHERE executed_history_id = 20170113111100 AND testcase_id = 106 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:04,376 testplan.py[line: 87] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=106]的执行结果
2017-01-13 11:11:04,648 testplan.py[line: 45] INFO: 获取测试用例信息 [{'execution_type': '1', 'full_tc_external_id': 'wecharno-9', 'testcase_id': '110', 'importance': '2', 'summary': '<p>\n\t消费不赠送积分,单规格商品</p>\n', 'author_first_name': 'Testlink', 'status': '1', 'author_last_name': 'Administrator', 'id': '111', 'creation_ts': '2016-07-22 14:48:17', 'updater_first_name': 'Testlink', 'active': '0', 'preconditions': '', 'node_order': '2', 'is_open': '1', 'modification_ts': '2016-07-29 17:13:06', 'tc_external_id': '9', 'author_login': 'admin', 'layout': '1', 'name': 'test-n-储值卡支付-不使用优惠，会员账户支付', 'updater_login': 'admin', 'updater_id': '1', 'testsuite_id': '109', 'author_id': '1', 'estimated_exec_duration': '', 'steps': [{'actions': '<p>\n\t{<br />\n\t&quot;style&quot;:&quot;testcase&quot;,<br />\n\t<br />\n\t&quot;testcase_id&quot;:114,<br />\n\t<br />\n\t&quot;testcase_name&quot;:&quot;test-n-提交储值卡支付订单-pay5重定向&quot;<br />\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;output_arg1&quot;:&quot;CMOrder.attach&quot;}</p>\n', 'id': '112', 'active': '1', 'step_number': '1', 'execution_type': '1'}, {'actions': '<p>\n\t{<br />\n\t&quot;class&quot;:&quot;CardPay&quot;,<br />\n\t&quot;function&quot;:&quot;test_account_pay_without_discount&quot;,<br />\n\t&quot;method&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/pay/card/doconfirm&quot;,<br />\n\t&quot;params&quot;:{&quot;orderId&quot;:&quot;[var]&quot;, &quot;openId&quot;:&quot;[global_openId]&quot;, &quot;productOrderId&quot;:&quot;[CMOrder.attach]&quot;,&quot;customerId&quot;:&quot;[var]&quot;, &quot;type&quot;:1, &quot;cardId&quot;:&quot;&quot;,&quot;customerName&quot;:&quot;[var]&quot;, &quot;shopId&quot;:&quot;[var]&quot;, &quot;yhCardId&quot;:-1,&quot;yhCardType&quot;:-1}<br />\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;success&quot;:1, &quot;receipt_fee&quot;:&quot;动态校验&quot;, &quot;balance&quot;:&quot;动态校验&quot;, &quot;bonus&quot;:&quot;动态校验&quot;, &quot;sum_amount_expend&quot;:&quot;动态校验&quot;,&nbsp; &quot;sum_bonus_expend&quot;:&quot;动态校验&quot;, &quot;balance_total&quot;:&quot;动态校验&quot;}</p>\n', 'id': '119', 'active': '1', 'step_number': '3', 'execution_type': '1'}], 'version': '1', 'updater_last_name': 'Administrator'}]
2017-01-13 11:11:04,784 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 11:11:04,784 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 110, 'test-n-储值卡支付-不使用优惠，会员账户支付', '微商城-储值卡支付接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 11:11:04,786 testplan.py[line: 72] INFO: 开始执行测试用例[id=110，name=test-n-储值卡支付-不使用优惠，会员账户支付]
2017-01-13 11:11:04,786 testcase.py[line: 28] WARNING: 用例[name=test-n-储值卡支付-不使用优惠，会员账户支付]处于禁用状态[active=0]，不执行
2017-01-13 11:11:04,786 testplan.py[line: 76] INFO: 正在更新用例执行结果
2017-01-13 11:11:04,786 mydb.py[line: 72] INFO: query：UPDATE testcase_report_tb SET runresult="Block", runtime="2017-01-13 11:11:04" WHERE executed_history_id = 20170113111100 AND testcase_id = 110 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:04,899 testplan.py[line: 87] INFO: 正在更新testlink上测试计划[testplan_id=74, bulid_version=v1.0.0],对应用例[testcase_id=110]的执行结果
2017-01-13 11:11:05,019 testplan.py[line: 45] INFO: 获取测试用例信息 [{'execution_type': '1', 'full_tc_external_id': 'wecharno-5', 'testcase_id': '93', 'importance': '2', 'summary': '', 'author_first_name': 'Testlink', 'status': '1', 'author_last_name': 'Administrator', 'id': '94', 'creation_ts': '2016-07-20 12:25:46', 'updater_first_name': 'Testlink', 'active': '1', 'preconditions': '', 'node_order': '1000', 'is_open': '1', 'modification_ts': '2016-11-29 18:05:21', 'tc_external_id': '5', 'author_login': 'admin', 'layout': '1', 'name': 'test-n-把商品移出购物车', 'updater_login': 'admin', 'updater_id': '1', 'testsuite_id': '91', 'author_id': '1', 'estimated_exec_duration': '', 'steps': [{'actions': '<p>\n\t{<br />\n\t&quot;步骤类型&quot;:&quot;执行用例&quot;,</p>\n<p>\n\t&quot;用例id&quot;:88,</p>\n<p>\n\t&quot;用例名称&quot;:&quot;test-n-把商品加入购物车&quot;<br />\n\t}</p>\n<p>\n\t&nbsp;</p>\n', 'expected_results': '', 'id': '95', 'active': '1', 'step_number': '1', 'execution_type': '1'}, {'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cart/delfromcart?&quot;,<br />\n\t&quot;参数&quot;:{&quot;strIds&quot;:&quot;[CaseStep.strIds]&quot;,&quot;serial&quot;:&quot;[global_serial]&quot;}<br />\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;键值相等&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:true}, &quot;消息&quot;:&quot;把商品移出购物车失败，success不为true&quot;}]</p>\n<p>\n\t}</p>\n', 'id': '96', 'active': '1', 'step_number': '2', 'execution_type': '1'}, {'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cartlist?&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}<br />\n\t&nbsp;</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;[]&quot;,&quot;消息&quot;:&quot;把商品移出购物车中失败&quot;}]</p>\n<p>\n\t}</p>\n', 'id': '178', 'active': '1', 'step_number': '3', 'execution_type': '1'}], 'version': '1', 'updater_last_name': 'Administrator'}]
2017-01-13 11:11:05,132 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 11:11:05,132 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 93, 'test-n-把商品移出购物车', '微商城-把商品移出购物车接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 11:11:05,133 testplan.py[line: 72] INFO: 开始执行测试用例[id=93，name=test-n-把商品移出购物车]
2017-01-13 11:11:05,133 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行用例","用例id":88,"用例名称":"test-n-把商品加入购物车"} 
2017-01-13 11:11:05,133 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：
2017-01-13 11:11:05,133 testcase.py[line: 51] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:05,133 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 93, 'test-n-把商品移出购物车', 'plan1_of_wechatno', 'pj_wechatno', 95, 1, '无', '无', '无', '无', '{"步骤类型":"执行用例","用例id":88,"用例名称":"test-n-把商品加入购物车"} ', '', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:05,134 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:11:05,251 global_function.py[line: 19] INFO: 获取测试用例信息 [{'execution_type': '1', 'full_tc_external_id': 'wecharno-4', 'testcase_id': '88', 'importance': '2', 'summary': '', 'author_first_name': 'Testlink', 'status': '1', 'author_last_name': 'Administrator', 'id': '89', 'creation_ts': '2016-07-20 12:07:40', 'updater_first_name': 'Testlink', 'active': '1', 'preconditions': '', 'node_order': '1000', 'is_open': '1', 'modification_ts': '2016-11-29 17:58:09', 'tc_external_id': '4', 'author_login': 'admin', 'layout': '1', 'name': 'test-n-把商品加入购物车', 'updater_login': 'admin', 'updater_id': '1', 'testsuite_id': '87', 'author_id': '1', 'estimated_exec_duration': '', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT id FROM customer WHERE channel_serial=%s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(\\&quot;[global_openId]\\&quot;,)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;customer_id&quot;:1}</p>\n<p>\n\t}</p>\n', 'id': '175', 'active': '1', 'step_number': '1', 'execution_type': '1'}, {'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;更新&quot;:&quot;UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.customer_id],)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '', 'id': '174', 'active': '1', 'step_number': '2', 'execution_type': '1'}, {'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/addtocart&quot;,<br />\n\t&quot;参数&quot;:{&quot;mallGoodsId&quot;:26838,&quot;standardId&quot;:&quot;undefined&quot;,&quot;amount&quot;:1,&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;键值相等&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:true}, &quot;消息&quot;:&quot;把商品加如购物车失败，success不为true&quot;}]</p>\n<p>\n\t}</p>\n', 'id': '90', 'active': '1', 'step_number': '3', 'execution_type': '1'}, {'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT id FROM mall_shopping_cart WHERE customer_id = %s and closed=%s ORDER BY id DESC LIMIT 1&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.customer_id],1)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;strIds&quot;:1}<br />\n\t}</p>\n', 'id': '176', 'active': '1', 'step_number': '4', 'execution_type': '1'}, {'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cartlist?&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}<br />\n\t&nbsp;</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;\\&quot;amount\\&quot;:1&quot;,&quot;消息&quot;:&quot;购物车中商品总数错误&quot;}, {&quot;模式&quot;:&quot;\\&quot;id\\&quot;:26838&quot;,&quot;消息&quot;:&quot;购物车中商品缺失&quot;}]</p>\n<p>\n\t}</p>\n', 'id': '177', 'active': '1', 'step_number': '5', 'execution_type': '1'}], 'version': '1', 'updater_last_name': 'Administrator'}]
2017-01-13 11:11:05,364 global_function.py[line: 39] INFO: 正在读取套件[id=87]的协议，host，端口配置...
2017-01-13 11:11:05,617 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 11:11:05,617 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 88, 'test-n-把商品加入购物车', '把商品加入购物车接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '0000-00-00 00:00:00')
2017-01-13 11:11:05,618 global_function.py[line: 71] INFO: 开始执行测试用例[id=88，name=test-n-把商品加入购物车]
2017-01-13 11:11:05,618 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT id FROM customer WHERE channel_serial=%s","参数":"(\"[global_openId]\",)"}
2017-01-13 11:11:05,619 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"customer_id":1}}
2017-01-13 11:11:05,619 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:05,619 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 175, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT id FROM customer WHERE channel_serial=%s","参数":"(\\"[global_openId]\\",)"}', '{"检查":"body","输出":{"customer_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:05,620 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:11:05,620 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 11:11:05,620 casestep.py[line: 149] INFO: 转换后的参数体为：("ous64uFCCLMyXYDJ-MkNilyCI5CY",)
2017-01-13 11:11:05,620 mydb.py[line: 87] INFO: query：SELECT id FROM customer WHERE channel_serial=%s  data：('ous64uFCCLMyXYDJ-MkNilyCI5CY',)
2017-01-13 11:11:05,624 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(167020,), flag:True
2017-01-13 11:11:05,624 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:11:05,624 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}, {'customer_id': 167020}]
2017-01-13 11:11:05,625 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:11:05,625 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:11:05",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT id FROM customer WHERE channel_serial=%s', '\u53c2\u6570': ['ous64uFCCLMyXYDJ-MkNilyCI5CY']}", expected_results="{'检查': 'body', '输出': {'customer_id': 1}}" WHERE executed_history_id = 20170113111100 AND testcase_id = 88 AND step_id = 175 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:05,626 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","更新":"UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1","参数":"([CaseStep.customer_id],)"}
2017-01-13 11:11:05,626 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：
2017-01-13 11:11:05,627 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:05,627 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 174, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","更新":"UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1","参数":"([CaseStep.customer_id],)"}', '', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:05,628 testcase.py[line: 78] INFO: 开始执行步骤操作[第2步]
2017-01-13 11:11:05,628 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.customer_id]
2017-01-13 11:11:05,628 casestep.py[line: 149] INFO: 转换后的参数体为：(167020,)
2017-01-13 11:11:05,628 mydb.py[line: 72] INFO: query：UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = 167020 and closed=1
2017-01-13 11:11:06,240 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:11:06,241 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:11:05",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u66f4\u65b0': 'UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1', '\u53c2\u6570': [167020]}", expected_results="" WHERE executed_history_id = 20170113111100 AND testcase_id = 88 AND step_id = 174 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:06,245 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"方法":"post","url":"/addtocart","参数":{"mallGoodsId":26838,"standardId":"undefined","amount":1,"serial":"[global_serial]","openId":"[global_openId]"}}
2017-01-13 11:11:06,246 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"把商品加如购物车失败,success不为true"}]}
2017-01-13 11:11:06,246 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:06,247 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111100', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 90, 3, '', 'http', 'm.test.saofu.cn', '80', '{"方法":"post","url":"/addtocart","参数":{"mallGoodsId":26838,"standardId":"undefined","amount":1,"serial":"[global_serial]","openId":"[global_openId]"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"把商品加如购物车失败,success不为true"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:06,251 testcase.py[line: 78] INFO: 开始执行步骤操作[第3步]
2017-01-13 11:11:06,252 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_urlencode
2017-01-13 11:11:06,253 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_serial]
2017-01-13 11:11:06,253 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 11:11:06,254 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('mallGoodsId', 26838), ('standardId', 'undefined'), ('amount', 1), ('serial', '[global_serial]'), ('openId', 'ous64uFCCLMyXYDJ-MkNilyCI5CY')])
2017-01-13 11:11:06,254 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:06,255 InterfaceUnittestTestCase.py[line: 30] INFO: 正在发起POST请求...
2017-01-13 11:11:06,255 httpprotocol.py[line: 74] INFO: 发起的请求为：http://m.test.saofu.cn:80/addtocart
2017-01-13 11:11:06,256 httpprotocol.py[line: 75] INFO: 参数为：b'mallGoodsId=26838&standardId=undefined&amount=1&serial=%5Bglobal_serial%5D&openId=ous64uFCCLMyXYDJ-MkNilyCI5CY'
2017-01-13 11:11:06,256 httpprotocol.py[line: 76] INFO: 请求头为：{'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5CY'}
2017-01-13 11:11:06,726 InterfaceUnittestTestCase.py[line: 40] INFO: 正在对服务器返回body进行解码
2017-01-13 11:11:06,726 InterfaceUnittestTestCase.py[line: 54] INFO: 服务器返回结果"响应体(body)": {"success":false,"message":"加入购物车失败","attach":null}
2017-01-13 11:11:06,727 InterfaceUnittestTestCase.py[line: 55] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 03:11:04 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding')]
2017-01-13 11:11:06,727 InterfaceUnittestTestCase.py[line: 56] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 11:11:06,727 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2017-01-13 11:11:06,727 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：False
2017-01-13 11:11:06,728 testcase.py[line: 129] INFO: 步骤[3]执行失败,停止执行用例[id=88, name=test-n-把商品加入购物车]
2017-01-13 11:11:06,728 testcase.py[line: 136] INFO: 正在更新步骤执行结果
2017-01-13 11:11:06,728 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Fail",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 65, in test_interface_of_urlencode    self.assert_result(body)  File E:\Projects\interface_project_for_dev\unittesttestcase.py, line 113, in assert_result    self.assertEqual(dict_level_list[len(dict_level_list) -1], last_value, item[消息])AssertionError: True != False : 把商品加如购物车失败,success不为true", protocol_method="post", runtime="2017-01-13 11:11:06",step_action="{'\u65b9\u6cd5': 'post', 'url': '/addtocart', '\u53c2\u6570': {'mallGoodsId': 26838, 'standardId': 'undefined', 'amount': 1, 'serial': '[global_serial]', 'openId': 'ous64uFCCLMyXYDJ-MkNilyCI5CY'}}", expected_results="{'条件': [{'模式': {'success': True}, '消息': '把商品加如购物车失败,success不为true'}], '检查': 'body', '匹配规则': '键值相等'}" WHERE executed_history_id = 20170113111100 AND testcase_id = 88 AND step_id = 90 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:06,730 global_function.py[line: 75] INFO: 正在更新用例执行结果
2017-01-13 11:11:06,730 mydb.py[line: 72] INFO: query：UPDATE testcase_report_tb SET runresult="Fail", runtime="2017-01-13 11:11:05" WHERE executed_history_id = 20170113111100 and testcase_id = 88 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:06,731 global_function.py[line: 82] INFO: 指定用例[88]已执行完
2017-01-13 11:11:17,157 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2017-01-13 11:11:17,157 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2017-01-13 11:11:17,171 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2017-01-13 11:11:17,174 global_var.py[line: 31] INFO: 正在获取testlink
2017-01-13 11:11:17,230 main.py[line: 57] INFO: 正在创建测试用例报告报表
2017-01-13 11:11:17,230 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2017-01-13 11:11:17,232 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2017-01-13 11:11:17,232 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2017-01-13 11:11:17,233 main.py[line: 63] INFO: 正在读取运行模式配置
2017-01-13 11:11:17,235 main.py[line: 70] INFO: 正在运行全局初始化用例……
2017-01-13 11:11:17,235 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2017-01-13 11:11:17,385 global_function.py[line: 19] INFO: 获取测试用例信息 [{'author_last_name': 'Administrator', 'modification_ts': '2016-11-30 15:41:36', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t初始化用例</p>\n', 'full_tc_external_id': 'pj_pos-1', 'author_login': 'admin', 'testcase_id': '148', 'layout': '1', 'id': '149', 'tc_external_id': '1', 'updater_first_name': 'Testlink', 'estimated_exec_duration': '', 'updater_login': 'admin', 'version': '1', 'execution_type': '1', 'testsuite_id': '147', 'name': 'test-n-登陆掌贝pos机', 'active': '1', 'is_open': '1', 'importance': '2', 'updater_last_name': 'Administrator', 'steps': [{'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '1', 'id': '183', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '2', 'id': '182', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'execution_type': '1', 'step_number': '3', 'id': '150', 'active': '1'}], 'author_id': '1', 'updater_id': '1', 'creation_ts': '2016-07-27 18:32:10', 'node_order': '1000', 'summary': '', 'status': '1'}]
2017-01-13 11:11:17,512 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2017-01-13 11:11:18,169 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2017-01-13 11:11:18,169 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111117', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '0000-00-00 00:00:00')
2017-01-13 11:11:18,170 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2017-01-13 11:11:18,170 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2017-01-13 11:11:18,171 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2017-01-13 11:11:18,171 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:18,171 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111117', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:18,172 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:11:18,172 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:18,172 mydb.py[line: 87] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2017-01-13 11:11:18,175 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2017-01-13 11:11:18,175 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:11:18,175 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2017-01-13 11:11:18,175 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:11:18,175 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:11:18",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT branch_id FROM account_operator WHERE id = %s', '\u53c2\u6570': [1318]}", expected_results="{'检查': 'body', '输出': {'branch_id': 1}}" WHERE executed_history_id = 20170113111117 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:11:18,176 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2017-01-13 11:11:18,176 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2017-01-13 11:11:18,176 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:18,176 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111117', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:18,177 testcase.py[line: 78] INFO: 开始执行步骤操作[第2步]
2017-01-13 11:11:18,177 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2017-01-13 11:11:18,177 casestep.py[line: 149] INFO: 转换后的参数体为：(1485916418,)
2017-01-13 11:11:18,178 mydb.py[line: 87] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2017-01-13 11:11:18,181 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2017-01-13 11:11:18,181 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:11:18,181 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2017-01-13 11:11:18,181 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:11:18,181 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:11:18",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '\u53c2\u6570': [1485916418]}", expected_results="{'检查': 'body', '输出': {'device_no': 1, 'serial_no': 2}}" WHERE executed_history_id = 20170113111117 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2017-01-13 11:11:18,182 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2017-01-13 11:11:18,182 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2017-01-13 11:11:18,182 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:18,183 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111117', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:18,184 testcase.py[line: 78] INFO: 开始执行步骤操作[第3步]
2017-01-13 11:11:18,184 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2017-01-13 11:11:18,184 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:18,184 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:18,184 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2017-01-13 11:11:18,184 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2017-01-13 11:11:18,184 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_product_version]
2017-01-13 11:11:18,184 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2017-01-13 11:11:18,185 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('DeviceId', '[CaseStep.device_no]'), ('SerialNo', '[CaseStep.serial_no]'), ('Content-Type', 'application/json;charset=utf-8'), ('ProductVersion', '[global_product_version]'), ('ProtocolVersion', '4.0')])
2017-01-13 11:11:18,185 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2017-01-13 11:11:18,186 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2017-01-13 11:11:18,186 httpprotocol.py[line: 75] INFO: 参数为：b'{"id": "1318", "password": "e10adc3949ba59abbe56e057f20f883e"}'
2017-01-13 11:11:18,186 httpprotocol.py[line: 76] INFO: 请求头为：OrderedDict([('DeviceId', '[CaseStep.device_no]'), ('SerialNo', '[CaseStep.serial_no]'), ('Content-Type', 'application/json;charset=utf-8'), ('ProductVersion', '[global_product_version]'), ('ProtocolVersion', '4.0')])
2017-01-13 11:11:18,582 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2017-01-13 11:11:18,582 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"code":"4000","reason":"查询设备信息失败，设备未出货或未激活","success":false}
2017-01-13 11:11:18,582 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 03:11:16 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2017-01-13 11:11:18,582 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 11:11:18,582 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2017-01-13 11:11:18,582 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：False
2017-01-13 11:11:18,583 global_function.py[line: 89] ERROR: 运行用例出错 'InterfaceUnittestTestCase' object has no attribute 'replace'
2017-01-13 11:11:18,584 main.py[line: 75] INFO: 用例[148]运行结果：('Fail', '执行用例出错 148')
2017-01-13 11:11:18,584 main.py[line: 78] INFO: 按项目运行测试
2017-01-13 11:11:18,584 main.py[line: 115] INFO: 运行指定项目
2017-01-13 11:11:18,697 main.py[line: 131] INFO: 正在读取测项目[id：73, project：pj_wechatno]的协议，host，端口配置...
2017-01-13 11:11:18,697 main.py[line: 134] INFO: 成功读取配置信息：{"protocol":"http","host":"m.test.saofu.cn","port":80} 
2017-01-13 11:11:18,699 main.py[line: 150] INFO: 正在执行测试项目[id：73, project：pj_wechatno]
2017-01-13 11:11:18,699 testproject.py[line: 23] INFO: 正在获取测试项目[id：73, name：pj_wechatno]对应对应的测试计划名称列表
2017-01-13 11:11:18,840 testproject.py[line: 28] INFO: 成功获取项目测试计划名称列表[list=['plan1_of_wechatno']]
2017-01-13 11:11:18,971 testproject.py[line: 38] INFO: 正在执行项目测试计划[project：pj_wechatno，testplan：plan1_of_wechatno]
2017-01-13 11:11:18,971 testplan.py[line: 29] INFO: 正在获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例
2017-01-13 11:11:19,088 testplan.py[line: 35] INFO: 成功获取测试计划[project=pj_wechatno，name=plan1_of_wechatno]的测试用例id：dict_keys(['88', '98', '126', '120', '93', '110', '80', '102', '114', '106', '76'])
2017-01-13 11:11:19,206 testplan.py[line: 45] INFO: 获取测试用例信息 [{'author_last_name': 'Administrator', 'modification_ts': '2016-11-29 17:58:09', 'author_first_name': 'Testlink', 'preconditions': '', 'full_tc_external_id': 'wecharno-4', 'author_login': 'admin', 'testcase_id': '88', 'layout': '1', 'id': '89', 'tc_external_id': '4', 'updater_first_name': 'Testlink', 'estimated_exec_duration': '', 'updater_login': 'admin', 'version': '1', 'execution_type': '1', 'testsuite_id': '87', 'name': 'test-n-把商品加入购物车', 'active': '1', 'is_open': '1', 'importance': '2', 'updater_last_name': 'Administrator', 'steps': [{'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;customer_id&quot;:1}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT id FROM customer WHERE channel_serial=%s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(\\&quot;[global_openId]\\&quot;,)&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '1', 'id': '175', 'active': '1'}, {'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;更新&quot;:&quot;UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.customer_id],)&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '2', 'id': '174', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;匹配规则&quot;:&quot;键值相等&quot;,<br />\n\t&quot;条件&quot;:[{&quot;模式&quot;:{&quot;success&quot;:true}, &quot;消息&quot;:&quot;把商品加如购物车失败，success不为true&quot;}]</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/addtocart&quot;,<br />\n\t&quot;参数&quot;:{&quot;mallGoodsId&quot;:26838,&quot;standardId&quot;:&quot;undefined&quot;,&quot;amount&quot;:1,&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}</p>\n', 'execution_type': '1', 'step_number': '3', 'id': '90', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;strIds&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT id FROM mall_shopping_cart WHERE customer_id = %s and closed=%s ORDER BY id DESC LIMIT 1&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.customer_id],1)&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'step_number': '4', 'id': '176', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;\\&quot;amount\\&quot;:1&quot;,&quot;消息&quot;:&quot;购物车中商品总数错误&quot;}, {&quot;模式&quot;:&quot;\\&quot;id\\&quot;:26838&quot;,&quot;消息&quot;:&quot;购物车中商品缺失&quot;}]</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{<br />\n\t&quot;方法&quot;:&quot;get&quot;,<br />\n\t&quot;url&quot;:&quot;/cartlist?&quot;,<br />\n\t&quot;参数&quot;:{&quot;serial&quot;:&quot;[global_serial]&quot;,&quot;openId&quot;:&quot;[global_openId]&quot;}<br />\n\t}<br />\n\t&nbsp;</p>\n', 'execution_type': '1', 'step_number': '5', 'id': '177', 'active': '1'}], 'author_id': '1', 'updater_id': '1', 'creation_ts': '2016-07-20 12:07:40', 'node_order': '1000', 'summary': '', 'status': '1'}]
2017-01-13 11:11:19,318 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2017-01-13 11:11:19,318 mydb.py[line: 57] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111117', 88, 'test-n-把商品加入购物车', '微商城-把商品加入购物车接口', 'plan1_of_wechatno', 'pj_wechatno', 'Block', '')
2017-01-13 11:11:19,319 testplan.py[line: 72] INFO: 开始执行测试用例[id=88，name=test-n-把商品加入购物车]
2017-01-13 11:11:19,319 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT id FROM customer WHERE channel_serial=%s","参数":"(\"[global_openId]\",)"}
2017-01-13 11:11:19,320 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"customer_id":1}}
2017-01-13 11:11:19,320 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:19,320 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111117', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 175, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT id FROM customer WHERE channel_serial=%s","参数":"(\\"[global_openId]\\",)"}', '{"检查":"body","输出":{"customer_id":1}}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:19,321 testcase.py[line: 78] INFO: 开始执行步骤操作[第1步]
2017-01-13 11:11:19,321 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 11:11:19,321 casestep.py[line: 149] INFO: 转换后的参数体为：("ous64uFCCLMyXYDJ-MkNilyCI5CY",)
2017-01-13 11:11:19,321 mydb.py[line: 87] INFO: query：SELECT id FROM customer WHERE channel_serial=%s  data：('ous64uFCCLMyXYDJ-MkNilyCI5CY',)
2017-01-13 11:11:19,425 casestep.py[line: 201] INFO: 数据库服务器返回的查询结果为为 query_result:(167020,), flag:True
2017-01-13 11:11:19,425 casestep.py[line: 203] INFO: 正在保存服务器返回结果到自定义变量
2017-01-13 11:11:19,426 casestep.py[line: 238] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}, {'customer_id': 167020}]
2017-01-13 11:11:19,426 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:11:19,427 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:11:19",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u5355\u6761\u67e5\u8be2': 'SELECT id FROM customer WHERE channel_serial=%s', '\u53c2\u6570': ['ous64uFCCLMyXYDJ-MkNilyCI5CY']}", expected_results="{'检查': 'body', '输出': {'customer_id': 1}}" WHERE executed_history_id = 20170113111117 AND testcase_id = 88 AND step_id = 175 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:19,432 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","更新":"UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1","参数":"([CaseStep.customer_id],)"}
2017-01-13 11:11:19,433 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：
2017-01-13 11:11:19,433 testcase.py[line: 56] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:19,433 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111117', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 174, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","更新":"UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1","参数":"([CaseStep.customer_id],)"}', '', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:19,437 testcase.py[line: 78] INFO: 开始执行步骤操作[第2步]
2017-01-13 11:11:19,438 casestep.py[line: 124] INFO: 找到待替换的非全局动态参数：[CaseStep.customer_id]
2017-01-13 11:11:19,438 casestep.py[line: 149] INFO: 转换后的参数体为：(167020,)
2017-01-13 11:11:19,439 mydb.py[line: 72] INFO: query：UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = 167020 and closed=1
2017-01-13 11:11:19,993 testcase.py[line: 158] INFO: 正在更新步骤执行结果
2017-01-13 11:11:19,993 mydb.py[line: 72] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2017-01-13 11:11:19",step_action="{'\u6b65\u9aa4\u7c7b\u578b': '\u6267\u884csql', '\u66f4\u65b0': 'UPDATE mall_shopping_cart SET amount = 0 WHERE customer_id = %s and closed=1', '\u53c2\u6570': [167020]}", expected_results="" WHERE executed_history_id = 20170113111117 AND testcase_id = 88 AND step_id = 174 AND project='pj_wechatno' AND testplan='plan1_of_wechatno'
2017-01-13 11:11:19,998 testcase.py[line: 40] INFO: 转换来自test_link 的step_action值为：{"方法":"post","url":"/addtocart","参数":{"mallGoodsId":26838,"standardId":"undefined","amount":1,"serial":"[global_serial]","openId":"[global_openId]"}}
2017-01-13 11:11:19,998 testcase.py[line: 42] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"把商品加如购物车失败,success不为true"}]}
2017-01-13 11:11:19,999 testcase.py[line: 61] INFO: 记录测试步骤到测试步骤报告表
2017-01-13 11:11:19,999 mydb.py[line: 57] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20170113111117', 88, 'test-n-把商品加入购物车', 'plan1_of_wechatno', 'pj_wechatno', 90, 3, '', 'http', 'm.test.saofu.cn', 80, '{"方法":"post","url":"/addtocart","参数":{"mallGoodsId":26838,"standardId":"undefined","amount":1,"serial":"[global_serial]","openId":"[global_openId]"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"把商品加如购物车失败,success不为true"}]}', 'Block', '', '0000-00-00 00:00:00')
2017-01-13 11:11:20,004 testcase.py[line: 78] INFO: 开始执行步骤操作[第3步]
2017-01-13 11:11:20,005 casestep.py[line: 171] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_urlencode
2017-01-13 11:11:20,005 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_serial]
2017-01-13 11:11:20,005 casestep.py[line: 138] INFO: 找到待替换的全局动态参数：[global_openId]
2017-01-13 11:11:20,006 casestep.py[line: 149] INFO: 转换后的参数体为：OrderedDict([('mallGoodsId', 26838), ('standardId', 'undefined'), ('amount', 1), ('serial', '[global_serial]'), ('openId', 'ous64uFCCLMyXYDJ-MkNilyCI5CY')])
2017-01-13 11:11:20,006 casestep.py[line: 117] INFO: 没找到需要替换的动态参数
2017-01-13 11:11:20,007 InterfaceUnittestTestCase.py[line: 30] INFO: 正在发起POST请求...
2017-01-13 11:11:20,008 httpprotocol.py[line: 74] INFO: 发起的请求为：http://m.test.saofu.cn:80/addtocart
2017-01-13 11:11:20,008 httpprotocol.py[line: 75] INFO: 参数为：b'mallGoodsId=26838&standardId=undefined&amount=1&serial=%5Bglobal_serial%5D&openId=ous64uFCCLMyXYDJ-MkNilyCI5CY'
2017-01-13 11:11:20,009 httpprotocol.py[line: 76] INFO: 请求头为：{'Cookie': '10549840601068216320=ous64uFCCLMyXYDJ-MkNilyCI5CY'}
2017-01-13 11:11:20,302 InterfaceUnittestTestCase.py[line: 40] INFO: 正在对服务器返回body进行解码
2017-01-13 11:11:20,302 InterfaceUnittestTestCase.py[line: 54] INFO: 服务器返回结果"响应体(body)": {"success":false,"message":"加入购物车失败","attach":null}
2017-01-13 11:11:20,302 InterfaceUnittestTestCase.py[line: 55] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Fri, 13 Jan 2017 03:11:18 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding')]
2017-01-13 11:11:20,302 InterfaceUnittestTestCase.py[line: 56] INFO: 服务器返回结果"状态码(code)": 200
2017-01-13 11:11:20,302 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2017-01-13 11:11:20,303 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：False
