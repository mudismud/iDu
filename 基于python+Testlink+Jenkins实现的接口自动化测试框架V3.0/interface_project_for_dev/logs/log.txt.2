2016-11-30 15:43:14,403 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 15:43:14,409 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 15:43:14,434 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 15:43:14,437 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 15:43:14,489 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 15:43:14,489 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 15:43:14,492 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 15:43:14,492 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 15:43:14,493 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 15:43:14,495 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 15:43:14,495 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2016-11-30 15:43:14,657 global_function.py[line: 19] INFO: 获取测试用例信息 [{'updater_id': '1', 'author_login': 'admin', 'preconditions': '<p>\n\t初始化用例</p>\n', 'node_order': '1000', 'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'testsuite_id': '147', 'author_id': '1', 'importance': '2', 'name': 'test-n-登陆掌贝pos机', 'full_tc_external_id': 'pj_pos-1', 'creation_ts': '2016-07-27 18:32:10', 'author_last_name': 'Administrator', 'id': '149', 'version': '1', 'active': '1', 'is_open': '1', 'layout': '1', 'tc_external_id': '1', 'testcase_id': '148', 'updater_login': 'admin', 'summary': '', 'updater_last_name': 'Administrator', 'execution_type': '1', 'status': '1', 'updater_first_name': 'Testlink', 'modification_ts': '2016-11-30 15:41:36', 'steps': [{'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183', 'execution_type': '1', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182', 'execution_type': '1', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'step_number': '3', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150', 'execution_type': '1', 'active': '1'}]}]
2016-11-30 15:43:14,800 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 15:43:15,440 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 15:43:15,440 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130154314', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 15:43:15,441 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 15:43:15,441 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 15:43:15,442 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 15:43:15,442 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 15:43:15,442 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130154314', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 15:43:15,443 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 15:43:15,443 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 15:43:15,443 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 15:43:15,446 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 15:43:15,447 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 15:43:15,447 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 15:43:15,447 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 15:43:15,447 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 15:43:15",step_action="{'参数': (1318,), '单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '步骤类型': '执行sql'}", expected_results="{'检查': 'body', '输出': {'branch_id': 1}}" WHERE executed_history_id = 20161130154314 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 15:43:15,449 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 15:43:15,449 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 15:43:15,449 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 15:43:15,449 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130154314', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 15:43:15,450 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 15:43:15,451 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 15:43:15,451 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 15:43:15,451 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 15:43:15,454 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 15:43:15,454 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 15:43:15,454 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 15:43:15,454 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 15:43:15,454 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 15:43:15",step_action="{'参数': (1485916418,), '单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '步骤类型': '执行sql'}", expected_results="{'检查': 'body', '输出': {'serial_no': 2, 'device_no': 1}}" WHERE executed_history_id = 20161130154314 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 15:43:15,457 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 15:43:15,457 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 15:43:15,457 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 15:43:15,457 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130154314', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 15:43:15,460 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 15:43:15,460 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 15:43:15,460 casestep.py[line: 102] INFO: 转换后的参数体为：{'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}
2016-11-30 15:43:15,460 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 15:43:15,460 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 15:43:15,460 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 15:43:15,460 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 15:43:15,460 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 15:43:15,461 casestep.py[line: 102] INFO: 转换后的参数体为：{'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D'}
2016-11-30 15:43:15,461 InterfaceUnittestTestCase.py[line: 88] INFO: 正在发起POST请求...
2016-11-30 15:43:15,461 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 15:43:15,461 httpprotocol.py[line: 75] INFO: 参数为：b'{"password": "e10adc3949ba59abbe56e057f20f883e", "id": "1318"}'
2016-11-30 15:43:15,461 httpprotocol.py[line: 76] INFO: 请求头为：{'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C'}
2016-11-30 15:43:16,489 InterfaceUnittestTestCase.py[line: 98] INFO: 正在对服务器返回body进行解码
2016-11-30 15:43:16,489 InterfaceUnittestTestCase.py[line: 112] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"c6832e77-7ed3-4aae-9b24-1bac1e5e7d11"}
2016-11-30 15:43:16,489 InterfaceUnittestTestCase.py[line: 113] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 07:43:18 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 15:43:16,489 InterfaceUnittestTestCase.py[line: 114] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 15:43:16,489 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 15:43:16,490 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 15:43:16,490 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 15:43:16,490 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 15:43:16,490 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 15:43:16,490 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 15:43:16,490 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 15:43:16,490 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：c6832e77-7ed3-4aae-9b24-1bac1e5e7d11
2016-11-30 15:43:16,490 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：c6832e77-7ed3-4aae-9b24-1bac1e5e7d11
2016-11-30 15:43:16,491 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 15:43:16,491 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 15:43:16,491 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 15:43:16,491 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'Token': 'c6832e77-7ed3-4aae-9b24-1bac1e5e7d11'}, {'OperatorId': 1318}]
2016-11-30 15:43:16,491 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 15:43:16,491 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 15:43:15",step_action="{'参数': {'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}, '请求头': {'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D'}, 'url': '/saofu-client/password/login', '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="{'检查': 'body', '条件': [{'消息': '登录失败,success不为true', '模式': {'success': True}}, {'消息': 'message不为成功', '模式': {'message': '成功'}}, {'消息': 'code不为4001', '模式': {'code': '4001'}}], '输出': {'Token': {'token': 'value'}, 'OperatorId': {'operator': {'id': 'value'}}}, '匹配规则': '键值相等'}" WHERE executed_history_id = 20161130154314 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 15:43:16,494 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 15:43:16,494 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 15:43:16,495 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 15:43:15" WHERE executed_history_id = 20161130154314 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 15:43:16,496 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 15:43:16,497 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 15:43:16,497 main.py[line: 78] INFO: 按项目运行测试
2016-11-30 15:43:16,497 main.py[line: 115] INFO: 运行指定项目
2016-11-30 15:43:16,659 main.py[line: 131] INFO: 正在读取测项目[id：145, project：pj_pos]的协议，host，端口配置...
2016-11-30 15:43:16,659 main.py[line: 134] INFO: 成功读取配置信息：{"protocol":"https","host":"saofu.client.test.saofu.cn","port":443}
2016-11-30 15:43:16,662 main.py[line: 150] INFO: 正在执行测试项目[id：145, project：pj_pos]
2016-11-30 15:43:16,662 testproject.py[line: 23] INFO: 正在获取测试项目[id：145, name：pj_pos]对应对应的测试计划名称列表
2016-11-30 15:43:16,891 testproject.py[line: 28] INFO: 成功获取项目测试计划名称列表[list=['plan1_of_pos']]
2016-11-30 15:43:17,065 testproject.py[line: 38] INFO: 正在执行项目测试计划[project：pj_pos，testplan：plan1_of_pos]
2016-11-30 15:43:17,066 testplan.py[line: 29] INFO: 正在获取测试计划[project=pj_pos，name=plan1_of_pos]的测试用例
2016-11-30 15:43:17,221 testplan.py[line: 35] INFO: 成功获取测试计划[project=pj_pos，name=plan1_of_pos]的测试用例id：dict_keys(['152', '148'])
2016-11-30 15:43:17,360 testplan.py[line: 45] INFO: 获取测试用例信息 [{'updater_id': '1', 'author_login': 'admin', 'preconditions': '', 'node_order': '1000', 'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'testsuite_id': '151', 'author_id': '1', 'importance': '2', 'name': 'test-n-修改积分', 'full_tc_external_id': 'pj_pos-2', 'creation_ts': '2016-07-28 12:10:09', 'author_last_name': 'Administrator', 'id': '153', 'version': '1', 'active': '1', 'is_open': '1', 'layout': '1', 'tc_external_id': '2', 'testcase_id': '152', 'updater_login': 'admin', 'summary': '', 'updater_last_name': 'Administrator', 'execution_type': '1', 'status': '1', 'updater_first_name': 'Testlink', 'modification_ts': '2016-11-30 00:19:08', 'steps': [{'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;:&quot;包含字符串&quot;,</p>\n<p>\n\t&quot;条件&quot;:[{&quot;模式&quot;:&quot;success\\&quot;:true&quot;, &quot;消息&quot;:&quot;修改积分失败&quot;}]</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t<br />\n\t{&quot;函数&quot;：&quot;test_interface_of_json&quot;，</p>\n<p>\n\t&quot;请求头&quot;:{&quot;DeviceId&quot;:&quot;[CaseStep.device_no]&quot;, &quot;SerialNo&quot;:&quot;[CaseStep.serial_no]&quot;, &quot;Content-Type&quot;:&quot;application/json;charset=utf-8&quot;,&quot;ProductVersion&quot;:&quot;[global_product_version]&quot;,&quot;ProtocolVersion&quot;:&quot;[global_product_version]&quot;,&quot;OperatorId&quot;:&quot;[OperatorId]&quot;, &quot;Token&quot;:&quot;[Token]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/customer/customer_bonus_update_v3&quot;,<br />\n\t&quot;参数&quot;:{&quot;bonus&quot;:37593,&quot;code&quot;:&quot;17817738178&quot;}<br />\n\t}<br />\n\t&nbsp;</p>\n', 'id': '154', 'execution_type': '1', 'active': '1'}]}]
2016-11-30 15:43:17,482 testplan.py[line: 69] INFO: 记录测试用例到测试用例报表
2016-11-30 15:43:17,482 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130154314', 152, 'test-n-修改积分', '扫码-修改积分接口', 'plan1_of_pos', 'pj_pos', 'Block', '')
2016-11-30 15:43:17,483 testplan.py[line: 72] INFO: 开始执行测试用例[id=152，name=test-n-修改积分]
2016-11-30 15:43:17,483 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头":{"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion":"[global_product_version]","ProtocolVersion":"[global_product_version]","OperatorId":"[OperatorId]", "Token":"[Token]"},"方法":"post","url":"/saofu-client/customer/customer_bonus_update_v3","参数":{"bonus":37593,"code":"17817738178"}} 
2016-11-30 15:43:17,484 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"包含字符串","条件":[{"模式":"success\":true", "消息":"修改积分失败"}]}
2016-11-30 15:43:17,484 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 15:43:17,484 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130154314', 152, 'test-n-修改积分', 'plan1_of_pos', 'pj_pos', 154, 1, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头":{"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion":"[global_product_version]","ProtocolVersion":"[global_product_version]","OperatorId":"[OperatorId]", "Token":"[Token]"},"方法":"post","url":"/saofu-client/customer/customer_bonus_update_v3","参数":{"bonus":37593,"code":"17817738178"}} ', '{"检查":"body","匹配规则":"包含字符串","条件":[{"模式":"success\\":true", "消息":"修改积分失败"}]}', 'Block', '', '')
2016-11-30 15:43:17,485 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 15:43:17,485 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 15:43:17,485 casestep.py[line: 102] INFO: 转换后的参数体为：{'code': '17817738178', 'bonus': 37593}
2016-11-30 15:43:17,485 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 15:43:17,485 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 15:43:17,485 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 15:43:17,485 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 15:43:17,485 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 15:43:17,486 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[Token]
2016-11-30 15:43:17,486 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[OperatorId]
2016-11-30 15:43:17,486 casestep.py[line: 102] INFO: 转换后的参数体为：{'DeviceId': '182590014248006', 'ProtocolVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'Token': 'c6832e77-7ed3-4aae-9b24-1bac1e5e7d11', 'Content-Type': 'application/json;charset=utf-8', 'OperatorId': 1318}
2016-11-30 15:43:17,486 InterfaceUnittestTestCase.py[line: 88] INFO: 正在发起POST请求...
2016-11-30 15:43:17,486 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/customer/customer_bonus_update_v3
2016-11-30 15:43:17,486 httpprotocol.py[line: 75] INFO: 参数为：b'{"code": "17817738178", "bonus": 37593}'
2016-11-30 15:43:17,486 httpprotocol.py[line: 76] INFO: 请求头为：{'DeviceId': '182590014248006', 'ProtocolVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'Token': 'c6832e77-7ed3-4aae-9b24-1bac1e5e7d11', 'Content-Type': 'application/json;charset=utf-8', 'OperatorId': 1318}
2016-11-30 15:43:17,949 InterfaceUnittestTestCase.py[line: 98] INFO: 正在对服务器返回body进行解码
2016-11-30 15:43:17,951 InterfaceUnittestTestCase.py[line: 112] INFO: 服务器返回结果"响应体(body)": {"bonus":37593,"code":"4001","success":true}
2016-11-30 15:43:17,951 InterfaceUnittestTestCase.py[line: 113] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 07:43:20 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding')]
2016-11-30 15:43:17,951 InterfaceUnittestTestCase.py[line: 114] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 15:43:17,951 unittesttestcase.py[line: 64] INFO: 要匹配的模式（子字符串）为：success":true
2016-11-30 15:43:17,952 unittesttestcase.py[line: 292] WARNING: 未检测到从服务器返回中提取内容的要求，请检查是否正确填写预期结果
2016-11-30 15:43:17,952 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 15:43:17,952 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 15:43:17",step_action="{'参数': {'code': '17817738178', 'bonus': 37593}, '请求头': {'DeviceId': '182590014248006', 'ProtocolVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'Token': 'c6832e77-7ed3-4aae-9b24-1bac1e5e7d11', 'Content-Type': 'application/json;charset=utf-8', 'OperatorId': 1318}, 'url': '/saofu-client/customer/customer_bonus_update_v3', '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="{'检查': 'body', '条件': [{'消息': '修改积分失败', '模式': 'success':true'}], '匹配规则': '包含字符串'}" WHERE executed_history_id = 20161130154314 AND testcase_id = 152 AND step_id = 154 AND project='pj_pos' AND testplan='plan1_of_pos'
2016-11-30 15:43:17,956 testcase.py[line: 158] INFO: 测试用例[id=152, name=test-n-修改积分]执行成功
2016-11-30 15:43:17,956 testplan.py[line: 76] INFO: 正在更新用例执行结果
2016-11-30 15:43:17,956 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 15:43:17" WHERE executed_history_id = 20161130154314 AND testcase_id = 152 AND project='pj_pos' AND testplan='plan1_of_pos'
2016-11-30 15:43:18,112 testplan.py[line: 87] INFO: 正在更新testlink上测试计划[testplan_id=146, bulid_version=v1.0.0],对应用例[testcase_id=152]的执行结果
2016-11-30 15:43:18,446 testplan.py[line: 45] INFO: 获取测试用例信息 [{'updater_id': '1', 'author_login': 'admin', 'preconditions': '<p>\n\t初始化用例</p>\n', 'node_order': '1000', 'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'testsuite_id': '147', 'author_id': '1', 'importance': '2', 'name': 'test-n-登陆掌贝pos机', 'full_tc_external_id': 'pj_pos-1', 'creation_ts': '2016-07-27 18:32:10', 'author_last_name': 'Administrator', 'id': '149', 'version': '1', 'active': '1', 'is_open': '1', 'layout': '1', 'tc_external_id': '1', 'testcase_id': '148', 'updater_login': 'admin', 'summary': '', 'updater_last_name': 'Administrator', 'execution_type': '1', 'status': '1', 'updater_first_name': 'Testlink', 'modification_ts': '2016-11-30 15:41:36', 'steps': [{'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183', 'execution_type': '1', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182', 'execution_type': '1', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'step_number': '3', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150', 'execution_type': '1', 'active': '1'}]}]
2016-11-30 15:43:18,446 testplan.py[line: 52] INFO: 用例[id=148, name=test-n-登陆掌贝pos机]为全局初始化用例，已跳过执行
2016-11-30 15:43:18,446 testplan.py[line: 97] INFO: 测试计划[project=pj_pos ,testplan=plan1_of_pos]已执行完
2016-11-30 15:43:18,446 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 15:43:18,447 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 15:43:18,447 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130154314',)
2016-11-30 15:43:18,449 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 15:43:18,450 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130154314')
2016-11-30 15:43:18,451 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 15:43:18,451 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130154314')
2016-11-30 15:43:18,452 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 15:43:18,452 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130154314')
2016-11-30 15:43:18,453 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 15:43:18,453 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130154314')
2016-11-30 15:43:18,455 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-11-30 15:43:18,455 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130154314',)
2016-11-30 15:43:18,456 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 15:43:18,457 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130154314')
2016-11-30 15:43:18,458 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 15:43:18,459 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：plan1_of_pos]的测试用例执行结果
2016-11-30 15:43:18,459 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', 'plan1_of_pos', '20161130154314')
2016-11-30 15:43:18,461 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：plan1_of_pos]的测试用例运行结果到测试报告
2016-11-30 15:43:18,461 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-11-30 15:43:18,461 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130154314',)
2016-11-30 15:43:18,463 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 15:43:18,463 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130154314')
2016-11-30 15:43:18,465 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 15:43:18,465 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130154314')
2016-11-30 15:43:18,467 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_pos, testplan：plan1_of_pos]已运行的测试用例
2016-11-30 15:43:18,467 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', 'plan1_of_pos', '20161130154314')
2016-11-30 15:43:18,469 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=152]步骤运行结果
2016-11-30 15:43:18,469 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', 'plan1_of_pos', 152, '20161130154314')
2016-11-30 15:43:18,470 htmlreporter.py[line: 183] INFO: 正在设置测试报告结果文件名
2016-11-30 15:43:18,470 htmlreporter.py[line: 193] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130154314.html
2016-11-30 15:43:18,471 htmlreporter.py[line: 186] INFO: 正在生成测试报告
2016-11-30 15:43:18,472 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 15:43:18,620 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130154314.html
2016-11-30 15:43:18,620 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 15:43:18,646 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 16:36:13,591 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 16:36:13,591 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 16:36:13,604 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 16:36:13,606 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 16:36:13,649 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 16:36:13,649 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 16:36:13,651 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 16:36:13,651 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 16:36:13,652 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 16:36:13,653 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 16:36:13,654 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148]
2016-11-30 16:36:13,861 global_function.py[line: 19] INFO: 获取测试用例信息 [{'preconditions': '<p>\n\t初始化用例</p>\n', 'author_last_name': 'Administrator', 'layout': '1', 'author_login': 'admin', 'tc_external_id': '1', 'author_first_name': 'Testlink', 'updater_login': 'admin', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'step_number': '1', 'execution_type': '1', 'active': '1'}, {'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'step_number': '2', 'execution_type': '1', 'active': '1'}, {'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'step_number': '3', 'execution_type': '1', 'active': '1'}], 'summary': '', 'name': 'test-n-登陆掌贝pos机', 'full_tc_external_id': 'pj_pos-1', 'execution_type': '1', 'version': '1', 'id': '149', 'creation_ts': '2016-07-27 18:32:10', 'status': '1', 'modification_ts': '2016-11-30 15:41:36', 'updater_first_name': 'Testlink', 'active': '1', 'node_order': '1000', 'estimated_exec_duration': '', 'testsuite_id': '147', 'updater_id': '1', 'updater_last_name': 'Administrator', 'is_open': '1', 'testcase_id': '148', 'author_id': '1', 'importance': '2'}]
2016-11-30 16:36:14,046 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 16:36:14,673 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 16:36:14,673 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130163613', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 16:36:14,674 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 16:36:14,674 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 16:36:14,674 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 16:36:14,674 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 16:36:14,674 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130163613', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 16:36:14,676 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 16:36:14,676 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 16:36:14,676 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 16:36:14,679 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 16:36:14,680 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 16:36:14,680 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 16:36:14,680 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 16:36:14,680 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 16:36:14",step_action="{'单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '步骤类型': '执行sql', '参数': (1318,)}", expected_results="{'检查': 'body', '输出': {'branch_id': 1}}" WHERE executed_history_id = 20161130163613 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 16:36:14,684 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 16:36:14,685 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 16:36:14,685 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 16:36:14,685 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130163613', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 16:36:14,687 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 16:36:14,687 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 16:36:14,687 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 16:36:14,687 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 16:36:14,691 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 16:36:14,691 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 16:36:14,692 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 16:36:14,692 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 16:36:14,692 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 16:36:14",step_action="{'单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '步骤类型': '执行sql', '参数': (1485916418,)}", expected_results="{'检查': 'body', '输出': {'serial_no': 2, 'device_no': 1}}" WHERE executed_history_id = 20161130163613 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 16:36:14,697 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 16:36:14,698 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 16:36:14,698 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 16:36:14,698 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130163613', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 16:36:14,700 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 16:36:14,700 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 16:36:14,700 casestep.py[line: 102] INFO: 转换后的参数体为：{'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}
2016-11-30 16:36:14,700 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 16:36:14,700 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 16:36:14,700 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 16:36:14,701 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 16:36:14,701 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 16:36:14,701 casestep.py[line: 102] INFO: 转换后的参数体为：{'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8'}
2016-11-30 16:36:14,701 InterfaceUnittestTestCase.py[line: 88] INFO: 正在发起POST请求...
2016-11-30 16:36:14,701 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 16:36:14,701 httpprotocol.py[line: 75] INFO: 参数为：b'{"password": "e10adc3949ba59abbe56e057f20f883e", "id": "1318"}'
2016-11-30 16:36:14,701 httpprotocol.py[line: 76] INFO: 请求头为：{'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8'}
2016-11-30 16:36:15,680 InterfaceUnittestTestCase.py[line: 98] INFO: 正在对服务器返回body进行解码
2016-11-30 16:36:15,680 InterfaceUnittestTestCase.py[line: 112] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"5f6a95d3-f684-4fd2-b028-3f6b21689fd6"}
2016-11-30 16:36:15,680 InterfaceUnittestTestCase.py[line: 113] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 08:36:17 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 16:36:15,680 InterfaceUnittestTestCase.py[line: 114] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 16:36:15,680 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 16:36:15,681 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 16:36:15,681 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 16:36:15,681 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 16:36:15,681 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 16:36:15,681 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 16:36:15,681 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 16:36:15,681 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 16:36:15,682 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 16:36:15,682 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 16:36:15,682 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：5f6a95d3-f684-4fd2-b028-3f6b21689fd6
2016-11-30 16:36:15,682 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：5f6a95d3-f684-4fd2-b028-3f6b21689fd6
2016-11-30 16:36:15,682 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'OperatorId': 1318}, {'Token': '5f6a95d3-f684-4fd2-b028-3f6b21689fd6'}]
2016-11-30 16:36:15,682 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 16:36:15,682 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 16:36:14",step_action="{'函数': 'test_interface_of_json', '方法': 'post', '参数': {'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}, '请求头': {'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8'}, 'url': '/saofu-client/password/login'}", expected_results="{'匹配规则': '键值相等', '条件': [{'模式': {'success': True}, '消息': '登录失败,success不为true'}, {'模式': {'message': '成功'}, '消息': 'message不为成功'}, {'模式': {'code': '4001'}, '消息': 'code不为4001'}], '检查': 'body', '输出': {'OperatorId': {'operator': {'id': 'value'}}, 'Token': {'token': 'value'}}}" WHERE executed_history_id = 20161130163613 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 16:36:15,685 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 16:36:15,685 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 16:36:15,685 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 16:36:14" WHERE executed_history_id = 20161130163613 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 16:36:15,687 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 16:36:15,687 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 16:36:15,688 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 16:36:15,688 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 16:36:15,839 global_function.py[line: 19] INFO: 获取测试用例信息 [{'preconditions': '', 'author_last_name': 'Administrator', 'layout': '1', 'author_login': 'admin', 'tc_external_id': '13', 'author_first_name': 'Testlink', 'updater_login': 'admin', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'id': '72', 'expected_results': '', 'step_number': '1', 'execution_type': '1', 'active': '1'}], 'summary': '', 'name': '提交网址', 'full_tc_external_id': 'tc-13', 'execution_type': '1', 'version': '1', 'id': '71', 'creation_ts': '2016-04-07 00:08:17', 'status': '1', 'modification_ts': '2016-11-30 16:35:58', 'updater_first_name': 'Testlink', 'active': '1', 'node_order': '1000', 'estimated_exec_duration': '', 'testsuite_id': '69', 'updater_id': '1', 'updater_last_name': 'Administrator', 'is_open': '1', 'testcase_id': '70', 'author_id': '1', 'importance': '2'}]
2016-11-30 16:36:16,020 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 16:36:16,298 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 16:36:16,298 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130163613', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 16:36:16,300 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 16:36:16,300 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 16:36:16,300 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 16:36:16,301 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 16:36:16,301 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130163613', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 16:36:16,311 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 16:36:16,312 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_urlencode
2016-11-30 16:36:16,312 casestep.py[line: 102] INFO: 转换后的参数体为：{'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'url': 'http://blog.sina.com.cn/ishouke'}
2016-11-30 16:36:16,312 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 16:36:16,312 InterfaceUnittestTestCase.py[line: 30] INFO: 正在发起POST请求...
2016-11-30 16:36:16,312 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submit
2016-11-30 16:36:16,312 httpprotocol.py[line: 75] INFO: 参数为：b'checkcode=rkqj&email=1033553122%4040qq.com&websitetype=%E5%8D%9A%E5%AE%A2%E8%AE%BA%E5%9D%9B&url=http%3A%2F%2Fblog.sina.com.cn%2Fishouke'
2016-11-30 16:36:16,312 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 16:36:16,496 InterfaceUnittestTestCase.py[line: 40] INFO: 正在对服务器返回body进行解码
2016-11-30 16:36:16,497 InterfaceUnittestTestCase.py[line: 55] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Wed, 30 Nov 2016 08:36:08 GMT'), ('Content-Type', 'text/html; charset=utf-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding'), ('Set-Cookie', 'PHPSESSID=e3pq0hoifhu1u3eb8n1kus6p61; path=/'), ('Expires', 'Thu, 19 Nov 1981 08:52:00 GMT'), ('Pragma', 'no-cache'), ('Cache-control', 'private'), ('X-Powered-By', 'ThinkPHP')]
2016-11-30 16:36:16,497 InterfaceUnittestTestCase.py[line: 56] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 16:36:16,497 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 16:36:16,497 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 16:36:16",step_action="{'方法': 'post', '参数': {'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'url': 'http://blog.sina.com.cn/ishouke'}, 'url': '/index.php?g=Embody&m=Index&a=submit'}", expected_results="" WHERE executed_history_id = 20161130163613 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 16:36:16,500 testcase.py[line: 158] INFO: 测试用例[id=70, name=提交网址]执行成功
2016-11-30 16:36:16,500 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 16:36:16,500 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 16:36:16" WHERE executed_history_id = 20161130163613 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 16:36:16,501 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 16:36:16,502 main.py[line: 240] INFO: 用例[70]运行结果：('Pass', '')
2016-11-30 16:36:16,502 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 16:36:16,502 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 16:36:16,503 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130163613',)
2016-11-30 16:36:16,510 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 16:36:16,511 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130163613')
2016-11-30 16:36:16,514 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 16:36:16,514 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130163613')
2016-11-30 16:36:16,515 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 16:36:16,515 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130163613')
2016-11-30 16:36:16,516 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 16:36:16,516 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130163613')
2016-11-30 16:36:16,517 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-11-30 16:36:16,517 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130163613',)
2016-11-30 16:36:16,519 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 16:36:16,519 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130163613')
2016-11-30 16:36:16,521 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 16:36:16,521 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 16:36:16,521 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130163613')
2016-11-30 16:36:16,523 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 16:36:16,524 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-11-30 16:36:16,524 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130163613',)
2016-11-30 16:36:16,525 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 16:36:16,525 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130163613')
2016-11-30 16:36:16,527 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 16:36:16,527 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130163613')
2016-11-30 16:36:16,530 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 16:36:16,530 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130163613')
2016-11-30 16:36:16,533 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 16:36:16,533 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130163613')
2016-11-30 16:36:16,535 htmlreporter.py[line: 183] INFO: 正在设置测试报告结果文件名
2016-11-30 16:36:16,535 htmlreporter.py[line: 193] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130163613.html
2016-11-30 16:36:16,535 htmlreporter.py[line: 186] INFO: 正在生成测试报告
2016-11-30 16:36:16,536 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 16:36:16,785 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130163613.html
2016-11-30 16:36:16,785 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 16:36:16,837 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 18:44:51,020 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 18:44:51,020 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 18:44:51,033 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 18:44:51,035 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 18:44:51,084 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 18:44:51,084 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 18:44:51,085 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 18:44:51,085 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 18:44:51,086 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 18:44:51,088 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 18:44:51,088 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 18:44:51,235 global_function.py[line: 19] INFO: 获取测试用例信息 [{'updater_login': 'admin', 'updater_last_name': 'Administrator', 'testsuite_id': '147', 'modification_ts': '2016-11-30 15:41:36', 'id': '149', 'active': '1', 'estimated_exec_duration': '', 'steps': [{'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'execution_type': '1'}, {'active': '1', 'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'execution_type': '1'}, {'active': '1', 'step_number': '3', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'execution_type': '1'}], 'is_open': '1', 'testcase_id': '148', 'importance': '2', 'author_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'full_tc_external_id': 'pj_pos-1', 'name': 'test-n-登陆掌贝pos机', 'updater_id': '1', 'tc_external_id': '1', 'author_id': '1', 'author_login': 'admin', 'summary': '', 'version': '1', 'creation_ts': '2016-07-27 18:32:10', 'node_order': '1000', 'status': '1', 'author_first_name': 'Testlink', 'execution_type': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'layout': '1'}]
2016-11-30 18:44:51,384 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 18:44:52,128 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 18:44:52,128 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184451', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 18:44:52,129 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 18:44:52,129 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 18:44:52,129 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 18:44:52,130 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 18:44:52,130 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184451', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 18:44:52,131 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 18:44:52,131 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 18:44:52,132 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 18:44:52,134 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 18:44:52,134 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 18:44:52,135 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 18:44:52,135 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 18:44:52,135 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 18:44:52",step_action="{'单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '步骤类型': '执行sql', '参数': (1318,)}", expected_results="{'输出': {'branch_id': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130184451 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 18:44:52,138 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 18:44:52,138 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 18:44:52,138 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 18:44:52,139 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184451', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 18:44:52,141 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 18:44:52,141 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 18:44:52,142 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 18:44:52,142 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 18:44:52,145 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 18:44:52,146 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 18:44:52,146 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 18:44:52,146 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 18:44:52,146 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 18:44:52",step_action="{'单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '步骤类型': '执行sql', '参数': (1485916418,)}", expected_results="{'输出': {'serial_no': 2, 'device_no': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130184451 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 18:44:52,148 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 18:44:52,149 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 18:44:52,149 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 18:44:52,149 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184451', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 18:44:52,150 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 18:44:52,150 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 18:44:52,150 casestep.py[line: 102] INFO: 转换后的参数体为：{'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}
2016-11-30 18:44:52,150 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 18:44:52,150 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 18:44:52,150 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 18:44:52,151 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 18:44:52,151 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 18:44:52,151 casestep.py[line: 102] INFO: 转换后的参数体为：{'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006'}
2016-11-30 18:44:52,151 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 18:44:52,151 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 18:44:52,151 httpprotocol.py[line: 75] INFO: 参数为：b'{"password": "e10adc3949ba59abbe56e057f20f883e", "id": "1318"}'
2016-11-30 18:44:52,151 httpprotocol.py[line: 76] INFO: 请求头为：{'DeviceId': '182590014248006', 'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'Content-Type': 'application/json;charset=utf-8', 'ProductVersion': '3.2.12C'}
2016-11-30 18:44:54,874 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 18:44:54,874 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"21891781-c199-4044-8e51-3284d1247e90"}
2016-11-30 18:44:54,874 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 10:44:56 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 18:44:54,875 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 18:44:54,875 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 18:44:54,875 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 18:44:54,875 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 18:44:54,875 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 18:44:54,875 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 18:44:54,875 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 18:44:54,875 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 18:44:54,876 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：21891781-c199-4044-8e51-3284d1247e90
2016-11-30 18:44:54,876 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：21891781-c199-4044-8e51-3284d1247e90
2016-11-30 18:44:54,876 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 18:44:54,876 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 18:44:54,876 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 18:44:54,876 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'Token': '21891781-c199-4044-8e51-3284d1247e90'}, {'OperatorId': 1318}]
2016-11-30 18:44:54,876 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 18:44:54,877 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 18:44:52",step_action="{'请求头': {'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006'}, 'url': '/saofu-client/password/login', '参数': {'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}, '方法': 'post', '函数': 'test_interface_of_json'}", expected_results="{'条件': [{'模式': {'success': True}, '消息': '登录失败,success不为true'}, {'模式': {'message': '成功'}, '消息': 'message不为成功'}, {'模式': {'code': '4001'}, '消息': 'code不为4001'}], '输出': {'Token': {'token': 'value'}, 'OperatorId': {'operator': {'id': 'value'}}}, '检查': 'body', '匹配规则': '键值相等'}" WHERE executed_history_id = 20161130184451 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 18:44:54,880 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 18:44:54,880 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 18:44:54,880 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 18:44:52" WHERE executed_history_id = 20161130184451 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 18:44:54,883 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 18:44:54,883 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 18:44:55,015 global_function.py[line: 19] INFO: 获取测试用例信息 [{'updater_login': 'admin', 'updater_last_name': 'Administrator', 'testsuite_id': '69', 'modification_ts': '2016-11-30 18:44:48', 'id': '71', 'active': '1', 'estimated_exec_duration': '', 'steps': [{'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'id': '72', 'expected_results': '', 'execution_type': '1'}], 'is_open': '1', 'testcase_id': '70', 'importance': '2', 'author_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'full_tc_external_id': 'tc-13', 'name': '提交网址', 'updater_id': '1', 'tc_external_id': '13', 'author_id': '1', 'author_login': 'admin', 'summary': '', 'version': '1', 'creation_ts': '2016-04-07 00:08:17', 'node_order': '1000', 'status': '1', 'author_first_name': 'Testlink', 'execution_type': '1', 'preconditions': '', 'layout': '1'}]
2016-11-30 18:44:55,141 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 18:44:55,422 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 18:44:55,422 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184451', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 18:44:55,423 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 18:44:55,423 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json""方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 18:44:55,424 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 18:44:55,424 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 18:44:55,424 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184451', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json""方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 18:44:55,425 testcase.py[line: 74] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 31 (char 30),停止执行用例[id=70, name=提交网址]
2016-11-30 18:44:55,425 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 18:44:55,425 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 18:44:55" WHERE executed_history_id = 20161130184451 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 18:44:55,427 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 18:44:55,427 main.py[line: 75] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 18:44:55,427 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 18:44:55,427 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 18:44:55,561 global_function.py[line: 19] INFO: 获取测试用例信息 [{'updater_login': 'admin', 'updater_last_name': 'Administrator', 'testsuite_id': '69', 'modification_ts': '2016-11-30 18:44:48', 'id': '71', 'active': '1', 'estimated_exec_duration': '', 'steps': [{'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'id': '72', 'expected_results': '', 'execution_type': '1'}], 'is_open': '1', 'testcase_id': '70', 'importance': '2', 'author_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'full_tc_external_id': 'tc-13', 'name': '提交网址', 'updater_id': '1', 'tc_external_id': '13', 'author_id': '1', 'author_login': 'admin', 'summary': '', 'version': '1', 'creation_ts': '2016-04-07 00:08:17', 'node_order': '1000', 'status': '1', 'author_first_name': 'Testlink', 'execution_type': '1', 'preconditions': '', 'layout': '1'}]
2016-11-30 18:44:55,711 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 18:44:56,238 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 18:44:56,238 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184451', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 18:44:56,239 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 18:44:56,240 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json""方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 18:44:56,240 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 18:44:56,240 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 18:44:56,240 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184451', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json""方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 18:44:56,241 testcase.py[line: 74] ERROR: 步骤[1]信息填写错误: Expecting ',' delimiter: line 1 column 31 (char 30),停止执行用例[id=70, name=提交网址]
2016-11-30 18:44:56,241 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 18:44:56,242 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 18:44:56" WHERE executed_history_id = 20161130184451 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 18:44:56,243 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 18:44:56,243 main.py[line: 240] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 18:44:56,243 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 18:44:56,245 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 18:44:56,245 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130184451',)
2016-11-30 18:44:56,246 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 18:44:56,247 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130184451')
2016-11-30 18:44:56,248 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 18:44:56,248 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130184451')
2016-11-30 18:44:56,249 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 18:44:56,250 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130184451')
2016-11-30 18:44:56,250 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 18:44:56,251 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130184451')
2016-11-30 18:44:56,251 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-11-30 18:44:56,252 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130184451',)
2016-11-30 18:44:56,253 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 18:44:56,253 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130184451')
2016-11-30 18:44:56,255 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 18:44:56,255 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 18:44:56,255 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130184451')
2016-11-30 18:44:56,257 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 18:44:56,257 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-11-30 18:44:56,257 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130184451',)
2016-11-30 18:44:56,259 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 18:44:56,259 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130184451')
2016-11-30 18:44:56,263 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 18:44:56,263 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130184451')
2016-11-30 18:44:56,266 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 18:44:56,266 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130184451')
2016-11-30 18:44:56,268 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 18:44:56,268 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130184451')
2016-11-30 18:44:56,270 htmlreporter.py[line: 183] INFO: 正在设置测试报告结果文件名
2016-11-30 18:44:56,270 htmlreporter.py[line: 193] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130184451.html
2016-11-30 18:44:56,270 htmlreporter.py[line: 186] INFO: 正在生成测试报告
2016-11-30 18:44:56,272 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 18:44:56,435 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130184451.html
2016-11-30 18:44:56,436 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 18:44:56,470 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 18:45:12,565 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 18:45:12,565 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 18:45:12,583 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 18:45:12,585 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 18:45:12,632 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 18:45:12,632 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 18:45:12,633 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 18:45:12,633 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 18:45:12,634 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 18:45:12,636 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 18:45:12,636 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 18:45:12,784 global_function.py[line: 19] INFO: 获取测试用例信息 [{'active': '1', 'creation_ts': '2016-07-27 18:32:10', 'id': '149', 'summary': '', 'author_last_name': 'Administrator', 'node_order': '1000', 'updater_id': '1', 'is_open': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'importance': '2', 'testcase_id': '148', 'estimated_exec_duration': '', 'full_tc_external_id': 'pj_pos-1', 'execution_type': '1', 'updater_first_name': 'Testlink', 'status': '1', 'author_first_name': 'Testlink', 'author_id': '1', 'testsuite_id': '147', 'author_login': 'admin', 'updater_last_name': 'Administrator', 'version': '1', 'modification_ts': '2016-11-30 15:41:36', 'steps': [{'step_number': '1', 'active': '1', 'id': '183', 'execution_type': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n'}, {'step_number': '2', 'active': '1', 'id': '182', 'execution_type': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n'}, {'step_number': '3', 'active': '1', 'id': '150', 'execution_type': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n'}], 'tc_external_id': '1', 'updater_login': 'admin', 'name': 'test-n-登陆掌贝pos机', 'layout': '1'}]
2016-11-30 18:45:12,929 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 18:45:13,622 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 18:45:13,622 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184512', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 18:45:13,624 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 18:45:13,624 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 18:45:13,624 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 18:45:13,624 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 18:45:13,624 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184512', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 18:45:13,625 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 18:45:13,626 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 18:45:13,626 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 18:45:13,629 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 18:45:13,629 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 18:45:13,629 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 18:45:13,629 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 18:45:13,629 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 18:45:13",step_action="{'步骤类型': '执行sql', '单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '参数': (1318,)}", expected_results="{'输出': {'branch_id': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130184512 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 18:45:13,631 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 18:45:13,631 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 18:45:13,632 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 18:45:13,632 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184512', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 18:45:13,633 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 18:45:13,633 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 18:45:13,633 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 18:45:13,633 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 18:45:13,636 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 18:45:13,637 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 18:45:13,637 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 18:45:13,637 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 18:45:13,637 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 18:45:13",step_action="{'步骤类型': '执行sql', '单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '参数': (1485916418,)}", expected_results="{'输出': {'serial_no': 2, 'device_no': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130184512 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 18:45:13,639 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 18:45:13,640 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 18:45:13,640 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 18:45:13,640 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184512', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 18:45:13,641 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 18:45:13,641 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 18:45:13,641 casestep.py[line: 102] INFO: 转换后的参数体为：{'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}
2016-11-30 18:45:13,641 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 18:45:13,641 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 18:45:13,641 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 18:45:13,642 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 18:45:13,642 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 18:45:13,642 casestep.py[line: 102] INFO: 转换后的参数体为：{'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0'}
2016-11-30 18:45:13,642 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 18:45:13,642 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 18:45:13,642 httpprotocol.py[line: 75] INFO: 参数为：b'{"password": "e10adc3949ba59abbe56e057f20f883e", "id": "1318"}'
2016-11-30 18:45:13,642 httpprotocol.py[line: 76] INFO: 请求头为：{'SerialNo': 'HZ501FZA0F9M07D', 'DeviceId': '182590014248006', 'ProductVersion': '3.2.12C', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0'}
2016-11-30 18:45:14,734 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 18:45:14,734 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"78b15329-726c-4cf3-9472-000c7d81cf8c"}
2016-11-30 18:45:14,734 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 10:45:16 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 18:45:14,734 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 18:45:14,734 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 18:45:14,734 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 18:45:14,735 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 18:45:14,735 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 18:45:14,735 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 18:45:14,735 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 18:45:14,735 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 18:45:14,735 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：78b15329-726c-4cf3-9472-000c7d81cf8c
2016-11-30 18:45:14,735 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：78b15329-726c-4cf3-9472-000c7d81cf8c
2016-11-30 18:45:14,735 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 18:45:14,735 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 18:45:14,735 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 18:45:14,736 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'Token': '78b15329-726c-4cf3-9472-000c7d81cf8c'}, {'OperatorId': 1318}]
2016-11-30 18:45:14,736 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 18:45:14,736 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 18:45:13",step_action="{'url': '/saofu-client/password/login', '请求头': {'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0'}, '函数': 'test_interface_of_json', '方法': 'post', '参数': {'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}}", expected_results="{'输出': {'Token': {'token': 'value'}, 'OperatorId': {'operator': {'id': 'value'}}}, '条件': [{'消息': '登录失败,success不为true', '模式': {'success': True}}, {'消息': 'message不为成功', '模式': {'message': '成功'}}, {'消息': 'code不为4001', '模式': {'code': '4001'}}], '匹配规则': '键值相等', '检查': 'body'}" WHERE executed_history_id = 20161130184512 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 18:45:14,738 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 18:45:14,738 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 18:45:14,738 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 18:45:13" WHERE executed_history_id = 20161130184512 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 18:45:14,740 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 18:45:14,740 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 18:45:14,869 global_function.py[line: 19] INFO: 获取测试用例信息 [{'active': '1', 'creation_ts': '2016-04-07 00:08:17', 'id': '71', 'summary': '', 'author_last_name': 'Administrator', 'node_order': '1000', 'updater_id': '1', 'is_open': '1', 'preconditions': '', 'importance': '2', 'testcase_id': '70', 'estimated_exec_duration': '', 'full_tc_external_id': 'tc-13', 'execution_type': '1', 'updater_first_name': 'Testlink', 'status': '1', 'author_first_name': 'Testlink', 'author_id': '1', 'testsuite_id': '69', 'author_login': 'admin', 'updater_last_name': 'Administrator', 'version': '1', 'modification_ts': '2016-11-30 18:45:09', 'steps': [{'step_number': '1', 'active': '1', 'id': '72', 'execution_type': '1', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n'}], 'tc_external_id': '13', 'updater_login': 'admin', 'name': '提交网址', 'layout': '1'}]
2016-11-30 18:45:15,038 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 18:45:15,317 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 18:45:15,317 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184512', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 18:45:15,318 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 18:45:15,319 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 18:45:15,319 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 18:45:15,319 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 18:45:15,319 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184512', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 18:45:15,320 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 18:45:15,320 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 18:45:15,320 casestep.py[line: 102] INFO: 转换后的参数体为：{'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj'}
2016-11-30 18:45:15,320 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 18:45:15,321 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 18:45:15,321 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submit
2016-11-30 18:45:15,321 httpprotocol.py[line: 75] INFO: 参数为：b'{"url": "http://blog.sina.com.cn/ishouke", "email": "1033553122@40qq.com", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "checkcode": "rkqj"}'
2016-11-30 18:45:15,321 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 18:45:16,470 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 18:45:16,471 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Wed, 30 Nov 2016 10:45:07 GMT'), ('Content-Type', 'text/html; charset=utf-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding'), ('Set-Cookie', 'PHPSESSID=l9hqam9vpn3og4qto8qhb6knk6; path=/'), ('Expires', 'Thu, 19 Nov 1981 08:52:00 GMT'), ('Pragma', 'no-cache'), ('Cache-control', 'private'), ('X-Powered-By', 'ThinkPHP')]
2016-11-30 18:45:16,471 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 18:45:16,471 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 18:45:16,471 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 18:45:15",step_action="{'url': '/index.php?g=Embody&m=Index&a=submit', '函数': 'test_interface_of_json', '方法': 'post', '参数': {'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj'}}", expected_results="" WHERE executed_history_id = 20161130184512 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 18:45:16,474 testcase.py[line: 158] INFO: 测试用例[id=70, name=提交网址]执行成功
2016-11-30 18:45:16,474 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 18:45:16,474 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 18:45:15" WHERE executed_history_id = 20161130184512 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 18:45:16,476 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 18:45:16,476 main.py[line: 75] INFO: 用例[70]运行结果：('Pass', '')
2016-11-30 18:45:16,476 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 18:45:16,476 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 18:45:16,617 global_function.py[line: 19] INFO: 获取测试用例信息 [{'active': '1', 'creation_ts': '2016-04-07 00:08:17', 'id': '71', 'summary': '', 'author_last_name': 'Administrator', 'node_order': '1000', 'updater_id': '1', 'is_open': '1', 'preconditions': '', 'importance': '2', 'testcase_id': '70', 'estimated_exec_duration': '', 'full_tc_external_id': 'tc-13', 'execution_type': '1', 'updater_first_name': 'Testlink', 'status': '1', 'author_first_name': 'Testlink', 'author_id': '1', 'testsuite_id': '69', 'author_login': 'admin', 'updater_last_name': 'Administrator', 'version': '1', 'modification_ts': '2016-11-30 18:45:09', 'steps': [{'step_number': '1', 'active': '1', 'id': '72', 'execution_type': '1', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n'}], 'tc_external_id': '13', 'updater_login': 'admin', 'name': '提交网址', 'layout': '1'}]
2016-11-30 18:45:16,761 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 18:45:17,107 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 18:45:17,107 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184512', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 18:45:17,109 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 18:45:17,109 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 18:45:17,110 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 18:45:17,110 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 18:45:17,110 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130184512', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 18:45:17,112 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 18:45:17,112 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 18:45:17,112 casestep.py[line: 102] INFO: 转换后的参数体为：{'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj'}
2016-11-30 18:45:17,112 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 18:45:17,114 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 18:45:17,114 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submit
2016-11-30 18:45:17,114 httpprotocol.py[line: 75] INFO: 参数为：b'{"url": "http://blog.sina.com.cn/ishouke", "email": "1033553122@40qq.com", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "checkcode": "rkqj"}'
2016-11-30 18:45:17,114 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 18:45:17,248 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 18:45:17,249 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Wed, 30 Nov 2016 10:45:08 GMT'), ('Content-Type', 'text/html; charset=utf-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding'), ('Set-Cookie', 'PHPSESSID=n7c6j68h2brr20ei7vue3eol84; path=/'), ('Expires', 'Thu, 19 Nov 1981 08:52:00 GMT'), ('Pragma', 'no-cache'), ('Cache-control', 'private'), ('X-Powered-By', 'ThinkPHP')]
2016-11-30 18:45:17,249 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 18:45:17,250 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 18:45:17,250 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 18:45:17",step_action="{'url': '/index.php?g=Embody&m=Index&a=submit', '函数': 'test_interface_of_json', '方法': 'post', '参数': {'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj'}}", expected_results="" WHERE executed_history_id = 20161130184512 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 18:45:17,253 testcase.py[line: 158] INFO: 测试用例[id=70, name=提交网址]执行成功
2016-11-30 18:45:17,253 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 18:45:17,253 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 18:45:17" WHERE executed_history_id = 20161130184512 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 18:45:17,256 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 18:45:17,256 main.py[line: 240] INFO: 用例[70]运行结果：('Pass', '')
2016-11-30 18:45:17,256 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 18:45:17,257 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 18:45:17,257 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130184512',)
2016-11-30 18:45:17,259 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 18:45:17,259 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130184512')
2016-11-30 18:45:17,260 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 18:45:17,261 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130184512')
2016-11-30 18:45:17,262 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 18:45:17,262 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130184512')
2016-11-30 18:45:17,264 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 18:45:17,264 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130184512')
2016-11-30 18:45:17,266 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-11-30 18:45:17,267 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130184512',)
2016-11-30 18:45:17,269 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 18:45:17,270 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130184512')
2016-11-30 18:45:17,272 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 18:45:17,273 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 18:45:17,273 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130184512')
2016-11-30 18:45:17,275 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 18:45:17,275 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-11-30 18:45:17,276 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130184512',)
2016-11-30 18:45:17,278 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 18:45:17,278 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130184512')
2016-11-30 18:45:17,280 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 18:45:17,280 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130184512')
2016-11-30 18:45:17,283 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 18:45:17,283 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130184512')
2016-11-30 18:45:17,285 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 18:45:17,286 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130184512')
2016-11-30 18:45:17,288 htmlreporter.py[line: 183] INFO: 正在设置测试报告结果文件名
2016-11-30 18:45:17,288 htmlreporter.py[line: 193] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130184512.html
2016-11-30 18:45:17,288 htmlreporter.py[line: 186] INFO: 正在生成测试报告
2016-11-30 18:45:17,290 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 18:45:17,423 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130184512.html
2016-11-30 18:45:17,423 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 18:45:17,456 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 19:01:37,257 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:01:37,258 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:01:37,271 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:01:37,274 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:01:37,327 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:01:37,327 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:01:37,329 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:01:37,329 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:01:37,332 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:01:37,333 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:01:37,333 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:01:37,552 global_function.py[line: 19] INFO: 获取测试用例信息 [{'status': '1', 'testcase_id': '148', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'steps': [{'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'active': '1', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n'}, {'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'active': '1', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n'}, {'step_number': '3', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'execution_type': '1', 'active': '1', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n'}], 'tc_external_id': '1', 'active': '1', 'id': '149', 'author_id': '1', 'is_open': '1', 'execution_type': '1', 'node_order': '1000', 'name': 'test-n-登陆掌贝pos机', 'updater_login': 'admin', 'updater_id': '1', 'updater_first_name': 'Testlink', 'preconditions': '<p>\n\t初始化用例</p>\n', 'author_login': 'admin', 'layout': '1', 'testsuite_id': '147', 'estimated_exec_duration': '', 'creation_ts': '2016-07-27 18:32:10', 'modification_ts': '2016-11-30 15:41:36', 'full_tc_external_id': 'pj_pos-1', 'importance': '2', 'updater_last_name': 'Administrator', 'summary': '', 'version': '1'}]
2016-11-30 19:01:37,697 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:01:38,492 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:01:38,492 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130190137', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:01:38,493 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:01:38,493 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:01:38,494 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:01:38,494 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:01:38,494 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130190137', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:01:38,496 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:01:38,496 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:01:38,496 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:01:38,499 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:01:38,499 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:01:38,500 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:01:38,500 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:01:38,500 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:01:38",step_action="{'单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '参数': (1318,), '步骤类型': '执行sql'}", expected_results="{'输出': {'branch_id': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130190137 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:01:38,503 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:01:38,503 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:01:38,504 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:01:38,504 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130190137', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:01:38,505 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:01:38,506 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:01:38,506 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:01:38,506 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:01:38,509 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:01:38,510 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:01:38,510 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:01:38,510 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:01:38,510 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:01:38",step_action="{'单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '参数': (1485916418,), '步骤类型': '执行sql'}", expected_results="{'输出': {'device_no': 1, 'serial_no': 2}, '检查': 'body'}" WHERE executed_history_id = 20161130190137 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:01:38,513 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:01:38,513 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:01:38,513 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:01:38,513 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130190137', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:01:38,515 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:01:38,515 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:01:38,515 casestep.py[line: 102] INFO: 转换后的参数体为：{'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}
2016-11-30 19:01:38,515 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:01:38,515 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:01:38,515 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:01:38,515 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 19:01:38,515 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:01:38,515 casestep.py[line: 102] INFO: 转换后的参数体为：{'ProductVersion': '3.2.12C', 'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006'}
2016-11-30 19:01:38,516 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:01:38,516 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 19:01:38,516 httpprotocol.py[line: 75] INFO: 参数为：b'{"id": "1318", "password": "e10adc3949ba59abbe56e057f20f883e"}'
2016-11-30 19:01:38,516 httpprotocol.py[line: 76] INFO: 请求头为：{'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProductVersion': '3.2.12C'}
2016-11-30 19:01:40,509 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:01:40,509 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"07bfcb13-8dd4-469f-a3a7-f7131be39d18"}
2016-11-30 19:01:40,509 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 11:01:42 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 19:01:40,509 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:01:40,510 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 19:01:40,510 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 19:01:40,510 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 19:01:40,510 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 19:01:40,510 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 19:01:40,510 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 19:01:40,510 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 19:01:40,511 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 19:01:40,511 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 19:01:40,511 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 19:01:40,511 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：07bfcb13-8dd4-469f-a3a7-f7131be39d18
2016-11-30 19:01:40,511 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：07bfcb13-8dd4-469f-a3a7-f7131be39d18
2016-11-30 19:01:40,511 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'OperatorId': 1318}, {'Token': '07bfcb13-8dd4-469f-a3a7-f7131be39d18'}]
2016-11-30 19:01:40,511 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:01:40,511 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:01:38",step_action="{'方法': 'post', '函数': 'test_interface_of_json', 'url': '/saofu-client/password/login', '参数': {'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}, '请求头': {'ProductVersion': '3.2.12C', 'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006'}}", expected_results="{'匹配规则': '键值相等', '输出': {'OperatorId': {'operator': {'id': 'value'}}, 'Token': {'token': 'value'}}, '检查': 'body', '条件': [{'模式': {'success': True}, '消息': '登录失败,success不为true'}, {'模式': {'message': '成功'}, '消息': 'message不为成功'}, {'模式': {'code': '4001'}, '消息': 'code不为4001'}]}" WHERE executed_history_id = 20161130190137 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:01:40,514 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 19:01:40,514 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:01:40,514 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:01:38" WHERE executed_history_id = 20161130190137 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:01:40,516 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 19:01:40,516 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 19:01:40,660 global_function.py[line: 19] INFO: 获取测试用例信息 [{'status': '1', 'testcase_id': '70', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'steps': [{'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'active': '1', 'id': '72', 'expected_results': ''}], 'tc_external_id': '13', 'active': '1', 'id': '71', 'author_id': '1', 'is_open': '1', 'execution_type': '1', 'node_order': '1000', 'name': '提交网址', 'updater_login': 'admin', 'updater_id': '1', 'updater_first_name': 'Testlink', 'preconditions': '', 'author_login': 'admin', 'layout': '1', 'testsuite_id': '69', 'estimated_exec_duration': '', 'creation_ts': '2016-04-07 00:08:17', 'modification_ts': '2016-11-30 18:45:09', 'full_tc_external_id': 'tc-13', 'importance': '2', 'updater_last_name': 'Administrator', 'summary': '', 'version': '1'}]
2016-11-30 19:01:40,905 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:01:41,336 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:01:41,337 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130190137', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:01:41,338 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:01:41,338 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:01:41,338 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:01:41,338 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:01:41,338 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130190137', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:01:41,339 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:01:41,339 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:01:41,339 casestep.py[line: 102] INFO: 转换后的参数体为：{'websitetype': '博客论坛', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com', 'checkcode': 'rkqj'}
2016-11-30 19:01:41,340 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:01:41,340 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:01:41,340 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submit
2016-11-30 19:01:41,340 httpprotocol.py[line: 75] INFO: 参数为：b'{"websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "url": "http://blog.sina.com.cn/ishouke", "email": "1033553122@40qq.com", "checkcode": "rkqj"}'
2016-11-30 19:01:41,340 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:01:41,521 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:01:41,522 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Wed, 30 Nov 2016 11:01:32 GMT'), ('Content-Type', 'text/html; charset=utf-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding'), ('Set-Cookie', 'PHPSESSID=rikn33g82fs01n69cglki7onk2; path=/'), ('Expires', 'Thu, 19 Nov 1981 08:52:00 GMT'), ('Pragma', 'no-cache'), ('Cache-control', 'private'), ('X-Powered-By', 'ThinkPHP')]
2016-11-30 19:01:41,522 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:01:41,523 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:01:41,523 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:01:41",step_action="{'方法': 'post', '函数': 'test_interface_of_json', 'url': '/index.php?g=Embody&m=Index&a=submit', '参数': {'websitetype': '博客论坛', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com', 'checkcode': 'rkqj'}}", expected_results="" WHERE executed_history_id = 20161130190137 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:01:41,526 testcase.py[line: 158] INFO: 测试用例[id=70, name=提交网址]执行成功
2016-11-30 19:01:41,526 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:01:41,526 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:01:41" WHERE executed_history_id = 20161130190137 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:01:41,527 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:01:41,527 main.py[line: 75] INFO: 用例[70]运行结果：('Pass', '')
2016-11-30 19:01:41,528 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 19:01:41,528 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 19:01:41,688 global_function.py[line: 19] INFO: 获取测试用例信息 [{'status': '1', 'testcase_id': '70', 'author_last_name': 'Administrator', 'author_first_name': 'Testlink', 'steps': [{'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'active': '1', 'id': '72', 'expected_results': ''}], 'tc_external_id': '13', 'active': '1', 'id': '71', 'author_id': '1', 'is_open': '1', 'execution_type': '1', 'node_order': '1000', 'name': '提交网址', 'updater_login': 'admin', 'updater_id': '1', 'updater_first_name': 'Testlink', 'preconditions': '', 'author_login': 'admin', 'layout': '1', 'testsuite_id': '69', 'estimated_exec_duration': '', 'creation_ts': '2016-04-07 00:08:17', 'modification_ts': '2016-11-30 18:45:09', 'full_tc_external_id': 'tc-13', 'importance': '2', 'updater_last_name': 'Administrator', 'summary': '', 'version': '1'}]
2016-11-30 19:01:41,833 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:01:42,177 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:01:42,177 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130190137', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:01:42,178 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:01:42,179 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:01:42,179 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:01:42,179 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:01:42,179 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130190137', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:01:42,180 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:01:42,180 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:01:42,180 casestep.py[line: 102] INFO: 转换后的参数体为：{'websitetype': '博客论坛', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com', 'checkcode': 'rkqj'}
2016-11-30 19:01:42,181 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:01:42,181 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:01:42,181 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submit
2016-11-30 19:01:42,181 httpprotocol.py[line: 75] INFO: 参数为：b'{"websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "url": "http://blog.sina.com.cn/ishouke", "email": "1033553122@40qq.com", "checkcode": "rkqj"}'
2016-11-30 19:01:42,181 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:01:42,325 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:01:42,326 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Wed, 30 Nov 2016 11:01:33 GMT'), ('Content-Type', 'text/html; charset=utf-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding'), ('Set-Cookie', 'PHPSESSID=rknbela43clv0k3ie6783f39b4; path=/'), ('Expires', 'Thu, 19 Nov 1981 08:52:00 GMT'), ('Pragma', 'no-cache'), ('Cache-control', 'private'), ('X-Powered-By', 'ThinkPHP')]
2016-11-30 19:01:42,326 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:01:42,326 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:01:42,326 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:01:42",step_action="{'方法': 'post', '函数': 'test_interface_of_json', 'url': '/index.php?g=Embody&m=Index&a=submit', '参数': {'websitetype': '博客论坛', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com', 'checkcode': 'rkqj'}}", expected_results="" WHERE executed_history_id = 20161130190137 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:01:42,329 testcase.py[line: 158] INFO: 测试用例[id=70, name=提交网址]执行成功
2016-11-30 19:01:42,329 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:01:42,329 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:01:42" WHERE executed_history_id = 20161130190137 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:01:42,330 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:01:42,330 main.py[line: 240] INFO: 用例[70]运行结果：('Pass', '')
2016-11-30 19:01:42,331 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 19:01:42,331 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 19:01:42,331 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130190137',)
2016-11-30 19:01:42,332 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 19:01:42,333 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130190137')
2016-11-30 19:01:42,333 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 19:01:42,334 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130190137')
2016-11-30 19:01:42,334 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 19:01:42,334 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130190137')
2016-11-30 19:01:42,335 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 19:01:42,335 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130190137')
2016-11-30 19:01:42,336 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-11-30 19:01:42,336 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130190137',)
2016-11-30 19:01:42,337 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 19:01:42,338 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130190137')
2016-11-30 19:01:42,339 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:01:42,340 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 19:01:42,340 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130190137')
2016-11-30 19:01:42,341 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:01:42,341 htmlreporter.py[line: 115] INFO: 正在查询已运的测试计划
2016-11-30 19:01:42,341 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130190137',)
2016-11-30 19:01:42,343 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 19:01:42,343 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130190137')
2016-11-30 19:01:42,344 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 19:01:42,344 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130190137')
2016-11-30 19:01:42,346 htmlreporter.py[line: 127] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 19:01:42,346 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130190137')
2016-11-30 19:01:42,348 htmlreporter.py[line: 158] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 19:01:42,348 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130190137')
2016-11-30 19:01:42,350 htmlreporter.py[line: 183] INFO: 正在设置测试报告结果文件名
2016-11-30 19:01:42,351 htmlreporter.py[line: 193] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130190137.html
2016-11-30 19:01:42,351 htmlreporter.py[line: 186] INFO: 正在生成测试报告
2016-11-30 19:01:42,352 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 19:01:42,502 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130190137.html
2016-11-30 19:01:42,502 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 19:01:42,534 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 19:10:45,721 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:10:45,722 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:10:45,736 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:10:45,738 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:10:45,785 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:10:45,785 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:10:45,786 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:10:45,786 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:10:45,787 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:10:45,788 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:10:45,789 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:10:45,918 global_function.py[line: 19] INFO: 获取测试用例信息 [{'name': 'test-n-登陆掌贝pos机', 'updater_first_name': 'Testlink', 'author_first_name': 'Testlink', 'layout': '1', 'modification_ts': '2016-11-30 15:41:36', 'status': '1', 'execution_type': '1', 'is_open': '1', 'author_login': 'admin', 'tc_external_id': '1', 'id': '149', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'step_number': '1', 'execution_type': '1', 'active': '1'}, {'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'step_number': '2', 'execution_type': '1', 'active': '1'}, {'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'step_number': '3', 'execution_type': '1', 'active': '1'}], 'testcase_id': '148', 'preconditions': '<p>\n\t初始化用例</p>\n', 'full_tc_external_id': 'pj_pos-1', 'author_last_name': 'Administrator', 'testsuite_id': '147', 'importance': '2', 'summary': '', 'author_id': '1', 'estimated_exec_duration': '', 'updater_login': 'admin', 'updater_id': '1', 'version': '1', 'node_order': '1000', 'creation_ts': '2016-07-27 18:32:10', 'updater_last_name': 'Administrator', 'active': '1'}]
2016-11-30 19:10:46,091 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:10:46,834 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:10:46,834 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191045', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:10:46,835 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:10:46,836 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:10:46,836 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:10:46,836 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:10:46,836 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191045', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:10:46,837 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:10:46,838 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:10:46,838 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:10:46,841 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:10:46,841 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:10:46,841 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:10:46,841 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:10:46,841 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:10:46",step_action="{'单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '步骤类型': '执行sql', '参数': (1318,)}", expected_results="{'检查': 'body', '输出': {'branch_id': 1}}" WHERE executed_history_id = 20161130191045 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:10:46,843 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:10:46,844 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:10:46,844 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:10:46,844 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191045', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:10:46,845 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:10:46,845 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:10:46,845 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:10:46,845 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:10:46,850 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:10:46,850 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:10:46,850 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:10:46,850 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:10:46,850 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:10:46",step_action="{'单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '步骤类型': '执行sql', '参数': (1485916418,)}", expected_results="{'检查': 'body', '输出': {'serial_no': 2, 'device_no': 1}}" WHERE executed_history_id = 20161130191045 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:10:46,852 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:10:46,853 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:10:46,853 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:10:46,853 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191045', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:10:46,854 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:10:46,854 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:10:46,854 casestep.py[line: 102] INFO: 转换后的参数体为：{'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}
2016-11-30 19:10:46,854 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:10:46,854 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:10:46,855 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 19:10:46,855 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:10:46,855 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:10:46,855 casestep.py[line: 102] INFO: 转换后的参数体为：{'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8'}
2016-11-30 19:10:46,855 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:10:46,855 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 19:10:46,855 httpprotocol.py[line: 75] INFO: 参数为：b'{"password": "e10adc3949ba59abbe56e057f20f883e", "id": "1318"}'
2016-11-30 19:10:46,855 httpprotocol.py[line: 76] INFO: 请求头为：{'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8'}
2016-11-30 19:10:48,129 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:10:48,129 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"6ad9cbd8-869c-459e-ace7-8e36bbe76aec"}
2016-11-30 19:10:48,129 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 11:10:50 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 19:10:48,129 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:10:48,129 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 19:10:48,129 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 19:10:48,129 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 19:10:48,129 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 19:10:48,130 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 19:10:48,130 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 19:10:48,130 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 19:10:48,130 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 19:10:48,130 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 19:10:48,130 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 19:10:48,130 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：6ad9cbd8-869c-459e-ace7-8e36bbe76aec
2016-11-30 19:10:48,130 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：6ad9cbd8-869c-459e-ace7-8e36bbe76aec
2016-11-30 19:10:48,130 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'OperatorId': 1318}, {'Token': '6ad9cbd8-869c-459e-ace7-8e36bbe76aec'}]
2016-11-30 19:10:48,131 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:10:48,131 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:10:46",step_action="{'参数': {'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}, '函数': 'test_interface_of_json', '方法': 'post', '请求头': {'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8'}, 'url': '/saofu-client/password/login'}", expected_results="{'匹配规则': '键值相等', '条件': [{'模式': {'success': True}, '消息': '登录失败,success不为true'}, {'模式': {'message': '成功'}, '消息': 'message不为成功'}, {'模式': {'code': '4001'}, '消息': 'code不为4001'}], '检查': 'body', '输出': {'OperatorId': {'operator': {'id': 'value'}}, 'Token': {'token': 'value'}}}" WHERE executed_history_id = 20161130191045 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:10:48,133 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 19:10:48,133 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:10:48,134 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:10:46" WHERE executed_history_id = 20161130191045 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:10:48,136 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 19:10:48,136 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 19:10:48,261 global_function.py[line: 19] INFO: 获取测试用例信息 [{'name': '提交网址', 'updater_first_name': 'Testlink', 'author_first_name': 'Testlink', 'layout': '1', 'modification_ts': '2016-11-30 19:10:42', 'status': '1', 'execution_type': '1', 'is_open': '1', 'author_login': 'admin', 'tc_external_id': '13', 'id': '71', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_jso</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'id': '72', 'expected_results': '', 'step_number': '1', 'execution_type': '1', 'active': '1'}], 'testcase_id': '70', 'preconditions': '', 'full_tc_external_id': 'tc-13', 'author_last_name': 'Administrator', 'testsuite_id': '69', 'importance': '2', 'summary': '', 'author_id': '1', 'estimated_exec_duration': '', 'updater_login': 'admin', 'updater_id': '1', 'version': '1', 'node_order': '1000', 'creation_ts': '2016-04-07 00:08:17', 'updater_last_name': 'Administrator', 'active': '1'}]
2016-11-30 19:10:48,400 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:10:48,750 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:10:48,750 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191045', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:10:48,752 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:10:48,752 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_jso","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:10:48,752 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:10:48,753 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:10:48,753 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191045', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_jso","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:10:48,757 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:10:48,757 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_jso
2016-11-30 19:10:48,757 casestep.py[line: 102] INFO: 转换后的参数体为：{'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'url': 'http://blog.sina.com.cn/ishouke'}
2016-11-30 19:10:48,757 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:10:48,758 global_function.py[line: 89] ERROR: 运行用例出错 no such test method in <class 'interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase'>: test_interface_of_jso
2016-11-30 19:10:48,758 main.py[line: 75] INFO: 用例[70]运行结果：('Fail', '执行用例出错 70')
2016-11-30 19:10:48,758 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 19:10:48,759 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 19:10:48,926 global_function.py[line: 19] INFO: 获取测试用例信息 [{'name': '提交网址', 'updater_first_name': 'Testlink', 'author_first_name': 'Testlink', 'layout': '1', 'modification_ts': '2016-11-30 19:10:42', 'status': '1', 'execution_type': '1', 'is_open': '1', 'author_login': 'admin', 'tc_external_id': '13', 'id': '71', 'steps': [{'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_jso</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'id': '72', 'expected_results': '', 'step_number': '1', 'execution_type': '1', 'active': '1'}], 'testcase_id': '70', 'preconditions': '', 'full_tc_external_id': 'tc-13', 'author_last_name': 'Administrator', 'testsuite_id': '69', 'importance': '2', 'summary': '', 'author_id': '1', 'estimated_exec_duration': '', 'updater_login': 'admin', 'updater_id': '1', 'version': '1', 'node_order': '1000', 'creation_ts': '2016-04-07 00:08:17', 'updater_last_name': 'Administrator', 'active': '1'}]
2016-11-30 19:10:49,085 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:10:49,406 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:10:49,407 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191045', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:10:49,421 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:10:49,422 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_jso","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:10:49,422 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:10:49,422 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:10:49,422 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191045', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_jso","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:10:49,425 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:10:49,426 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_jso
2016-11-30 19:10:49,426 casestep.py[line: 102] INFO: 转换后的参数体为：{'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'url': 'http://blog.sina.com.cn/ishouke'}
2016-11-30 19:10:49,426 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:10:49,426 global_function.py[line: 89] ERROR: 运行用例出错 no such test method in <class 'interface.InterfaceUnittestTestCase.InterfaceUnittestTestCase'>: test_interface_of_jso
2016-11-30 19:10:49,427 main.py[line: 240] INFO: 用例[70]运行结果：('Fail', '执行用例出错 70')
2016-11-30 19:10:49,427 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 19:10:49,429 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 19:10:49,429 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130191045',)
2016-11-30 19:10:49,431 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 19:10:49,432 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130191045')
2016-11-30 19:10:49,433 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 19:10:49,434 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130191045')
2016-11-30 19:10:49,435 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 19:10:49,435 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130191045')
2016-11-30 19:10:49,436 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 19:10:49,436 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130191045')
2016-11-30 19:10:49,438 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-11-30 19:10:49,438 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130191045',)
2016-11-30 19:10:49,440 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 19:10:49,440 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130191045')
2016-11-30 19:10:49,442 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:10:49,443 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 19:10:49,443 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130191045')
2016-11-30 19:10:49,445 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:10:49,445 htmlreporter.py[line: 119] INFO: 正在查询已运的测试计划
2016-11-30 19:10:49,445 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130191045',)
2016-11-30 19:10:49,447 htmlreporter.py[line: 131] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 19:10:49,447 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130191045')
2016-11-30 19:10:49,450 htmlreporter.py[line: 162] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 19:10:49,450 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130191045')
2016-11-30 19:10:49,453 htmlreporter.py[line: 131] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 19:10:49,454 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130191045')
2016-11-30 19:10:49,459 htmlreporter.py[line: 162] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 19:10:49,459 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130191045')
2016-11-30 19:10:49,476 htmlreporter.py[line: 187] INFO: 正在设置测试报告结果文件名
2016-11-30 19:10:49,477 htmlreporter.py[line: 197] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130191045.html
2016-11-30 19:10:49,477 htmlreporter.py[line: 190] INFO: 正在生成测试报告
2016-11-30 19:10:49,479 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 19:10:49,631 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130191045.html
2016-11-30 19:10:49,632 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 19:10:49,675 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 19:11:19,949 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:11:19,950 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:11:19,968 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:11:19,973 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:11:20,050 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:11:20,050 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:11:20,053 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:11:20,053 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:11:20,055 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:11:20,058 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:11:20,058 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:11:20,272 global_function.py[line: 19] INFO: 获取测试用例信息 [{'author_id': '1', 'execution_type': '1', 'creation_ts': '2016-07-27 18:32:10', 'updater_first_name': 'Testlink', 'status': '1', 'name': 'test-n-登陆掌贝pos机', 'is_open': '1', 'testcase_id': '148', 'estimated_exec_duration': '', 'active': '1', 'updater_id': '1', 'author_last_name': 'Administrator', 'id': '149', 'tc_external_id': '1', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'layout': '1', 'importance': '2', 'author_login': 'admin', 'testsuite_id': '147', 'node_order': '1000', 'author_first_name': 'Testlink', 'modification_ts': '2016-11-30 15:41:36', 'full_tc_external_id': 'pj_pos-1', 'steps': [{'step_number': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183', 'execution_type': '1'}, {'step_number': '2', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182', 'execution_type': '1'}, {'step_number': '3', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150', 'execution_type': '1'}], 'version': '1', 'summary': '', 'preconditions': '<p>\n\t初始化用例</p>\n'}]
2016-11-30 19:11:20,435 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:11:21,302 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:11:21,303 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191119', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:11:21,304 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:11:21,304 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:11:21,304 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:11:21,304 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:11:21,305 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191119', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:11:21,306 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:11:21,306 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:11:21,306 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:11:21,310 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:11:21,310 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:11:21,310 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:11:21,310 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:11:21,310 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:11:21",step_action="{'单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '步骤类型': '执行sql', '参数': (1318,)}", expected_results="{'输出': {'branch_id': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130191119 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:11:21,312 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:11:21,313 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:11:21,313 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:11:21,313 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191119', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:11:21,314 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:11:21,314 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:11:21,314 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:11:21,314 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:11:21,318 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:11:21,318 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:11:21,318 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:11:21,318 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:11:21,318 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:11:21",step_action="{'单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '步骤类型': '执行sql', '参数': (1485916418,)}", expected_results="{'输出': {'serial_no': 2, 'device_no': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130191119 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:11:21,320 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:11:21,321 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:11:21,321 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:11:21,321 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191119', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:11:21,322 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:11:21,322 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:11:21,322 casestep.py[line: 102] INFO: 转换后的参数体为：{'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}
2016-11-30 19:11:21,322 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:11:21,322 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 19:11:21,322 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:11:21,323 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:11:21,323 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:11:21,323 casestep.py[line: 102] INFO: 转换后的参数体为：{'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8'}
2016-11-30 19:11:21,323 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:11:21,323 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 19:11:21,323 httpprotocol.py[line: 75] INFO: 参数为：b'{"password": "e10adc3949ba59abbe56e057f20f883e", "id": "1318"}'
2016-11-30 19:11:21,323 httpprotocol.py[line: 76] INFO: 请求头为：{'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'DeviceId': '182590014248006', 'ProductVersion': '3.2.12C', 'Content-Type': 'application/json;charset=utf-8'}
2016-11-30 19:11:22,539 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:11:22,539 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"c8d904e5-df66-43a1-9ba1-d72dd9308c24"}
2016-11-30 19:11:22,540 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 11:11:24 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 19:11:22,540 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:11:22,540 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 19:11:22,540 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 19:11:22,540 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 19:11:22,540 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 19:11:22,540 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 19:11:22,540 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 19:11:22,541 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 19:11:22,541 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：c8d904e5-df66-43a1-9ba1-d72dd9308c24
2016-11-30 19:11:22,541 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：c8d904e5-df66-43a1-9ba1-d72dd9308c24
2016-11-30 19:11:22,541 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 19:11:22,541 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 19:11:22,541 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 19:11:22,541 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'Token': 'c8d904e5-df66-43a1-9ba1-d72dd9308c24'}, {'OperatorId': 1318}]
2016-11-30 19:11:22,541 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:11:22,542 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:11:21",step_action="{'请求头': {'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8'}, 'url': '/saofu-client/password/login', '参数': {'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}, '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="{'匹配规则': '键值相等', '条件': [{'模式': {'success': True}, '消息': '登录失败,success不为true'}, {'模式': {'message': '成功'}, '消息': 'message不为成功'}, {'模式': {'code': '4001'}, '消息': 'code不为4001'}], '检查': 'body', '输出': {'Token': {'token': 'value'}, 'OperatorId': {'operator': {'id': 'value'}}}}" WHERE executed_history_id = 20161130191119 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:11:22,545 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 19:11:22,545 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:11:22,545 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:11:21" WHERE executed_history_id = 20161130191119 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:11:22,547 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 19:11:22,547 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 19:11:22,744 global_function.py[line: 19] INFO: 获取测试用例信息 [{'author_id': '1', 'execution_type': '1', 'creation_ts': '2016-04-07 00:08:17', 'updater_first_name': 'Testlink', 'status': '1', 'name': '提交网址', 'is_open': '1', 'testcase_id': '70', 'estimated_exec_duration': '', 'active': '1', 'updater_id': '1', 'author_last_name': 'Administrator', 'id': '71', 'tc_external_id': '13', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'layout': '1', 'importance': '2', 'author_login': 'admin', 'testsuite_id': '69', 'node_order': '1000', 'author_first_name': 'Testlink', 'modification_ts': '2016-11-30 19:11:16', 'full_tc_external_id': 'tc-13', 'steps': [{'step_number': '1', 'active': '1', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'id': '72', 'execution_type': '1'}], 'version': '1', 'summary': '', 'preconditions': ''}]
2016-11-30 19:11:22,961 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:11:23,286 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:11:23,287 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191119', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:11:23,288 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:11:23,288 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:11:23,288 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:11:23,289 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:11:23,289 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191119', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:11:23,290 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:11:23,290 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:11:23,291 casestep.py[line: 102] INFO: 转换后的参数体为：{'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛'}
2016-11-30 19:11:23,291 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:11:23,291 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:11:23,291 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submit
2016-11-30 19:11:23,291 httpprotocol.py[line: 75] INFO: 参数为：b'{"url": "http://blog.sina.com.cn/ishouke", "checkcode": "rkqj", "email": "1033553122@40qq.com", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b"}'
2016-11-30 19:11:23,291 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:11:23,478 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:11:23,479 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Wed, 30 Nov 2016 11:11:14 GMT'), ('Content-Type', 'text/html; charset=utf-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding'), ('Set-Cookie', 'PHPSESSID=vcg8ulhlv3cku0agkuu7me8dg4; path=/'), ('Expires', 'Thu, 19 Nov 1981 08:52:00 GMT'), ('Pragma', 'no-cache'), ('Cache-control', 'private'), ('X-Powered-By', 'ThinkPHP')]
2016-11-30 19:11:23,480 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:11:23,480 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:11:23,480 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:11:23",step_action="{'url': '/index.php?g=Embody&m=Index&a=submit', '参数': {'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛'}, '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="" WHERE executed_history_id = 20161130191119 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:11:23,483 testcase.py[line: 158] INFO: 测试用例[id=70, name=提交网址]执行成功
2016-11-30 19:11:23,483 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:11:23,483 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:11:23" WHERE executed_history_id = 20161130191119 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:11:23,485 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:11:23,485 main.py[line: 75] INFO: 用例[70]运行结果：('Pass', '')
2016-11-30 19:11:23,485 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 19:11:23,485 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 19:11:23,636 global_function.py[line: 19] INFO: 获取测试用例信息 [{'author_id': '1', 'execution_type': '1', 'creation_ts': '2016-04-07 00:08:17', 'updater_first_name': 'Testlink', 'status': '1', 'name': '提交网址', 'is_open': '1', 'testcase_id': '70', 'estimated_exec_duration': '', 'active': '1', 'updater_id': '1', 'author_last_name': 'Administrator', 'id': '71', 'tc_external_id': '13', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'layout': '1', 'importance': '2', 'author_login': 'admin', 'testsuite_id': '69', 'node_order': '1000', 'author_first_name': 'Testlink', 'modification_ts': '2016-11-30 19:11:16', 'full_tc_external_id': 'tc-13', 'steps': [{'step_number': '1', 'active': '1', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submit&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'id': '72', 'execution_type': '1'}], 'version': '1', 'summary': '', 'preconditions': ''}]
2016-11-30 19:11:23,873 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:11:24,159 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:11:24,160 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191119', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:11:24,161 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:11:24,161 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:11:24,162 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:11:24,162 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:11:24,162 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191119', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submit","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:11:24,163 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:11:24,163 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:11:24,163 casestep.py[line: 102] INFO: 转换后的参数体为：{'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛'}
2016-11-30 19:11:24,164 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:11:24,165 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:11:24,165 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submit
2016-11-30 19:11:24,165 httpprotocol.py[line: 75] INFO: 参数为：b'{"url": "http://blog.sina.com.cn/ishouke", "checkcode": "rkqj", "email": "1033553122@40qq.com", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b"}'
2016-11-30 19:11:24,165 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:11:24,304 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:11:24,305 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Date', 'Wed, 30 Nov 2016 11:11:15 GMT'), ('Content-Type', 'text/html; charset=utf-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('Vary', 'Accept-Encoding'), ('Set-Cookie', 'PHPSESSID=cf8mfobr12odftfpda29v47nj6; path=/'), ('Expires', 'Thu, 19 Nov 1981 08:52:00 GMT'), ('Pragma', 'no-cache'), ('Cache-control', 'private'), ('X-Powered-By', 'ThinkPHP')]
2016-11-30 19:11:24,305 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:11:24,305 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:11:24,306 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:11:24",step_action="{'url': '/index.php?g=Embody&m=Index&a=submit', '参数': {'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛'}, '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="" WHERE executed_history_id = 20161130191119 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:11:24,310 testcase.py[line: 158] INFO: 测试用例[id=70, name=提交网址]执行成功
2016-11-30 19:11:24,310 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:11:24,310 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:11:24" WHERE executed_history_id = 20161130191119 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:11:24,312 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:11:24,313 main.py[line: 240] INFO: 用例[70]运行结果：('Pass', '')
2016-11-30 19:11:24,313 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 19:11:24,313 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 19:11:24,313 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130191119',)
2016-11-30 19:11:24,314 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 19:11:24,315 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130191119')
2016-11-30 19:11:24,315 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 19:11:24,316 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130191119')
2016-11-30 19:11:24,316 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 19:11:24,317 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130191119')
2016-11-30 19:11:24,317 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 19:11:24,318 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130191119')
2016-11-30 19:11:24,319 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-11-30 19:11:24,319 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130191119',)
2016-11-30 19:11:24,321 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 19:11:24,321 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130191119')
2016-11-30 19:11:24,322 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:11:24,323 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 19:11:24,323 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130191119')
2016-11-30 19:11:24,324 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:11:24,325 htmlreporter.py[line: 119] INFO: 正在查询已运的测试计划
2016-11-30 19:11:24,325 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130191119',)
2016-11-30 19:11:24,326 htmlreporter.py[line: 131] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 19:11:24,326 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130191119')
2016-11-30 19:11:24,328 htmlreporter.py[line: 162] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 19:11:24,328 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130191119')
2016-11-30 19:11:24,330 htmlreporter.py[line: 131] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 19:11:24,330 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130191119')
2016-11-30 19:11:24,331 htmlreporter.py[line: 162] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 19:11:24,332 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130191119')
2016-11-30 19:11:24,333 htmlreporter.py[line: 187] INFO: 正在设置测试报告结果文件名
2016-11-30 19:11:24,333 htmlreporter.py[line: 197] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130191119.html
2016-11-30 19:11:24,333 htmlreporter.py[line: 190] INFO: 正在生成测试报告
2016-11-30 19:11:24,334 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 19:11:24,487 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130191119.html
2016-11-30 19:11:24,487 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 19:11:24,518 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 19:11:39,485 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:11:39,485 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:11:39,498 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:11:39,500 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:11:39,545 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:11:39,545 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:11:39,546 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:11:39,546 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:11:39,547 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:11:39,548 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:11:39,549 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:11:39,675 global_function.py[line: 19] INFO: 获取测试用例信息 [{'preconditions': '<p>\n\t初始化用例</p>\n', 'updater_id': '1', 'creation_ts': '2016-07-27 18:32:10', 'is_open': '1', 'author_login': 'admin', 'status': '1', 'tc_external_id': '1', 'author_id': '1', 'full_tc_external_id': 'pj_pos-1', 'summary': '', 'author_last_name': 'Administrator', 'active': '1', 'updater_login': 'admin', 'node_order': '1000', 'name': 'test-n-登陆掌贝pos机', 'execution_type': '1', 'id': '149', 'steps': [{'execution_type': '1', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '1'}, {'execution_type': '1', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '2'}, {'execution_type': '1', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'active': '1', 'step_number': '3'}], 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'testcase_id': '148', 'modification_ts': '2016-11-30 15:41:36', 'importance': '2', 'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'testsuite_id': '147', 'layout': '1', 'version': '1'}]
2016-11-30 19:11:39,794 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:11:40,527 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:11:40,527 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191139', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:11:40,528 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:11:40,528 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:11:40,528 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:11:40,528 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:11:40,529 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191139', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:11:40,530 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:11:40,530 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:11:40,530 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:11:40,534 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:11:40,534 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:11:40,535 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:11:40,535 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:11:40,535 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:11:40",step_action="{'参数': (1318,), '单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '步骤类型': '执行sql'}", expected_results="{'输出': {'branch_id': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130191139 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:11:40,539 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:11:40,539 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:11:40,539 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:11:40,539 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191139', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:11:40,541 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:11:40,541 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:11:40,541 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:11:40,541 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:11:40,545 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:11:40,545 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:11:40,545 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:11:40,545 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:11:40,545 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:11:40",step_action="{'参数': (1485916418,), '单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '步骤类型': '执行sql'}", expected_results="{'输出': {'serial_no': 2, 'device_no': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130191139 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:11:40,548 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:11:40,548 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:11:40,548 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:11:40,548 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191139', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:11:40,549 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:11:40,550 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:11:40,550 casestep.py[line: 102] INFO: 转换后的参数体为：{'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}
2016-11-30 19:11:40,550 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:11:40,550 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:11:40,550 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:11:40,550 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:11:40,550 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 19:11:40,550 casestep.py[line: 102] INFO: 转换后的参数体为：{'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006', 'SerialNo': 'HZ501FZA0F9M07D'}
2016-11-30 19:11:40,551 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:11:40,551 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 19:11:40,551 httpprotocol.py[line: 75] INFO: 参数为：b'{"id": "1318", "password": "e10adc3949ba59abbe56e057f20f883e"}'
2016-11-30 19:11:40,551 httpprotocol.py[line: 76] INFO: 请求头为：{'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'DeviceId': '182590014248006'}
2016-11-30 19:11:41,820 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:11:41,820 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"60b1fb8b-9f4e-42de-97e5-d8c8ec0867d7"}
2016-11-30 19:11:41,820 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 11:11:43 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 19:11:41,820 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:11:41,821 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 19:11:41,821 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 19:11:41,821 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 19:11:41,821 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 19:11:41,821 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 19:11:41,821 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 19:11:41,821 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 19:11:41,821 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：60b1fb8b-9f4e-42de-97e5-d8c8ec0867d7
2016-11-30 19:11:41,821 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：60b1fb8b-9f4e-42de-97e5-d8c8ec0867d7
2016-11-30 19:11:41,821 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 19:11:41,822 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 19:11:41,822 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 19:11:41,822 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'Token': '60b1fb8b-9f4e-42de-97e5-d8c8ec0867d7'}, {'OperatorId': 1318}]
2016-11-30 19:11:41,822 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:11:41,822 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:11:40",step_action="{'参数': {'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}, '方法': 'post', '请求头': {'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006', 'SerialNo': 'HZ501FZA0F9M07D'}, '函数': 'test_interface_of_json', 'url': '/saofu-client/password/login'}", expected_results="{'输出': {'Token': {'token': 'value'}, 'OperatorId': {'operator': {'id': 'value'}}}, '匹配规则': '键值相等', '条件': [{'消息': '登录失败,success不为true', '模式': {'success': True}}, {'消息': 'message不为成功', '模式': {'message': '成功'}}, {'消息': 'code不为4001', '模式': {'code': '4001'}}], '检查': 'body'}" WHERE executed_history_id = 20161130191139 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:11:41,825 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 19:11:41,825 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:11:41,825 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:11:40" WHERE executed_history_id = 20161130191139 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:11:41,826 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 19:11:41,827 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 19:11:41,952 global_function.py[line: 19] INFO: 获取测试用例信息 [{'preconditions': '', 'updater_id': '1', 'creation_ts': '2016-04-07 00:08:17', 'is_open': '1', 'author_login': 'admin', 'status': '1', 'tc_external_id': '13', 'author_id': '1', 'full_tc_external_id': 'tc-13', 'summary': '', 'author_last_name': 'Administrator', 'active': '1', 'updater_login': 'admin', 'node_order': '1000', 'name': '提交网址', 'execution_type': '1', 'id': '71', 'steps': [{'execution_type': '1', 'id': '72', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '1'}], 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'testcase_id': '70', 'modification_ts': '2016-11-30 19:11:36', 'importance': '2', 'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'testsuite_id': '69', 'layout': '1', 'version': '1'}]
2016-11-30 19:11:42,160 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:11:42,541 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:11:42,542 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191139', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:11:42,548 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:11:42,548 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:11:42,548 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:11:42,548 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:11:42,548 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191139', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:11:42,551 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:11:42,551 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:11:42,551 casestep.py[line: 102] INFO: 转换后的参数体为：{'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com'}
2016-11-30 19:11:42,551 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:11:42,552 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:11:42,552 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:11:42,552 httpprotocol.py[line: 75] INFO: 参数为：b'{"websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "checkcode": "rkqj", "url": "http://blog.sina.com.cn/ishouke", "email": "1033553122@40qq.com"}'
2016-11-30 19:11:42,552 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:11:42,651 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:11:42,651 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:11:42,652 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:11:42,652 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:11:42",step_action="{'参数': {'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com'}, '方法': 'post', '函数': 'test_interface_of_json', 'url': '/index.php?g=Embody&m=Index&a=submt'}", expected_results="" WHERE executed_history_id = 20161130191139 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:11:42,655 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:11:42,655 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:11:42" WHERE executed_history_id = 20161130191139 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:11:42,658 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:11:42,659 main.py[line: 75] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:11:42,659 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 19:11:42,659 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 19:11:42,797 global_function.py[line: 19] INFO: 获取测试用例信息 [{'preconditions': '', 'updater_id': '1', 'creation_ts': '2016-04-07 00:08:17', 'is_open': '1', 'author_login': 'admin', 'status': '1', 'tc_external_id': '13', 'author_id': '1', 'full_tc_external_id': 'tc-13', 'summary': '', 'author_last_name': 'Administrator', 'active': '1', 'updater_login': 'admin', 'node_order': '1000', 'name': '提交网址', 'execution_type': '1', 'id': '71', 'steps': [{'execution_type': '1', 'id': '72', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'active': '1', 'step_number': '1'}], 'updater_last_name': 'Administrator', 'updater_first_name': 'Testlink', 'testcase_id': '70', 'modification_ts': '2016-11-30 19:11:36', 'importance': '2', 'estimated_exec_duration': '', 'author_first_name': 'Testlink', 'testsuite_id': '69', 'layout': '1', 'version': '1'}]
2016-11-30 19:11:42,964 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:11:43,217 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:11:43,217 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191139', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:11:43,245 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:11:43,245 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:11:43,246 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:11:43,246 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:11:43,246 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191139', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:11:43,257 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:11:43,258 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:11:43,258 casestep.py[line: 102] INFO: 转换后的参数体为：{'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com'}
2016-11-30 19:11:43,258 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:11:43,259 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:11:43,259 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:11:43,259 httpprotocol.py[line: 75] INFO: 参数为：b'{"websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "checkcode": "rkqj", "url": "http://blog.sina.com.cn/ishouke", "email": "1033553122@40qq.com"}'
2016-11-30 19:11:43,259 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:11:43,358 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:11:43,359 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:11:43,359 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:11:43,359 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:11:43",step_action="{'参数': {'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com'}, '方法': 'post', '函数': 'test_interface_of_json', 'url': '/index.php?g=Embody&m=Index&a=submt'}", expected_results="" WHERE executed_history_id = 20161130191139 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:11:43,362 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:11:43,362 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:11:43" WHERE executed_history_id = 20161130191139 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:11:43,365 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:11:43,365 main.py[line: 240] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:11:43,365 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 19:11:43,366 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 19:11:43,366 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130191139',)
2016-11-30 19:11:43,368 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 19:11:43,368 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130191139')
2016-11-30 19:11:43,370 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 19:11:43,370 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130191139')
2016-11-30 19:11:43,371 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 19:11:43,371 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130191139')
2016-11-30 19:11:43,373 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 19:11:43,373 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130191139')
2016-11-30 19:11:43,374 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-11-30 19:11:43,374 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130191139',)
2016-11-30 19:11:43,376 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 19:11:43,376 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130191139')
2016-11-30 19:11:43,378 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:11:43,379 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 19:11:43,379 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130191139')
2016-11-30 19:11:43,381 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:11:43,382 htmlreporter.py[line: 119] INFO: 正在查询已运的测试计划
2016-11-30 19:11:43,382 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130191139',)
2016-11-30 19:11:43,384 htmlreporter.py[line: 131] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 19:11:43,384 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130191139')
2016-11-30 19:11:43,387 htmlreporter.py[line: 162] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 19:11:43,387 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130191139')
2016-11-30 19:11:43,390 htmlreporter.py[line: 131] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 19:11:43,391 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130191139')
2016-11-30 19:11:43,393 htmlreporter.py[line: 162] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 19:11:43,393 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130191139')
2016-11-30 19:11:43,394 htmlreporter.py[line: 187] INFO: 正在设置测试报告结果文件名
2016-11-30 19:11:43,395 htmlreporter.py[line: 197] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130191139.html
2016-11-30 19:11:43,395 htmlreporter.py[line: 190] INFO: 正在生成测试报告
2016-11-30 19:11:43,414 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 19:11:43,672 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130191139.html
2016-11-30 19:11:43,673 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 19:11:43,730 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 19:13:17,688 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:13:17,689 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:13:17,708 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:13:17,712 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:13:17,775 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:13:17,775 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:13:17,776 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:13:17,777 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:13:17,778 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:13:17,780 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:13:17,780 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:13:17,941 global_function.py[line: 19] INFO: 获取测试用例信息 [{'is_open': '1', 'summary': '', 'steps': [{'execution_type': '1', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1'}, {'execution_type': '1', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '2', 'active': '1'}, {'execution_type': '1', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'step_number': '3', 'active': '1'}], 'id': '149', 'testsuite_id': '147', 'updater_id': '1', 'author_last_name': 'Administrator', 'active': '1', 'creation_ts': '2016-07-27 18:32:10', 'name': 'test-n-登陆掌贝pos机', 'updater_login': 'admin', 'execution_type': '1', 'author_id': '1', 'importance': '2', 'modification_ts': '2016-11-30 15:41:36', 'estimated_exec_duration': '', 'preconditions': '<p>\n\t初始化用例</p>\n', 'updater_last_name': 'Administrator', 'node_order': '1000', 'version': '1', 'author_login': 'admin', 'updater_first_name': 'Testlink', 'author_first_name': 'Testlink', 'layout': '1', 'full_tc_external_id': 'pj_pos-1', 'tc_external_id': '1', 'testcase_id': '148', 'status': '1'}]
2016-11-30 19:13:18,061 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:13:18,678 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:13:18,678 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191317', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:13:18,680 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:13:18,680 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:13:18,681 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:13:18,681 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:13:18,681 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191317', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:13:18,683 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:13:18,683 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:13:18,683 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:13:18,686 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:13:18,686 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:13:18,686 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:13:18,687 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:13:18,687 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:13:18",step_action="{'参数': (1318,), '步骤类型': '执行sql', '单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s'}", expected_results="{'检查': 'body', '输出': {'branch_id': 1}}" WHERE executed_history_id = 20161130191317 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:13:18,690 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:13:18,690 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:13:18,690 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:13:18,691 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191317', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:13:18,692 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:13:18,692 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:13:18,692 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:13:18,692 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:13:18,696 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:13:18,696 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:13:18,697 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:13:18,697 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:13:18,697 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:13:18",step_action="{'参数': (1485916418,), '步骤类型': '执行sql', '单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s'}", expected_results="{'检查': 'body', '输出': {'device_no': 1, 'serial_no': 2}}" WHERE executed_history_id = 20161130191317 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:13:18,700 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:13:18,700 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:13:18,700 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:13:18,700 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191317', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:13:18,702 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:13:18,702 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:13:18,702 casestep.py[line: 102] INFO: 转换后的参数体为：{'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}
2016-11-30 19:13:18,702 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:13:18,703 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:13:18,703 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:13:18,703 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:13:18,703 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 19:13:18,703 casestep.py[line: 102] INFO: 转换后的参数体为：{'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D'}
2016-11-30 19:13:18,703 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:13:18,704 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 19:13:18,704 httpprotocol.py[line: 75] INFO: 参数为：b'{"id": "1318", "password": "e10adc3949ba59abbe56e057f20f883e"}'
2016-11-30 19:13:18,704 httpprotocol.py[line: 76] INFO: 请求头为：{'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D'}
2016-11-30 19:13:21,154 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:13:21,154 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"8172e6bc-0367-432a-b39d-b8521eda6898"}
2016-11-30 19:13:21,154 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 11:13:23 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 19:13:21,155 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:13:21,155 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 19:13:21,155 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 19:13:21,156 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 19:13:21,156 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 19:13:21,158 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 19:13:21,158 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 19:13:21,159 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 19:13:21,159 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 19:13:21,159 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 19:13:21,159 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 19:13:21,160 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：8172e6bc-0367-432a-b39d-b8521eda6898
2016-11-30 19:13:21,160 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：8172e6bc-0367-432a-b39d-b8521eda6898
2016-11-30 19:13:21,160 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'OperatorId': 1318}, {'Token': '8172e6bc-0367-432a-b39d-b8521eda6898'}]
2016-11-30 19:13:21,160 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:13:21,160 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:13:18",step_action="{'函数': 'test_interface_of_json', '方法': 'post', '参数': {'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}, 'url': '/saofu-client/password/login', '请求头': {'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D'}}", expected_results="{'条件': [{'消息': '登录失败,success不为true', '模式': {'success': True}}, {'消息': 'message不为成功', '模式': {'message': '成功'}}, {'消息': 'code不为4001', '模式': {'code': '4001'}}], '检查': 'body', '输出': {'OperatorId': {'operator': {'id': 'value'}}, 'Token': {'token': 'value'}}, '匹配规则': '键值相等'}" WHERE executed_history_id = 20161130191317 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:13:21,165 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 19:13:21,165 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:13:21,165 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:13:18" WHERE executed_history_id = 20161130191317 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:13:21,168 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 19:13:21,169 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 19:13:21,397 global_function.py[line: 19] INFO: 获取测试用例信息 [{'is_open': '1', 'summary': '', 'steps': [{'execution_type': '1', 'id': '72', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1'}], 'id': '71', 'testsuite_id': '69', 'updater_id': '1', 'author_last_name': 'Administrator', 'active': '1', 'creation_ts': '2016-04-07 00:08:17', 'name': '提交网址', 'updater_login': 'admin', 'execution_type': '1', 'author_id': '1', 'importance': '2', 'modification_ts': '2016-11-30 19:11:36', 'estimated_exec_duration': '', 'preconditions': '', 'updater_last_name': 'Administrator', 'node_order': '1000', 'version': '1', 'author_login': 'admin', 'updater_first_name': 'Testlink', 'author_first_name': 'Testlink', 'layout': '1', 'full_tc_external_id': 'tc-13', 'tc_external_id': '13', 'testcase_id': '70', 'status': '1'}]
2016-11-30 19:13:21,523 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:13:21,878 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:13:21,879 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191317', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:13:21,880 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:13:21,881 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:13:21,881 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:13:21,881 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:13:21,881 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191317', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:13:21,885 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:13:21,885 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:13:21,886 casestep.py[line: 102] INFO: 转换后的参数体为：{'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke'}
2016-11-30 19:13:21,886 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:13:21,886 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:13:21,886 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:13:21,887 httpprotocol.py[line: 75] INFO: 参数为：b'{"email": "1033553122@40qq.com", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "checkcode": "rkqj", "url": "http://blog.sina.com.cn/ishouke"}'
2016-11-30 19:13:21,887 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:13:24,033 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:13:24,036 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:13:24,036 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:13:24,037 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:13:21",step_action="{'函数': 'test_interface_of_json', '方法': 'post', 'url': '/index.php?g=Embody&m=Index&a=submt', '参数': {'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke'}}", expected_results="" WHERE executed_history_id = 20161130191317 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:13:24,042 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:13:24,043 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:13:21" WHERE executed_history_id = 20161130191317 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:13:24,047 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:13:24,047 main.py[line: 75] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:13:24,047 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 19:13:24,047 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 19:13:24,191 global_function.py[line: 19] INFO: 获取测试用例信息 [{'is_open': '1', 'summary': '', 'steps': [{'execution_type': '1', 'id': '72', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1'}], 'id': '71', 'testsuite_id': '69', 'updater_id': '1', 'author_last_name': 'Administrator', 'active': '1', 'creation_ts': '2016-04-07 00:08:17', 'name': '提交网址', 'updater_login': 'admin', 'execution_type': '1', 'author_id': '1', 'importance': '2', 'modification_ts': '2016-11-30 19:11:36', 'estimated_exec_duration': '', 'preconditions': '', 'updater_last_name': 'Administrator', 'node_order': '1000', 'version': '1', 'author_login': 'admin', 'updater_first_name': 'Testlink', 'author_first_name': 'Testlink', 'layout': '1', 'full_tc_external_id': 'tc-13', 'tc_external_id': '13', 'testcase_id': '70', 'status': '1'}]
2016-11-30 19:13:24,327 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:13:24,572 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:13:24,572 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191317', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:13:24,574 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:13:24,574 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:13:24,574 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:13:24,574 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:13:24,575 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191317', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:13:24,576 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:13:24,576 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:13:24,576 casestep.py[line: 102] INFO: 转换后的参数体为：{'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke'}
2016-11-30 19:13:24,577 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:13:24,577 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:13:24,577 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:13:24,577 httpprotocol.py[line: 75] INFO: 参数为：b'{"email": "1033553122@40qq.com", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "checkcode": "rkqj", "url": "http://blog.sina.com.cn/ishouke"}'
2016-11-30 19:13:24,577 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:13:24,675 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:13:24,676 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:13:24,676 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:13:24,676 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:13:24",step_action="{'函数': 'test_interface_of_json', '方法': 'post', 'url': '/index.php?g=Embody&m=Index&a=submt', '参数': {'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke'}}", expected_results="" WHERE executed_history_id = 20161130191317 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:13:24,679 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:13:24,679 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:13:24" WHERE executed_history_id = 20161130191317 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:13:24,681 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:13:24,681 main.py[line: 240] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:13:24,681 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 19:13:24,682 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 19:13:24,682 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130191317',)
2016-11-30 19:13:24,684 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 19:13:24,684 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130191317')
2016-11-30 19:13:24,685 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 19:13:24,685 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130191317')
2016-11-30 19:13:24,686 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 19:13:24,686 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130191317')
2016-11-30 19:13:24,688 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 19:13:24,688 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130191317')
2016-11-30 19:13:24,689 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-11-30 19:13:24,689 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130191317',)
2016-11-30 19:13:24,692 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 19:13:24,692 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130191317')
2016-11-30 19:13:24,694 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:13:24,694 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 19:13:24,694 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130191317')
2016-11-30 19:13:24,696 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:13:24,697 htmlreporter.py[line: 119] INFO: 正在查询已运的测试计划
2016-11-30 19:13:24,697 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130191317',)
2016-11-30 19:13:24,698 htmlreporter.py[line: 131] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 19:13:24,698 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130191317')
2016-11-30 19:13:24,700 htmlreporter.py[line: 162] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 19:13:24,700 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130191317')
2016-11-30 19:13:24,702 htmlreporter.py[line: 131] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 19:13:24,702 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130191317')
2016-11-30 19:13:24,716 htmlreporter.py[line: 162] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 19:13:24,716 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130191317')
2016-11-30 19:13:24,719 htmlreporter.py[line: 191] INFO: 正在设置测试报告结果文件名
2016-11-30 19:13:24,719 htmlreporter.py[line: 201] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130191317.html
2016-11-30 19:13:24,719 htmlreporter.py[line: 194] INFO: 正在生成测试报告
2016-11-30 19:13:24,720 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 19:13:24,828 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130191317.html
2016-11-30 19:13:24,828 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 19:13:24,870 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 19:15:45,816 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:15:45,816 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:15:45,831 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:15:45,834 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:15:45,889 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:15:45,889 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:15:45,890 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:15:45,891 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:15:45,892 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:15:45,893 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:15:45,893 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:15:46,054 global_function.py[line: 19] INFO: 获取测试用例信息 [{'importance': '2', 'author_login': 'admin', 'full_tc_external_id': 'pj_pos-1', 'id': '149', 'testsuite_id': '147', 'execution_type': '1', 'creation_ts': '2016-07-27 18:32:10', 'status': '1', 'tc_external_id': '1', 'estimated_exec_duration': '', 'updater_login': 'admin', 'testcase_id': '148', 'author_id': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'name': 'test-n-登陆掌贝pos机', 'updater_first_name': 'Testlink', 'steps': [{'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183', 'execution_type': '1', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182', 'execution_type': '1', 'active': '1'}, {'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'step_number': '3', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150', 'execution_type': '1', 'active': '1'}], 'layout': '1', 'version': '1', 'author_first_name': 'Testlink', 'is_open': '1', 'modification_ts': '2016-11-30 15:41:36', 'updater_id': '1', 'node_order': '1000', 'active': '1', 'summary': '', 'updater_last_name': 'Administrator', 'author_last_name': 'Administrator'}]
2016-11-30 19:15:46,202 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:15:46,892 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:15:46,892 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191545', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:15:46,893 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:15:46,893 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:15:46,893 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:15:46,893 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:15:46,894 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191545', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:15:46,895 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:15:46,895 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:15:46,895 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:15:46,898 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:15:46,898 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:15:46,898 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:15:46,899 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:15:46,899 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:15:46",step_action="{'参数': (1318,), '单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '步骤类型': '执行sql'}", expected_results="{'检查': 'body', '输出': {'branch_id': 1}}" WHERE executed_history_id = 20161130191545 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:15:46,901 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:15:46,902 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:15:46,902 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:15:46,902 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191545', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:15:46,903 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:15:46,904 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:15:46,904 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:15:46,904 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:15:46,908 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:15:46,908 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:15:46,908 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:15:46,908 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:15:46,908 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:15:46",step_action="{'参数': (1485916418,), '单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '步骤类型': '执行sql'}", expected_results="{'检查': 'body', '输出': {'serial_no': 2, 'device_no': 1}}" WHERE executed_history_id = 20161130191545 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:15:46,911 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:15:46,911 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:15:46,911 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:15:46,911 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191545', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:15:46,912 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:15:46,913 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:15:46,913 casestep.py[line: 102] INFO: 转换后的参数体为：{'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}
2016-11-30 19:15:46,913 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:15:46,913 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:15:46,913 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:15:46,913 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:15:46,913 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 19:15:46,913 casestep.py[line: 102] INFO: 转换后的参数体为：{'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D'}
2016-11-30 19:15:46,913 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:15:46,914 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 19:15:46,914 httpprotocol.py[line: 75] INFO: 参数为：b'{"password": "e10adc3949ba59abbe56e057f20f883e", "id": "1318"}'
2016-11-30 19:15:46,914 httpprotocol.py[line: 76] INFO: 请求头为：{'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C'}
2016-11-30 19:15:51,060 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:15:51,060 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"f7f64ad5-cd95-48d1-a64a-8902a97a7524"}
2016-11-30 19:15:51,060 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 11:15:53 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 19:15:51,060 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:15:51,060 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 19:15:51,060 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 19:15:51,061 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 19:15:51,061 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 19:15:51,061 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 19:15:51,061 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 19:15:51,061 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 19:15:51,061 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：f7f64ad5-cd95-48d1-a64a-8902a97a7524
2016-11-30 19:15:51,061 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：f7f64ad5-cd95-48d1-a64a-8902a97a7524
2016-11-30 19:15:51,061 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 19:15:51,061 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 19:15:51,062 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 19:15:51,062 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'Token': 'f7f64ad5-cd95-48d1-a64a-8902a97a7524'}, {'OperatorId': 1318}]
2016-11-30 19:15:51,062 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:15:51,062 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:15:46",step_action="{'参数': {'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}, '请求头': {'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D'}, 'url': '/saofu-client/password/login', '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="{'检查': 'body', '条件': [{'消息': '登录失败,success不为true', '模式': {'success': True}}, {'消息': 'message不为成功', '模式': {'message': '成功'}}, {'消息': 'code不为4001', '模式': {'code': '4001'}}], '输出': {'Token': {'token': 'value'}, 'OperatorId': {'operator': {'id': 'value'}}}, '匹配规则': '键值相等'}" WHERE executed_history_id = 20161130191545 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:15:51,064 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 19:15:51,065 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:15:51,065 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:15:46" WHERE executed_history_id = 20161130191545 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:15:51,066 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 19:15:51,067 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 19:15:51,202 global_function.py[line: 19] INFO: 获取测试用例信息 [{'importance': '2', 'author_login': 'admin', 'full_tc_external_id': 'tc-13', 'id': '71', 'testsuite_id': '69', 'execution_type': '1', 'creation_ts': '2016-04-07 00:08:17', 'status': '1', 'tc_external_id': '13', 'estimated_exec_duration': '', 'updater_login': 'admin', 'testcase_id': '70', 'author_id': '1', 'preconditions': '', 'name': '提交网址', 'updater_first_name': 'Testlink', 'steps': [{'expected_results': '', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'id': '72', 'execution_type': '1', 'active': '1'}], 'layout': '1', 'version': '1', 'author_first_name': 'Testlink', 'is_open': '1', 'modification_ts': '2016-11-30 19:11:36', 'updater_id': '1', 'node_order': '1000', 'active': '1', 'summary': '', 'updater_last_name': 'Administrator', 'author_last_name': 'Administrator'}]
2016-11-30 19:15:51,357 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:15:51,596 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:15:51,597 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191545', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:15:51,598 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:15:51,598 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:15:51,598 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:15:51,599 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:15:51,599 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191545', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:15:51,600 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:15:51,600 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:15:51,600 casestep.py[line: 102] INFO: 转换后的参数体为：{'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛'}
2016-11-30 19:15:51,600 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:15:51,600 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:15:51,600 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:15:51,601 httpprotocol.py[line: 75] INFO: 参数为：b'{"url": "http://blog.sina.com.cn/ishouke", "checkcode": "rkqj", "email": "1033553122@40qq.com", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b"}'
2016-11-30 19:15:51,601 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:15:51,750 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:15:51,751 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:15:51,751 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:15:51,751 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:15:51",step_action="{'参数': {'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛'}, 'url': '/index.php?g=Embody&m=Index&a=submt', '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="" WHERE executed_history_id = 20161130191545 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:15:51,754 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:15:51,754 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:15:51" WHERE executed_history_id = 20161130191545 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:15:51,756 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:15:51,756 main.py[line: 75] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:15:51,756 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 19:15:51,757 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 19:15:51,939 global_function.py[line: 19] INFO: 获取测试用例信息 [{'importance': '2', 'author_login': 'admin', 'full_tc_external_id': 'tc-13', 'id': '71', 'testsuite_id': '69', 'execution_type': '1', 'creation_ts': '2016-04-07 00:08:17', 'status': '1', 'tc_external_id': '13', 'estimated_exec_duration': '', 'updater_login': 'admin', 'testcase_id': '70', 'author_id': '1', 'preconditions': '', 'name': '提交网址', 'updater_first_name': 'Testlink', 'steps': [{'expected_results': '', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'id': '72', 'execution_type': '1', 'active': '1'}], 'layout': '1', 'version': '1', 'author_first_name': 'Testlink', 'is_open': '1', 'modification_ts': '2016-11-30 19:11:36', 'updater_id': '1', 'node_order': '1000', 'active': '1', 'summary': '', 'updater_last_name': 'Administrator', 'author_last_name': 'Administrator'}]
2016-11-30 19:15:52,091 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:15:52,370 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:15:52,370 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191545', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:15:52,372 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:15:52,372 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:15:52,373 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:15:52,373 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:15:52,373 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191545', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:15:52,374 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:15:52,374 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:15:52,374 casestep.py[line: 102] INFO: 转换后的参数体为：{'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛'}
2016-11-30 19:15:52,374 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:15:52,374 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:15:52,375 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:15:52,375 httpprotocol.py[line: 75] INFO: 参数为：b'{"url": "http://blog.sina.com.cn/ishouke", "checkcode": "rkqj", "email": "1033553122@40qq.com", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b"}'
2016-11-30 19:15:52,375 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:15:52,474 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:15:52,475 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:15:52,475 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:15:52,475 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:15:52",step_action="{'参数': {'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'email': '1033553122@40qq.com', 'websitetype': '博客论坛'}, 'url': '/index.php?g=Embody&m=Index&a=submt', '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="" WHERE executed_history_id = 20161130191545 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:15:52,481 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:15:52,481 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:15:52" WHERE executed_history_id = 20161130191545 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:15:52,485 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:15:52,485 main.py[line: 240] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:15:52,486 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 19:15:52,487 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 19:15:52,487 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130191545',)
2016-11-30 19:15:52,490 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 19:15:52,490 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130191545')
2016-11-30 19:15:52,492 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 19:15:52,492 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130191545')
2016-11-30 19:15:52,494 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 19:15:52,494 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130191545')
2016-11-30 19:15:52,497 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 19:15:52,497 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130191545')
2016-11-30 19:15:52,499 htmlreporter.py[line: 72] INFO: 正在查询已运的测试计划
2016-11-30 19:15:52,499 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130191545',)
2016-11-30 19:15:52,502 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 19:15:52,502 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130191545')
2016-11-30 19:15:52,505 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:15:52,506 htmlreporter.py[line: 98] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 19:15:52,507 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130191545')
2016-11-30 19:15:52,510 htmlreporter.py[line: 105] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:15:52,511 htmlreporter.py[line: 119] INFO: 正在查询已运的测试计划
2016-11-30 19:15:52,511 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130191545',)
2016-11-30 19:15:52,513 htmlreporter.py[line: 131] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 19:15:52,514 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130191545')
2016-11-30 19:15:52,517 htmlreporter.py[line: 162] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 19:15:52,517 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130191545')
2016-11-30 19:15:52,526 htmlreporter.py[line: 131] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 19:15:52,526 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130191545')
2016-11-30 19:15:52,532 htmlreporter.py[line: 162] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 19:15:52,532 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130191545')
2016-11-30 19:15:52,534 htmlreporter.py[line: 191] INFO: 正在设置测试报告结果文件名
2016-11-30 19:15:52,534 htmlreporter.py[line: 201] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130191545.html
2016-11-30 19:15:52,535 htmlreporter.py[line: 194] INFO: 正在生成测试报告
2016-11-30 19:15:52,536 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 19:15:52,662 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130191545.html
2016-11-30 19:15:52,663 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 19:15:52,691 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 19:17:59,048 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:17:59,048 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:17:59,079 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:17:59,114 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:18:06,797 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:18:06,798 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:18:06,817 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:18:06,823 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:18:06,891 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:18:06,892 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:18:06,893 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:18:06,893 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:18:06,896 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:18:06,898 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:18:06,898 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:18:07,089 global_function.py[line: 19] INFO: 获取测试用例信息 [{'author_last_name': 'Administrator', 'layout': '1', 'updater_id': '1', 'modification_ts': '2016-11-30 15:41:36', 'author_id': '1', 'summary': '', 'testsuite_id': '147', 'author_first_name': 'Testlink', 'preconditions': '<p>\n\t初始化用例</p>\n', 'importance': '2', 'testcase_id': '148', 'tc_external_id': '1', 'id': '149', 'active': '1', 'full_tc_external_id': 'pj_pos-1', 'updater_login': 'admin', 'creation_ts': '2016-07-27 18:32:10', 'node_order': '1000', 'updater_first_name': 'Testlink', 'execution_type': '1', 'author_login': 'admin', 'is_open': '1', 'version': '1', 'steps': [{'step_number': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'id': '183', 'active': '1'}, {'step_number': '2', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'id': '182', 'active': '1'}, {'step_number': '3', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'execution_type': '1', 'id': '150', 'active': '1'}], 'status': '1', 'name': 'test-n-登陆掌贝pos机', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator'}]
2016-11-30 19:18:07,267 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:18:07,983 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:18:07,983 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191806', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:18:07,984 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:18:07,985 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:18:07,985 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:18:07,985 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:18:07,985 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191806', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:18:07,987 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:18:07,987 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:18:07,987 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:18:07,990 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:18:07,990 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:18:07,990 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:18:07,990 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:18:07,991 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:18:07",step_action="{'步骤类型': '执行sql', '单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '参数': (1318,)}", expected_results="{'检查': 'body', '输出': {'branch_id': 1}}" WHERE executed_history_id = 20161130191806 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:18:07,993 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:18:07,993 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:18:07,993 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:18:07,993 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191806', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:18:07,994 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:18:07,995 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:18:07,995 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:18:07,995 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:18:07,998 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:18:07,998 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:18:07,999 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:18:07,999 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:18:07,999 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:18:07",step_action="{'步骤类型': '执行sql', '单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '参数': (1485916418,)}", expected_results="{'检查': 'body', '输出': {'serial_no': 2, 'device_no': 1}}" WHERE executed_history_id = 20161130191806 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:18:08,001 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:18:08,002 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:18:08,002 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:18:08,002 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191806', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:18:08,003 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:18:08,003 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:18:08,003 casestep.py[line: 102] INFO: 转换后的参数体为：{'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}
2016-11-30 19:18:08,003 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:18:08,003 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:18:08,003 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 19:18:08,004 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:18:08,004 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:18:08,004 casestep.py[line: 102] INFO: 转换后的参数体为：{'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C'}
2016-11-30 19:18:08,004 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:18:08,004 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 19:18:08,004 httpprotocol.py[line: 75] INFO: 参数为：b'{"password": "e10adc3949ba59abbe56e057f20f883e", "id": "1318"}'
2016-11-30 19:18:08,004 httpprotocol.py[line: 76] INFO: 请求头为：{'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C'}
2016-11-30 19:18:08,216 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 502: Bad Gateway
2016-11-30 19:18:08,217 testcase.py[line: 111] ERROR: 步骤[3]执行出错,停止执行用例[id=148, name=test-n-登陆掌贝pos机]
2016-11-30 19:18:08,217 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:18:08,218 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:18:08",step_action="{'参数': {'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}, 'url': '/saofu-client/password/login', '请求头': {'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'ProductVersion': '3.2.12C'}, '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="{'检查': 'body', '条件': [{'消息': '登录失败,success不为true', '模式': {'success': True}}, {'消息': 'message不为成功', '模式': {'message': '成功'}}, {'消息': 'code不为4001', '模式': {'code': '4001'}}], '匹配规则': '键值相等', '输出': {'Token': {'token': 'value'}, 'OperatorId': {'operator': {'id': 'value'}}}}" WHERE executed_history_id = 20161130191806 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:18:08,220 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:18:08,220 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:18:07" WHERE executed_history_id = 20161130191806 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:18:08,222 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 19:18:08,222 main.py[line: 75] INFO: 用例[148]运行结果：('Error', '')
2016-11-30 19:18:08,358 global_function.py[line: 19] INFO: 获取测试用例信息 [{'author_last_name': 'Administrator', 'layout': '1', 'updater_id': '1', 'modification_ts': '2016-11-30 19:11:36', 'author_id': '1', 'summary': '', 'testsuite_id': '69', 'author_first_name': 'Testlink', 'preconditions': '', 'importance': '2', 'testcase_id': '70', 'tc_external_id': '13', 'id': '71', 'active': '1', 'full_tc_external_id': 'tc-13', 'updater_login': 'admin', 'creation_ts': '2016-04-07 00:08:17', 'node_order': '1000', 'updater_first_name': 'Testlink', 'execution_type': '1', 'author_login': 'admin', 'is_open': '1', 'version': '1', 'steps': [{'step_number': '1', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'id': '72', 'active': '1'}], 'status': '1', 'name': '提交网址', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator'}]
2016-11-30 19:18:08,518 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:18:08,827 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:18:08,828 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191806', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:18:08,829 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:18:08,829 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:18:08,830 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:18:08,830 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:18:08,830 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191806', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:18:08,833 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:18:08,833 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:18:08,833 casestep.py[line: 102] INFO: 转换后的参数体为：{'email': '1033553122@40qq.com', 'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'websitetype': '博客论坛'}
2016-11-30 19:18:08,833 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:18:08,834 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:18:08,834 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:18:08,834 httpprotocol.py[line: 75] INFO: 参数为：b'{"email": "1033553122@40qq.com", "url": "http://blog.sina.com.cn/ishouke", "checkcode": "rkqj", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b"}'
2016-11-30 19:18:08,834 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:18:08,997 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:18:08,998 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:18:08,998 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:18:08,999 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:18:08",step_action="{'url': '/index.php?g=Embody&m=Index&a=submt', '参数': {'email': '1033553122@40qq.com', 'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'websitetype': '博客论坛'}, '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="" WHERE executed_history_id = 20161130191806 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:18:09,005 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:18:09,005 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:18:08" WHERE executed_history_id = 20161130191806 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:18:09,011 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:18:09,011 main.py[line: 75] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:18:09,012 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 19:18:09,012 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 19:18:09,210 global_function.py[line: 19] INFO: 获取测试用例信息 [{'author_last_name': 'Administrator', 'layout': '1', 'updater_id': '1', 'modification_ts': '2016-11-30 19:11:36', 'author_id': '1', 'summary': '', 'testsuite_id': '69', 'author_first_name': 'Testlink', 'preconditions': '', 'importance': '2', 'testcase_id': '70', 'tc_external_id': '13', 'id': '71', 'active': '1', 'full_tc_external_id': 'tc-13', 'updater_login': 'admin', 'creation_ts': '2016-04-07 00:08:17', 'node_order': '1000', 'updater_first_name': 'Testlink', 'execution_type': '1', 'author_login': 'admin', 'is_open': '1', 'version': '1', 'steps': [{'step_number': '1', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'execution_type': '1', 'id': '72', 'active': '1'}], 'status': '1', 'name': '提交网址', 'estimated_exec_duration': '', 'updater_last_name': 'Administrator'}]
2016-11-30 19:18:09,385 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:18:09,827 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:18:09,828 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191806', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:18:09,829 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:18:09,830 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:18:09,830 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:18:09,830 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:18:09,830 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130191806', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:18:09,832 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:18:09,833 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:18:09,833 casestep.py[line: 102] INFO: 转换后的参数体为：{'email': '1033553122@40qq.com', 'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'websitetype': '博客论坛'}
2016-11-30 19:18:09,833 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:18:09,833 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:18:09,834 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:18:09,834 httpprotocol.py[line: 75] INFO: 参数为：b'{"email": "1033553122@40qq.com", "url": "http://blog.sina.com.cn/ishouke", "checkcode": "rkqj", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b"}'
2016-11-30 19:18:09,834 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:18:09,955 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:18:09,956 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:18:09,956 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:18:09,956 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:18:09",step_action="{'url': '/index.php?g=Embody&m=Index&a=submt', '参数': {'email': '1033553122@40qq.com', 'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'websitetype': '博客论坛'}, '函数': 'test_interface_of_json', '方法': 'post'}", expected_results="" WHERE executed_history_id = 20161130191806 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:18:09,959 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:18:09,959 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:18:09" WHERE executed_history_id = 20161130191806 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:18:09,962 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:18:09,962 main.py[line: 240] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:18:09,962 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 19:18:09,963 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 19:18:09,963 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130191806',)
2016-11-30 19:18:09,964 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 19:18:09,964 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130191806')
2016-11-30 19:18:09,965 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 19:18:09,965 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130191806')
2016-11-30 19:18:09,966 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 19:18:09,966 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130191806')
2016-11-30 19:18:09,967 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 19:18:09,968 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130191806')
2016-11-30 19:20:48,105 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:20:48,105 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:20:48,121 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:20:48,125 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:20:48,193 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:20:48,193 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:20:48,195 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:20:48,195 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:20:48,197 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:20:48,199 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:20:48,200 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:20:48,383 global_function.py[line: 19] INFO: 获取测试用例信息 [{'is_open': '1', 'version': '1', 'author_id': '1', 'active': '1', 'author_last_name': 'Administrator', 'updater_id': '1', 'testsuite_id': '147', 'id': '149', 'status': '1', 'name': 'test-n-登陆掌贝pos机', 'modification_ts': '2016-11-30 15:41:36', 'importance': '2', 'updater_first_name': 'Testlink', 'tc_external_id': '1', 'node_order': '1000', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'preconditions': '<p>\n\t初始化用例</p>\n', 'author_login': 'admin', 'execution_type': '1', 'creation_ts': '2016-07-27 18:32:10', 'estimated_exec_duration': '', 'layout': '1', 'author_first_name': 'Testlink', 'testcase_id': '148', 'steps': [{'execution_type': '1', 'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'id': '183'}, {'execution_type': '1', 'active': '1', 'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'id': '182'}, {'execution_type': '1', 'active': '1', 'step_number': '3', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'id': '150'}], 'summary': '', 'full_tc_external_id': 'pj_pos-1'}]
2016-11-30 19:20:48,544 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:20:49,286 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:20:49,286 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192048', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:20:49,288 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:20:49,288 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:20:49,288 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:20:49,288 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:20:49,289 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192048', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:20:49,290 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:20:49,290 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:20:49,290 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:20:49,293 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:20:49,293 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:20:49,293 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:20:49,293 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:20:49,293 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:20:49",step_action="{'单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '步骤类型': '执行sql', '参数': (1318,)}", expected_results="{'输出': {'branch_id': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130192048 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:20:49,296 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:20:49,296 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:20:49,296 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:20:49,296 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192048', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:20:49,297 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:20:49,298 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:20:49,298 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:20:49,298 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:20:49,301 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:20:49,301 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:20:49,301 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:20:49,301 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:20:49,302 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:20:49",step_action="{'单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '步骤类型': '执行sql', '参数': (1485916418,)}", expected_results="{'输出': {'serial_no': 2, 'device_no': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130192048 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:20:49,305 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:20:49,306 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:20:49,306 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:20:49,306 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192048', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:20:49,308 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:20:49,308 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:20:49,308 casestep.py[line: 102] INFO: 转换后的参数体为：{'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}
2016-11-30 19:20:49,308 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:20:49,308 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:20:49,308 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 19:20:49,308 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:20:49,308 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:20:49,308 casestep.py[line: 102] INFO: 转换后的参数体为：{'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006'}
2016-11-30 19:20:49,309 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:20:49,309 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 19:20:49,309 httpprotocol.py[line: 75] INFO: 参数为：b'{"password": "e10adc3949ba59abbe56e057f20f883e", "id": "1318"}'
2016-11-30 19:20:49,309 httpprotocol.py[line: 76] INFO: 请求头为：{'DeviceId': '182590014248006', 'SerialNo': 'HZ501FZA0F9M07D', 'ProtocolVersion': '4.0', 'Content-Type': 'application/json;charset=utf-8', 'ProductVersion': '3.2.12C'}
2016-11-30 19:20:51,222 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:20:51,222 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"3a1141f1-a1c4-4e0f-833e-c6fa4544726f"}
2016-11-30 19:20:51,222 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 11:20:53 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 19:20:51,222 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:20:51,222 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 19:20:51,222 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 19:20:51,223 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 19:20:51,223 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 19:20:51,223 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 19:20:51,223 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 19:20:51,223 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 19:20:51,223 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：3a1141f1-a1c4-4e0f-833e-c6fa4544726f
2016-11-30 19:20:51,223 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：3a1141f1-a1c4-4e0f-833e-c6fa4544726f
2016-11-30 19:20:51,223 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 19:20:51,224 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 19:20:51,224 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 19:20:51,224 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'Token': '3a1141f1-a1c4-4e0f-833e-c6fa4544726f'}, {'OperatorId': 1318}]
2016-11-30 19:20:51,224 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:20:51,224 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:20:49",step_action="{'请求头': {'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006'}, 'url': '/saofu-client/password/login', '参数': {'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}, '方法': 'post', '函数': 'test_interface_of_json'}", expected_results="{'输出': {'Token': {'token': 'value'}, 'OperatorId': {'operator': {'id': 'value'}}}, '条件': [{'模式': {'success': True}, '消息': '登录失败,success不为true'}, {'模式': {'message': '成功'}, '消息': 'message不为成功'}, {'模式': {'code': '4001'}, '消息': 'code不为4001'}], '检查': 'body', '匹配规则': '键值相等'}" WHERE executed_history_id = 20161130192048 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:20:51,227 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 19:20:51,227 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:20:51,227 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:20:49" WHERE executed_history_id = 20161130192048 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:20:51,228 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 19:20:51,229 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 19:20:51,363 global_function.py[line: 19] INFO: 获取测试用例信息 [{'is_open': '1', 'version': '1', 'author_id': '1', 'active': '1', 'author_last_name': 'Administrator', 'updater_id': '1', 'testsuite_id': '69', 'id': '71', 'status': '1', 'name': '提交网址', 'modification_ts': '2016-11-30 19:11:36', 'importance': '2', 'updater_first_name': 'Testlink', 'tc_external_id': '13', 'node_order': '1000', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'preconditions': '', 'author_login': 'admin', 'execution_type': '1', 'creation_ts': '2016-04-07 00:08:17', 'estimated_exec_duration': '', 'layout': '1', 'author_first_name': 'Testlink', 'testcase_id': '70', 'steps': [{'execution_type': '1', 'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'expected_results': '', 'id': '72'}], 'summary': '', 'full_tc_external_id': 'tc-13'}]
2016-11-30 19:20:51,506 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:20:51,878 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:20:51,879 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192048', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:20:51,883 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:20:51,883 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:20:51,883 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:20:51,884 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:20:51,884 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192048', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:20:51,886 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:20:51,887 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:20:51,887 casestep.py[line: 102] INFO: 转换后的参数体为：{'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'websitetype': '博客论坛', 'email': '1033553122@40qq.com'}
2016-11-30 19:20:51,887 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:20:51,888 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:20:51,888 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:20:51,888 httpprotocol.py[line: 75] INFO: 参数为：b'{"url": "http://blog.sina.com.cn/ishouke", "checkcode": "rkqj", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "email": "1033553122@40qq.com"}'
2016-11-30 19:20:51,888 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:20:53,015 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:20:53,015 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:20:53,016 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:20:53,016 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:20:51",step_action="{'url': '/index.php?g=Embody&m=Index&a=submt', '参数': {'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'websitetype': '博客论坛', 'email': '1033553122@40qq.com'}, '方法': 'post', '函数': 'test_interface_of_json'}", expected_results="" WHERE executed_history_id = 20161130192048 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:20:53,019 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:20:53,020 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:20:51" WHERE executed_history_id = 20161130192048 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:20:53,022 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:20:53,022 main.py[line: 75] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:20:53,022 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 19:20:53,022 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 19:20:53,188 global_function.py[line: 19] INFO: 获取测试用例信息 [{'is_open': '1', 'version': '1', 'author_id': '1', 'active': '1', 'author_last_name': 'Administrator', 'updater_id': '1', 'testsuite_id': '69', 'id': '71', 'status': '1', 'name': '提交网址', 'modification_ts': '2016-11-30 19:11:36', 'importance': '2', 'updater_first_name': 'Testlink', 'tc_external_id': '13', 'node_order': '1000', 'updater_last_name': 'Administrator', 'updater_login': 'admin', 'preconditions': '', 'author_login': 'admin', 'execution_type': '1', 'creation_ts': '2016-04-07 00:08:17', 'estimated_exec_duration': '', 'layout': '1', 'author_first_name': 'Testlink', 'testcase_id': '70', 'steps': [{'execution_type': '1', 'active': '1', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'expected_results': '', 'id': '72'}], 'summary': '', 'full_tc_external_id': 'tc-13'}]
2016-11-30 19:20:53,407 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:20:53,703 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:20:53,703 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192048', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:20:53,704 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:20:53,704 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:20:53,704 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:20:53,705 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:20:53,705 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192048', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:20:53,706 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:20:53,706 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:20:53,706 casestep.py[line: 102] INFO: 转换后的参数体为：{'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'websitetype': '博客论坛', 'email': '1033553122@40qq.com'}
2016-11-30 19:20:53,706 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:20:53,706 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:20:53,706 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:20:53,706 httpprotocol.py[line: 75] INFO: 参数为：b'{"url": "http://blog.sina.com.cn/ishouke", "checkcode": "rkqj", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "email": "1033553122@40qq.com"}'
2016-11-30 19:20:53,707 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:20:53,802 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:20:53,802 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:20:53,802 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:20:53,802 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:20:53",step_action="{'url': '/index.php?g=Embody&m=Index&a=submt', '参数': {'url': 'http://blog.sina.com.cn/ishouke', 'checkcode': 'rkqj', 'websitetype': '博客论坛', 'email': '1033553122@40qq.com'}, '方法': 'post', '函数': 'test_interface_of_json'}", expected_results="" WHERE executed_history_id = 20161130192048 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:20:53,806 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:20:53,806 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:20:53" WHERE executed_history_id = 20161130192048 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:20:53,808 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:20:53,809 main.py[line: 240] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:20:53,809 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 19:20:53,809 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 19:20:53,810 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130192048',)
2016-11-30 19:20:53,811 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 19:20:53,811 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130192048')
2016-11-30 19:20:53,812 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 19:20:53,812 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130192048')
2016-11-30 19:20:53,814 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 19:20:53,814 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130192048')
2016-11-30 19:20:53,815 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 19:20:53,816 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130192048')
2016-11-30 19:20:53,817 htmlreporter.py[line: 87] INFO: 正在查询已运的测试计划
2016-11-30 19:20:53,818 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130192048',)
2016-11-30 19:20:53,820 htmlreporter.py[line: 113] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 19:20:53,820 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130192048')
2016-11-30 19:20:53,822 htmlreporter.py[line: 120] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:20:53,822 htmlreporter.py[line: 113] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 19:20:53,822 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130192048')
2016-11-30 19:20:53,824 htmlreporter.py[line: 120] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:20:53,824 htmlreporter.py[line: 134] INFO: 正在查询已运的测试计划
2016-11-30 19:20:53,824 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130192048',)
2016-11-30 19:20:53,826 htmlreporter.py[line: 146] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 19:20:53,826 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130192048')
2016-11-30 19:20:53,828 htmlreporter.py[line: 177] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 19:20:53,828 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130192048')
2016-11-30 19:20:53,830 htmlreporter.py[line: 146] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 19:20:53,831 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130192048')
2016-11-30 19:20:53,833 htmlreporter.py[line: 177] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 19:20:53,834 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130192048')
2016-11-30 19:20:53,837 htmlreporter.py[line: 206] INFO: 正在设置测试报告结果文件名
2016-11-30 19:20:53,837 htmlreporter.py[line: 216] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130192048.html
2016-11-30 19:20:53,837 htmlreporter.py[line: 209] INFO: 正在生成测试报告
2016-11-30 19:20:53,840 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 19:20:53,954 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130192048.html
2016-11-30 19:20:53,954 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 19:20:54,002 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 19:21:45,962 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:21:45,962 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:21:45,975 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:21:45,977 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:21:46,024 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:21:46,025 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:21:46,026 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:21:46,026 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:21:46,027 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:21:46,028 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:21:46,028 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:21:46,160 global_function.py[line: 19] INFO: 获取测试用例信息 [{'preconditions': '<p>\n\t初始化用例</p>\n', 'node_order': '1000', 'is_open': '1', 'id': '149', 'author_last_name': 'Administrator', 'active': '1', 'creation_ts': '2016-07-27 18:32:10', 'author_first_name': 'Testlink', 'status': '1', 'full_tc_external_id': 'pj_pos-1', 'execution_type': '1', 'estimated_exec_duration': '', 'importance': '2', 'modification_ts': '2016-11-30 15:41:36', 'steps': [{'execution_type': '1', 'id': '183', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1'}, {'execution_type': '1', 'id': '182', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'step_number': '2', 'active': '1'}, {'execution_type': '1', 'id': '150', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'step_number': '3', 'active': '1'}], 'updater_last_name': 'Administrator', 'version': '1', 'testcase_id': '148', 'testsuite_id': '147', 'updater_id': '1', 'author_id': '1', 'name': 'test-n-登陆掌贝pos机', 'layout': '1', 'updater_login': 'admin', 'summary': '', 'tc_external_id': '1', 'author_login': 'admin', 'updater_first_name': 'Testlink'}]
2016-11-30 19:21:46,281 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:21:47,020 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:21:47,021 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192145', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:21:47,022 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:21:47,023 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:21:47,023 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:21:47,023 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:21:47,023 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192145', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:21:47,025 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:21:47,025 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:21:47,025 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:21:47,028 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:21:47,028 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:21:47,028 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:21:47,028 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:21:47,028 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:21:47",step_action="{'参数': (1318,), '步骤类型': '执行sql', '单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s'}", expected_results="{'检查': 'body', '输出': {'branch_id': 1}}" WHERE executed_history_id = 20161130192145 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:21:47,031 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:21:47,031 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:21:47,031 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:21:47,032 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192145', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:21:47,034 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:21:47,034 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:21:47,034 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:21:47,035 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:21:47,038 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:21:47,038 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:21:47,038 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:21:47,038 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:21:47,038 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:21:47",step_action="{'参数': (1485916418,), '步骤类型': '执行sql', '单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s'}", expected_results="{'检查': 'body', '输出': {'device_no': 1, 'serial_no': 2}}" WHERE executed_history_id = 20161130192145 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:21:47,041 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:21:47,041 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:21:47,041 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:21:47,041 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192145', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:21:47,042 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:21:47,042 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:21:47,043 casestep.py[line: 102] INFO: 转换后的参数体为：{'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}
2016-11-30 19:21:47,043 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:21:47,043 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:21:47,043 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:21:47,043 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 19:21:47,043 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:21:47,043 casestep.py[line: 102] INFO: 转换后的参数体为：{'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C'}
2016-11-30 19:21:47,043 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:21:47,043 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 19:21:47,043 httpprotocol.py[line: 75] INFO: 参数为：b'{"id": "1318", "password": "e10adc3949ba59abbe56e057f20f883e"}'
2016-11-30 19:21:47,044 httpprotocol.py[line: 76] INFO: 请求头为：{'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C'}
2016-11-30 19:21:47,974 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:21:47,975 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"f7df917d-be37-4d44-80fb-15aa4b61c2ab"}
2016-11-30 19:21:47,975 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 11:21:49 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 19:21:47,975 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:21:47,975 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 19:21:47,975 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 19:21:47,975 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 19:21:47,975 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 19:21:47,976 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 19:21:47,976 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 19:21:47,976 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 19:21:47,976 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 19:21:47,976 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 19:21:47,976 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 19:21:47,976 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：f7df917d-be37-4d44-80fb-15aa4b61c2ab
2016-11-30 19:21:47,976 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：f7df917d-be37-4d44-80fb-15aa4b61c2ab
2016-11-30 19:21:47,976 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'OperatorId': 1318}, {'Token': 'f7df917d-be37-4d44-80fb-15aa4b61c2ab'}]
2016-11-30 19:21:47,977 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:21:47,977 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:21:47",step_action="{'函数': 'test_interface_of_json', '方法': 'post', '参数': {'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}, 'url': '/saofu-client/password/login', '请求头': {'DeviceId': '182590014248006', 'Content-Type': 'application/json;charset=utf-8', 'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D', 'ProductVersion': '3.2.12C'}}", expected_results="{'条件': [{'消息': '登录失败,success不为true', '模式': {'success': True}}, {'消息': 'message不为成功', '模式': {'message': '成功'}}, {'消息': 'code不为4001', '模式': {'code': '4001'}}], '检查': 'body', '输出': {'OperatorId': {'operator': {'id': 'value'}}, 'Token': {'token': 'value'}}, '匹配规则': '键值相等'}" WHERE executed_history_id = 20161130192145 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:21:47,980 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 19:21:47,980 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:21:47,980 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:21:47" WHERE executed_history_id = 20161130192145 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:21:47,982 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 19:21:47,982 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 19:21:48,118 global_function.py[line: 19] INFO: 获取测试用例信息 [{'preconditions': '', 'node_order': '1000', 'is_open': '1', 'id': '71', 'author_last_name': 'Administrator', 'active': '1', 'creation_ts': '2016-04-07 00:08:17', 'author_first_name': 'Testlink', 'status': '1', 'full_tc_external_id': 'tc-13', 'execution_type': '1', 'estimated_exec_duration': '', 'importance': '2', 'modification_ts': '2016-11-30 19:11:36', 'steps': [{'execution_type': '1', 'id': '72', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1'}], 'updater_last_name': 'Administrator', 'version': '1', 'testcase_id': '70', 'testsuite_id': '69', 'updater_id': '1', 'author_id': '1', 'name': '提交网址', 'layout': '1', 'updater_login': 'admin', 'summary': '', 'tc_external_id': '13', 'author_login': 'admin', 'updater_first_name': 'Testlink'}]
2016-11-30 19:21:48,241 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:21:48,512 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:21:48,512 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192145', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:21:48,514 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:21:48,514 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:21:48,514 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:21:48,514 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:21:48,514 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192145', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:21:48,516 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:21:48,516 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:21:48,516 casestep.py[line: 102] INFO: 转换后的参数体为：{'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke'}
2016-11-30 19:21:48,516 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:21:48,516 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:21:48,516 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:21:48,517 httpprotocol.py[line: 75] INFO: 参数为：b'{"email": "1033553122@40qq.com", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "checkcode": "rkqj", "url": "http://blog.sina.com.cn/ishouke"}'
2016-11-30 19:21:48,517 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:21:48,642 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:21:48,643 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:21:48,643 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:21:48,643 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:21:48",step_action="{'函数': 'test_interface_of_json', '方法': 'post', 'url': '/index.php?g=Embody&m=Index&a=submt', '参数': {'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke'}}", expected_results="" WHERE executed_history_id = 20161130192145 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:21:48,647 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:21:48,647 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:21:48" WHERE executed_history_id = 20161130192145 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:21:48,650 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:21:48,650 main.py[line: 75] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:21:48,650 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 19:21:48,650 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 19:21:48,826 global_function.py[line: 19] INFO: 获取测试用例信息 [{'preconditions': '', 'node_order': '1000', 'is_open': '1', 'id': '71', 'author_last_name': 'Administrator', 'active': '1', 'creation_ts': '2016-04-07 00:08:17', 'author_first_name': 'Testlink', 'status': '1', 'full_tc_external_id': 'tc-13', 'execution_type': '1', 'estimated_exec_duration': '', 'importance': '2', 'modification_ts': '2016-11-30 19:11:36', 'steps': [{'execution_type': '1', 'id': '72', 'expected_results': '', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'step_number': '1', 'active': '1'}], 'updater_last_name': 'Administrator', 'version': '1', 'testcase_id': '70', 'testsuite_id': '69', 'updater_id': '1', 'author_id': '1', 'name': '提交网址', 'layout': '1', 'updater_login': 'admin', 'summary': '', 'tc_external_id': '13', 'author_login': 'admin', 'updater_first_name': 'Testlink'}]
2016-11-30 19:21:48,974 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:21:49,224 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:21:49,224 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192145', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:21:49,226 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:21:49,226 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:21:49,226 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:21:49,226 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:21:49,226 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192145', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:21:49,227 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:21:49,227 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:21:49,227 casestep.py[line: 102] INFO: 转换后的参数体为：{'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke'}
2016-11-30 19:21:49,228 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:21:49,228 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:21:49,228 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:21:49,228 httpprotocol.py[line: 75] INFO: 参数为：b'{"email": "1033553122@40qq.com", "websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "checkcode": "rkqj", "url": "http://blog.sina.com.cn/ishouke"}'
2016-11-30 19:21:49,228 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:21:49,328 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:21:49,329 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:21:49,329 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:21:49,330 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:21:49",step_action="{'函数': 'test_interface_of_json', '方法': 'post', 'url': '/index.php?g=Embody&m=Index&a=submt', '参数': {'email': '1033553122@40qq.com', 'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke'}}", expected_results="" WHERE executed_history_id = 20161130192145 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:21:49,334 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:21:49,335 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:21:49" WHERE executed_history_id = 20161130192145 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:21:49,337 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:21:49,337 main.py[line: 240] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:21:49,337 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 19:21:49,338 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 19:21:49,339 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130192145',)
2016-11-30 19:21:49,340 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 19:21:49,341 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130192145')
2016-11-30 19:21:49,342 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 19:21:49,342 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130192145')
2016-11-30 19:21:49,344 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 19:21:49,344 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130192145')
2016-11-30 19:21:49,345 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 19:21:49,345 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130192145')
2016-11-30 19:21:49,347 htmlreporter.py[line: 87] INFO: 正在查询已运的测试计划
2016-11-30 19:21:49,347 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130192145',)
2016-11-30 19:21:49,349 htmlreporter.py[line: 113] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 19:21:49,350 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130192145')
2016-11-30 19:21:49,352 htmlreporter.py[line: 120] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:21:49,352 htmlreporter.py[line: 113] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 19:21:49,353 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130192145')
2016-11-30 19:21:49,354 htmlreporter.py[line: 120] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:21:49,355 htmlreporter.py[line: 134] INFO: 正在查询已运的测试计划
2016-11-30 19:21:49,355 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130192145',)
2016-11-30 19:21:49,356 htmlreporter.py[line: 146] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 19:21:49,357 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130192145')
2016-11-30 19:21:49,359 htmlreporter.py[line: 177] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 19:21:49,359 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130192145')
2016-11-30 19:21:49,363 htmlreporter.py[line: 146] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 19:21:49,363 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130192145')
2016-11-30 19:21:49,366 htmlreporter.py[line: 177] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 19:21:49,366 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130192145')
2016-11-30 19:21:49,370 htmlreporter.py[line: 206] INFO: 正在设置测试报告结果文件名
2016-11-30 19:21:49,370 htmlreporter.py[line: 216] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130192145.html
2016-11-30 19:21:49,370 htmlreporter.py[line: 209] INFO: 正在生成测试报告
2016-11-30 19:21:49,372 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 19:21:49,559 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130192145.html
2016-11-30 19:21:49,560 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 19:21:49,589 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 19:23:14,330 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:23:14,330 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:23:14,343 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:23:14,346 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:23:14,394 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:23:14,394 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:23:14,395 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:23:14,395 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:23:14,396 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:23:14,398 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:23:14,398 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:23:14,559 global_function.py[line: 19] INFO: 获取测试用例信息 [{'creation_ts': '2016-07-27 18:32:10', 'updater_first_name': 'Testlink', 'full_tc_external_id': 'pj_pos-1', 'tc_external_id': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'updater_last_name': 'Administrator', 'summary': '', 'updater_id': '1', 'testsuite_id': '147', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'modification_ts': '2016-11-30 15:41:36', 'estimated_exec_duration': '', 'testcase_id': '148', 'author_login': 'admin', 'status': '1', 'id': '149', 'node_order': '1000', 'importance': '2', 'author_id': '1', 'steps': [{'execution_type': '1', 'active': '1', 'id': '183', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n'}, {'execution_type': '1', 'active': '1', 'id': '182', 'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n'}, {'execution_type': '1', 'active': '1', 'id': '150', 'step_number': '3', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n'}], 'version': '1', 'name': 'test-n-登陆掌贝pos机', 'execution_type': '1', 'active': '1', 'layout': '1', 'is_open': '1', 'updater_login': 'admin'}]
2016-11-30 19:23:14,681 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:23:15,386 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:23:15,386 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192314', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:23:15,387 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:23:15,388 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:23:15,388 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:23:15,388 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:23:15,388 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192314', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:23:15,389 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:23:15,389 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:23:15,390 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:23:15,393 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:23:15,393 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:23:15,393 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:23:15,393 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:23:15,393 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:23:15",step_action="{'参数': (1318,), '单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '步骤类型': '执行sql'}", expected_results="{'输出': {'branch_id': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130192314 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:23:15,396 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:23:15,396 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:23:15,396 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:23:15,396 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192314', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:23:15,397 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:23:15,397 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:23:15,397 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:23:15,398 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:23:15,401 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:23:15,401 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:23:15,401 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:23:15,401 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:23:15,401 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:23:15",step_action="{'参数': (1485916418,), '单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '步骤类型': '执行sql'}", expected_results="{'输出': {'serial_no': 2, 'device_no': 1}, '检查': 'body'}" WHERE executed_history_id = 20161130192314 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:23:15,404 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:23:15,404 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:23:15,405 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:23:15,405 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192314', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:23:15,406 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:23:15,406 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:23:15,406 casestep.py[line: 102] INFO: 转换后的参数体为：{'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}
2016-11-30 19:23:15,406 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:23:15,406 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:23:15,406 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:23:15,406 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:23:15,407 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
2016-11-30 19:23:15,407 casestep.py[line: 102] INFO: 转换后的参数体为：{'ProductVersion': '3.2.12C', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006', 'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D'}
2016-11-30 19:23:15,407 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:23:15,407 httpprotocol.py[line: 74] INFO: 发起的请求为：https://saofu.client.test.saofu.cn:443/saofu-client/password/login
2016-11-30 19:23:15,407 httpprotocol.py[line: 75] INFO: 参数为：b'{"id": "1318", "password": "e10adc3949ba59abbe56e057f20f883e"}'
2016-11-30 19:23:15,407 httpprotocol.py[line: 76] INFO: 请求头为：{'ProductVersion': '3.2.12C', 'SerialNo': 'HZ501FZA0F9M07D', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006', 'ProtocolVersion': '4.0'}
2016-11-30 19:23:16,640 InterfaceUnittestTestCase.py[line: 101] INFO: 正在对服务器返回body进行解码
2016-11-30 19:23:16,640 InterfaceUnittestTestCase.py[line: 115] INFO: 服务器返回结果"响应体(body)": {"attach":["flag_appointment","flag_app_xiaoer","flag_cardcupon","flag_cash","flag_help_center","flag_info_center","flag_in_shop","flag_lake","flag_mt_wm","flag_order","flag_qrscan","flag_queue","flag_zhanggui"],"branchSerial":"cao","code":"4001","merchantKey":"10549840601068216320","message":"成功","operator":{"id":1318,"name":"接口测试","number":"1"},"reason":"成功","shopId":"1485916418","success":true,"token":"462fc54f-cf5b-4714-a182-8713c7d2e140"}
2016-11-30 19:23:16,641 InterfaceUnittestTestCase.py[line: 116] INFO: 服务器返回结果"请求头(headers)": [('Server', 'nginx/1.8.0'), ('Date', 'Wed, 30 Nov 2016 11:23:18 GMT'), ('Content-Type', 'application/json;charset=UTF-8'), ('Transfer-Encoding', 'chunked'), ('Connection', 'close'), ('EXCLUDE_ENCRYPT', 'true'), ('Vary', 'Accept-Encoding')]
2016-11-30 19:23:16,641 InterfaceUnittestTestCase.py[line: 117] INFO: 服务器返回结果"状态码(code)": 200
2016-11-30 19:23:16,641 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['success', True]
2016-11-30 19:23:16,641 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：True
2016-11-30 19:23:16,641 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['message', '成功']
2016-11-30 19:23:16,641 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：成功
2016-11-30 19:23:16,641 unittesttestcase.py[line: 106] INFO: 要匹配的字典key,value层级为：['code', '4001']
2016-11-30 19:23:16,641 unittesttestcase.py[line: 109] INFO: 找到的对应字典层级的最后值为：4001
2016-11-30 19:23:16,641 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['token', 'value']
2016-11-30 19:23:16,641 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：462fc54f-cf5b-4714-a182-8713c7d2e140
2016-11-30 19:23:16,642 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：462fc54f-cf5b-4714-a182-8713c7d2e140
2016-11-30 19:23:16,642 unittesttestcase.py[line: 225] INFO: 要提取的字典key,value层级为：['operator', 'id', 'value']
2016-11-30 19:23:16,642 unittesttestcase.py[line: 239] INFO: 找到的对应字典层级的key的值为：1318
2016-11-30 19:23:16,642 unittesttestcase.py[line: 263] INFO: 获取到的变量的值为：1318
2016-11-30 19:23:16,642 unittesttestcase.py[line: 290] INFO: 提取的输出结果(key-value对)为:[{'Token': '462fc54f-cf5b-4714-a182-8713c7d2e140'}, {'OperatorId': 1318}]
2016-11-30 19:23:16,642 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:23:16,642 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="post", runtime="2016-11-30 19:23:15",step_action="{'参数': {'id': '1318', 'password': 'e10adc3949ba59abbe56e057f20f883e'}, '方法': 'post', '请求头': {'ProductVersion': '3.2.12C', 'Content-Type': 'application/json;charset=utf-8', 'DeviceId': '182590014248006', 'ProtocolVersion': '4.0', 'SerialNo': 'HZ501FZA0F9M07D'}, '函数': 'test_interface_of_json', 'url': '/saofu-client/password/login'}", expected_results="{'条件': [{'消息': '登录失败,success不为true', '模式': {'success': True}}, {'消息': 'message不为成功', '模式': {'message': '成功'}}, {'消息': 'code不为4001', '模式': {'code': '4001'}}], '匹配规则': '键值相等', '输出': {'Token': {'token': 'value'}, 'OperatorId': {'operator': {'id': 'value'}}}, '检查': 'body'}" WHERE executed_history_id = 20161130192314 AND testcase_id = 148 AND step_id = 150 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:23:16,645 testcase.py[line: 158] INFO: 测试用例[id=148, name=test-n-登陆掌贝pos机]执行成功
2016-11-30 19:23:16,645 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:23:16,645 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Pass", runtime="2016-11-30 19:23:15" WHERE executed_history_id = 20161130192314 and testcase_id = 148 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:23:16,647 global_function.py[line: 82] INFO: 指定用例[148]已执行完
2016-11-30 19:23:16,647 main.py[line: 75] INFO: 用例[148]运行结果：('Pass', '')
2016-11-30 19:23:16,780 global_function.py[line: 19] INFO: 获取测试用例信息 [{'creation_ts': '2016-04-07 00:08:17', 'updater_first_name': 'Testlink', 'full_tc_external_id': 'tc-13', 'tc_external_id': '13', 'preconditions': '', 'updater_last_name': 'Administrator', 'summary': '', 'updater_id': '1', 'testsuite_id': '69', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'modification_ts': '2016-11-30 19:11:36', 'estimated_exec_duration': '', 'testcase_id': '70', 'author_login': 'admin', 'status': '1', 'id': '71', 'node_order': '1000', 'importance': '2', 'author_id': '1', 'steps': [{'execution_type': '1', 'active': '1', 'id': '72', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'expected_results': ''}], 'version': '1', 'name': '提交网址', 'execution_type': '1', 'active': '1', 'layout': '1', 'is_open': '1', 'updater_login': 'admin'}]
2016-11-30 19:23:16,938 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:23:17,278 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:23:17,278 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192314', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:23:17,279 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:23:17,280 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:23:17,280 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:23:17,280 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:23:17,280 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192314', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:23:17,281 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:23:17,282 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:23:17,282 casestep.py[line: 102] INFO: 转换后的参数体为：{'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com'}
2016-11-30 19:23:17,282 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:23:17,282 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:23:17,282 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:23:17,282 httpprotocol.py[line: 75] INFO: 参数为：b'{"websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "checkcode": "rkqj", "url": "http://blog.sina.com.cn/ishouke", "email": "1033553122@40qq.com"}'
2016-11-30 19:23:17,282 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:23:17,431 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:23:17,432 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:23:17,433 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:23:17,433 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:23:17",step_action="{'参数': {'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com'}, '方法': 'post', '函数': 'test_interface_of_json', 'url': '/index.php?g=Embody&m=Index&a=submt'}", expected_results="" WHERE executed_history_id = 20161130192314 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:23:17,435 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:23:17,436 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:23:17" WHERE executed_history_id = 20161130192314 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:23:17,437 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:23:17,438 main.py[line: 75] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:23:17,438 main.py[line: 235] INFO: 运行指定用例……
2016-11-30 19:23:17,438 main.py[line: 237] INFO: 待运行用例id列表：[70]
2016-11-30 19:23:17,683 global_function.py[line: 19] INFO: 获取测试用例信息 [{'creation_ts': '2016-04-07 00:08:17', 'updater_first_name': 'Testlink', 'full_tc_external_id': 'tc-13', 'tc_external_id': '13', 'preconditions': '', 'updater_last_name': 'Administrator', 'summary': '', 'updater_id': '1', 'testsuite_id': '69', 'author_first_name': 'Testlink', 'author_last_name': 'Administrator', 'modification_ts': '2016-11-30 19:11:36', 'estimated_exec_duration': '', 'testcase_id': '70', 'author_login': 'admin', 'status': '1', 'id': '71', 'node_order': '1000', 'importance': '2', 'author_id': '1', 'steps': [{'execution_type': '1', 'active': '1', 'id': '72', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;函数&quot;:&quot;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&quot;,</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,</p>\n<p>\n\t&quot;url&quot;:&quot;/index.php?g=Embody&amp;m=Index&amp;a=submt&quot;,</p>\n<p>\n\t&quot;参数&quot;:{&quot;websitetype&quot;:&quot;博客论坛&quot;,&quot;url&quot;:&quot;http://blog.sina.com.cn/ishouke&quot;,&quot;email&quot;:&quot;1033553122@40qq.com&quot;,&quot;checkcode&quot;:&quot;rkqj&quot;}</p>\n<p>\n\t}</p>\n', 'expected_results': ''}], 'version': '1', 'name': '提交网址', 'execution_type': '1', 'active': '1', 'layout': '1', 'is_open': '1', 'updater_login': 'admin'}]
2016-11-30 19:23:17,853 global_function.py[line: 39] INFO: 正在读取套件[id=69]的协议，host，端口配置...
2016-11-30 19:23:18,193 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:23:18,193 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192314', 70, '提交网址', '360搜索提交入口接口', '无计划', '样例项目', 'Block', '')
2016-11-30 19:23:18,194 global_function.py[line: 71] INFO: 开始执行测试用例[id=70，name=提交网址]
2016-11-30 19:23:18,194 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}
2016-11-30 19:23:18,195 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：
2016-11-30 19:23:18,195 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:23:18,195 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192314', 70, '提交网址', '无计划', '样例项目', 72, 1, '', 'http', 'info.so.360.cn', '80', '{"函数":"test_interface_of_json","方法":"post","url":"/index.php?g=Embody&m=Index&a=submt","参数":{"websitetype":"博客论坛","url":"http://blog.sina.com.cn/ishouke","email":"1033553122@40qq.com","checkcode":"rkqj"}}', '', 'Block', '', '')
2016-11-30 19:23:18,197 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:23:18,197 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:23:18,197 casestep.py[line: 102] INFO: 转换后的参数体为：{'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com'}
2016-11-30 19:23:18,197 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:23:18,198 InterfaceUnittestTestCase.py[line: 91] INFO: 正在发起POST请求...
2016-11-30 19:23:18,198 httpprotocol.py[line: 74] INFO: 发起的请求为：http://info.so.360.cn:80/index.php?g=Embody&m=Index&a=submt
2016-11-30 19:23:18,198 httpprotocol.py[line: 75] INFO: 参数为：b'{"websitetype": "\\u535a\\u5ba2\\u8bba\\u575b", "checkcode": "rkqj", "url": "http://blog.sina.com.cn/ishouke", "email": "1033553122@40qq.com"}'
2016-11-30 19:23:18,198 httpprotocol.py[line: 76] INFO: 请求头为：{}
2016-11-30 19:23:18,319 httpprotocol.py[line: 86] ERROR: 发送请求失败，原因：HTTP Error 404: Not Found
2016-11-30 19:23:18,320 testcase.py[line: 111] ERROR: 步骤[1]执行出错,停止执行用例[id=70, name=提交网址]
2016-11-30 19:23:18,320 testcase.py[line: 118] INFO: 正在更新步骤执行结果
2016-11-30 19:23:18,320 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Error",reason="Traceback (most recent call last):  File E:\Projects\interface_project_for_dev\interface\InterfaceUnittestTestCase.py, line 100, in test_interface_of_json    encoding = chardet.detect(response[0])[encoding]TypeError: NoneType object is not subscriptable", protocol_method="post", runtime="2016-11-30 19:23:18",step_action="{'参数': {'websitetype': '博客论坛', 'checkcode': 'rkqj', 'url': 'http://blog.sina.com.cn/ishouke', 'email': '1033553122@40qq.com'}, '方法': 'post', '函数': 'test_interface_of_json', 'url': '/index.php?g=Embody&m=Index&a=submt'}", expected_results="" WHERE executed_history_id = 20161130192314 AND testcase_id = 70 AND step_id = 72 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:23:18,328 global_function.py[line: 75] INFO: 正在更新用例执行结果
2016-11-30 19:23:18,329 mydb.py[line: 70] INFO: query：UPDATE testcase_report_tb SET runresult="Error", runtime="2016-11-30 19:23:18" WHERE executed_history_id = 20161130192314 and testcase_id = 70 AND project='样例项目' AND testplan='无计划'
2016-11-30 19:23:18,334 global_function.py[line: 82] INFO: 指定用例[70]已执行完
2016-11-30 19:23:18,334 main.py[line: 240] INFO: 用例[70]运行结果：('Error', '')
2016-11-30 19:23:18,334 main.py[line: 242] INFO: 接口测试已执行完成，正在关闭数据库连接
2016-11-30 19:23:18,336 htmlreporter.py[line: 37] INFO: 正在查询测试用例总数
2016-11-30 19:23:18,337 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE executed_history_id = %s  data：('20161130192314',)
2016-11-30 19:23:18,342 htmlreporter.py[line: 43] INFO: 正在查询执行通过的用例数
2016-11-30 19:23:18,342 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Pass', '20161130192314')
2016-11-30 19:23:18,345 htmlreporter.py[line: 49] INFO: 正在查询执行失败的用例数
2016-11-30 19:23:18,345 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Fail', '20161130192314')
2016-11-30 19:23:18,348 htmlreporter.py[line: 55] INFO: 正在查询执行出错的用例数
2016-11-30 19:23:18,349 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Error', '20161130192314')
2016-11-30 19:23:18,351 htmlreporter.py[line: 61] INFO: 正在查询未执行的用例数
2016-11-30 19:23:18,351 mydb.py[line: 84] INFO: query：SELECT count(testcase_id) FROM testcase_report_tb WHERE runresult = %s AND executed_history_id = %s  data：('Block', '20161130192314')
2016-11-30 19:23:18,354 htmlreporter.py[line: 87] INFO: 正在查询已运的测试计划
2016-11-30 19:23:18,355 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130192314',)
2016-11-30 19:23:18,356 htmlreporter.py[line: 113] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]的测试用例执行结果
2016-11-30 19:23:18,357 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130192314')
2016-11-30 19:23:18,358 htmlreporter.py[line: 120] INFO: 正在记录测试测试计划[project：pj_pos, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:23:18,359 htmlreporter.py[line: 113] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]的测试用例执行结果
2016-11-30 19:23:18,359 mydb.py[line: 100] INFO: query：SELECT id, executed_history_id, testcase_id, testcase_name,testsuit, testplan, project, runresult, runtime FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130192314')
2016-11-30 19:23:18,361 htmlreporter.py[line: 120] INFO: 正在记录测试测试计划[project：样例项目, testplan：无计划]的测试用例运行结果到测试报告
2016-11-30 19:23:18,362 htmlreporter.py[line: 134] INFO: 正在查询已运的测试计划
2016-11-30 19:23:18,362 mydb.py[line: 100] INFO: query：SELECT project, testplan FROM testcase_report_tb WHERE executed_history_id = %s GROUP BY project, testplan ORDER BY id ASC  data：('20161130192314',)
2016-11-30 19:23:18,364 htmlreporter.py[line: 146] INFO: 正在查询测试计划[project：pj_pos, testplan：无计划]已运行的测试用例
2016-11-30 19:23:18,364 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('pj_pos', '无计划', '20161130192314')
2016-11-30 19:23:18,366 htmlreporter.py[line: 177] INFO: 正在查询测试用例[id=148]步骤运行结果
2016-11-30 19:23:18,366 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('pj_pos', '无计划', 148, '20161130192314')
2016-11-30 19:23:18,369 htmlreporter.py[line: 146] INFO: 正在查询测试计划[project：样例项目, testplan：无计划]已运行的测试用例
2016-11-30 19:23:18,369 mydb.py[line: 100] INFO: query：SELECT testcase_id, testcase_name, project, testplan FROM testcase_report_tb WHERE project=%s AND testplan=%s AND executed_history_id = %s  GROUP BY testcase_id ORDER BY id ASC  data：('样例项目', '无计划', '20161130192314')
2016-11-30 19:23:18,374 htmlreporter.py[line: 177] INFO: 正在查询测试用例[id=70]步骤运行结果
2016-11-30 19:23:18,374 mydb.py[line: 100] INFO: query：SELECT step_id, step_num, protocol_method, protocol, HOST, PORT, step_action, expected_results, runresult, reason, runtime FROM case_step_report_tb WHERE project= %s AND testplan= %s AND testcase_id = %s AND executed_history_id = %s GROUP BY step_num ORDER BY step_num ASC  data：('样例项目', '无计划', 70, '20161130192314')
2016-11-30 19:23:18,377 htmlreporter.py[line: 206] INFO: 正在设置测试报告结果文件名
2016-11-30 19:23:18,377 htmlreporter.py[line: 216] INFO: 测试报告文件名所在路径为：E:\\Projects\\report\\test_report20161130192314.html
2016-11-30 19:23:18,377 htmlreporter.py[line: 209] INFO: 正在生成测试报告
2016-11-30 19:23:18,379 main.py[line: 265] INFO: 生成测试报告成功
2016-11-30 19:23:18,510 main.py[line: 272] INFO: E:\\Projects\\report\\test_report20161130192314.html
2016-11-30 19:23:18,511 main.py[line: 275] INFO: 正在发送测试报告邮件...
2016-11-30 19:23:18,549 main.py[line: 279] INFO: 发送邮件成功
2016-11-30 19:25:16,866 global_var.py[line: 20] INFO: 当前运行环境：测试环境
2016-11-30 19:25:16,867 global_var.py[line: 21] INFO: 正在初始化数据库[名称：SAOFUDB1]对象
2016-11-30 19:25:16,887 global_var.py[line: 28] INFO: 正在初始化数据库[名称：TESTDB]对象
2016-11-30 19:25:16,893 global_var.py[line: 31] INFO: 正在获取testlink
2016-11-30 19:25:16,974 main.py[line: 57] INFO: 正在创建测试用例报告报表
2016-11-30 19:25:16,975 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS testcase_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testsuit varchar(40),                                          testplan varchar(40),                                          project varchar(40),                                          runresult varchar(20),                                          runtime datetime)
2016-11-30 19:25:16,976 main.py[line: 60] INFO: 正在创建测试步骤报告报表
2016-11-30 19:25:16,977 mydb.py[line: 43] INFO: query：CREATE TABLE IF NOT EXISTS case_step_report_tb                                         (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,                                          executed_history_id varchar(50) NOT NULL,                                          testcase_id int NOT NULL,                                          testcase_name varchar(40) NOT NULL,                                          testplan varchar(40) NOT NULL,                                          project varchar(40) NOT NULL,                                          step_id int,                                          step_num int NOT NULL,                                          step_action varchar(1000),                                           expected_results varchar(1000),                                          runresult varchar(10),                                          reason varchar(2000),                                          protocol_method varchar(40) ,                                          protocol varchar(40),                                          host varchar(40),                                          port int,                                          runtime datetime)
2016-11-30 19:25:16,978 main.py[line: 63] INFO: 正在读取运行模式配置
2016-11-30 19:25:16,980 main.py[line: 70] INFO: 正在运行全局初始化用例……
2016-11-30 19:25:16,981 main.py[line: 72] INFO: 待运行全局初始化用例id列表：[148, 70]
2016-11-30 19:25:17,271 global_function.py[line: 19] INFO: 获取测试用例信息 [{'layout': '1', 'steps': [{'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;branch_id&quot;:1}<br />\n\t}</p>\n', 'step_number': '1', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT branch_id FROM account_operator WHERE id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;(1318,)&quot;</p>\n<p>\n\t}</p>\n', 'id': '183'}, {'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,<br />\n\t&quot;输出&quot;:{&quot;device_no&quot;:1,&quot;serial_no&quot;:2}<br />\n\t}</p>\n', 'step_number': '2', 'actions': '<p>\n\t{</p>\n<p>\n\t&quot;步骤类型&quot;:&quot;执行sql&quot;,</p>\n<p>\n\t&quot;单条查询&quot;:&quot;SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s&quot;,</p>\n<p>\n\t&quot;参数&quot;:&quot;([CaseStep.branch_id],)&quot;</p>\n<p>\n\t}</p>\n', 'id': '182'}, {'execution_type': '1', 'active': '1', 'expected_results': '<p>\n\t{&quot;检查&quot;:&quot;body&quot;,</p>\n<p>\n\t&quot;匹配规则&quot;：&quot;键值相等&quot;,</p>\n<p>\n\t&quot;条件&quot;：[{&quot;模式&quot;：{&quot;success&quot;:true}, &quot;消息&quot;：&ldquo;登录失败，success不为true&rdquo;},{&quot;模式&quot;：｛&quot;message&quot;: &quot;成功&quot;},&quot;消息&quot;：&ldquo;message不为成功&rdquo;}，{&quot;模式&quot;：｛&quot;code&quot;: &quot;4001&quot;},&quot;消息&quot;：&ldquo;code不为4001&rdquo;}],</p>\n<p>\n\t&quot;输出&quot;:{&quot;Token&quot;:{&quot;token&quot;:&quot;value&quot;},&quot;OperatorId&quot;:{&quot;operator&quot;:{&quot;id&quot;:&quot;value&quot;}}}</p>\n<p>\n\t}</p>\n', 'step_number': '3', 'actions': '<p>\n\t{&ldquo;函数&rdquo;：&ldquo;<span style="background-color:#e4e4ff;">test_interface_of_json</span>&rdquo;，</p>\n<p>\n\t&ldquo;请求头&rdquo;： {&quot;<span style="color:#008080;font-weight:bold;">DeviceId&quot;</span>:&quot;[CaseStep.device_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;SerialNo&quot;</span>:&quot;[CaseStep.serial_no]&quot;, <span style="color:#008080;font-weight:bold;">&quot;Content-Type&quot;</span>:&quot;<span style="color:#008080;font-weight:bold;">application/json;charset=utf-8&quot;</span>,<span style="color:#008080;font-weight:bold;">&quot;ProductVersion&quot;</span>: &quot;[global_product_version]&quot;, <span style="color:#008080;font-weight:bold;">&quot;ProtocolVersion&quot;</span>:&quot;[global_protocol_version]&quot;},</p>\n<p>\n\t&quot;方法&quot;:&quot;post&quot;,<br />\n\t&quot;url&quot;:&quot;/saofu-client/password/login&quot;,<br />\n\t&quot;参数&quot;:{&quot;id&quot;:&quot;1318&quot;,&quot;password&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;}<br />\n\t}</p>\n', 'id': '150'}], 'execution_type': '1', 'preconditions': '<p>\n\t初始化用例</p>\n', 'full_tc_external_id': 'pj_pos-1', 'name': 'test-n-登陆掌贝pos机', 'id': '149', 'author_last_name': 'Administrator', 'author_login': 'admin', 'updater_login': 'admin', 'author_first_name': 'Testlink', 'active': '1', 'modification_ts': '2016-11-30 15:41:36', 'updater_first_name': 'Testlink', 'tc_external_id': '1', 'creation_ts': '2016-07-27 18:32:10', 'status': '1', 'importance': '2', 'version': '1', 'author_id': '1', 'testcase_id': '148', 'is_open': '1', 'updater_last_name': 'Administrator', 'updater_id': '1', 'estimated_exec_duration': '', 'node_order': '1000', 'testsuite_id': '147', 'summary': ''}]
2016-11-30 19:25:17,395 global_function.py[line: 39] INFO: 正在读取套件[id=147]的协议，host，端口配置...
2016-11-30 19:25:18,064 global_function.py[line: 68] INFO: 记录测试用例到测试用例报表
2016-11-30 19:25:18,064 mydb.py[line: 56] INFO: query：INSERT INTO testcase_report_tb(executed_history_id, testcase_id, testcase_name, testsuit, testplan, project, runresult, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192516', 148, 'test-n-登陆掌贝pos机', '登陆接口', '无计划', 'pj_pos', 'Block', '')
2016-11-30 19:25:18,066 global_function.py[line: 71] INFO: 开始执行测试用例[id=148，name=test-n-登陆掌贝pos机]
2016-11-30 19:25:18,066 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}
2016-11-30 19:25:18,066 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"branch_id":1}}
2016-11-30 19:25:18,066 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:25:18,066 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192516', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 183, 1, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT branch_id FROM account_operator WHERE id = %s","参数":"(1318,)"}', '{"检查":"body","输出":{"branch_id":1}}', 'Block', '', '')
2016-11-30 19:25:18,067 testcase.py[line: 77] INFO: 开始执行步骤操作[第1步]
2016-11-30 19:25:18,068 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:25:18,068 mydb.py[line: 84] INFO: query：SELECT branch_id FROM account_operator WHERE id = %s  data：(1318,)
2016-11-30 19:25:18,071 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:(1485916418,), flag:True
2016-11-30 19:25:18,071 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:25:18,071 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}]
2016-11-30 19:25:18,071 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:25:18,071 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:25:18",step_action="{'参数': (1318,), '单条查询': 'SELECT branch_id FROM account_operator WHERE id = %s', '步骤类型': '执行sql'}", expected_results="{'检查': 'body', '输出': {'branch_id': 1}}" WHERE executed_history_id = 20161130192516 AND testcase_id = 148 AND step_id = 183 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:25:18,074 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}
2016-11-30 19:25:18,074 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","输出":{"device_no":1,"serial_no":2}}
2016-11-30 19:25:18,074 testcase.py[line: 55] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:25:18,074 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192516', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 182, 2, '', '', '192.168.9.211', '3306', '{"步骤类型":"执行sql","单条查询":"SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s","参数":"([CaseStep.branch_id],)"}', '{"检查":"body","输出":{"device_no":1,"serial_no":2}}', 'Block', '', '')
2016-11-30 19:25:18,075 testcase.py[line: 77] INFO: 开始执行步骤操作[第2步]
2016-11-30 19:25:18,075 casestep.py[line: 113] INFO: 找到待替换的非全局动态参数：[CaseStep.branch_id]
2016-11-30 19:25:18,075 casestep.py[line: 136] INFO: 转换后的参数体为：(1485916418,)
2016-11-30 19:25:18,076 mydb.py[line: 84] INFO: query：SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s  data：(1485916418,)
2016-11-30 19:25:18,079 casestep.py[line: 188] INFO: 数据库服务器返回的查询结果为为 query_result:('182590014248006', 'HZ501FZA0F9M07D'), flag:True
2016-11-30 19:25:18,079 casestep.py[line: 190] INFO: 正在保存服务器返回结果到自定义变量
2016-11-30 19:25:18,079 casestep.py[line: 225] INFO: 提取的输出结果(key-value对)为:[{'branch_id': 1485916418}, {'device_no': '182590014248006'}, {'serial_no': 'HZ501FZA0F9M07D'}]
2016-11-30 19:25:18,079 testcase.py[line: 155] INFO: 正在更新步骤执行结果
2016-11-30 19:25:18,079 mydb.py[line: 70] INFO: query：UPDATE case_step_report_tb SET runresult="Pass",reason="", protocol_method="无", runtime="2016-11-30 19:25:18",step_action="{'参数': (1485916418,), '单条查询': 'SELECT device_no, serial_no FROM device WHERE shop_branch_id = %s', '步骤类型': '执行sql'}", expected_results="{'检查': 'body', '输出': {'serial_no': 2, 'device_no': 1}}" WHERE executed_history_id = 20161130192516 AND testcase_id = 148 AND step_id = 182 AND project='pj_pos' AND testplan='无计划'
2016-11-30 19:25:18,082 testcase.py[line: 39] INFO: 转换来自test_link 的step_action值为：{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}
2016-11-30 19:25:18,082 testcase.py[line: 41] INFO: 转换来自test_link 的expected_results值为：{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}
2016-11-30 19:25:18,082 testcase.py[line: 60] INFO: 记录测试步骤到测试步骤报告表
2016-11-30 19:25:18,083 mydb.py[line: 56] INFO: query：INSERT INTO case_step_report_tb(executed_history_id, testcase_id, testcase_name, testplan, project, step_id, step_num, protocol_method, protocol, host, port, step_action, expected_results, runresult, reason, runtime) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)  data：('20161130192516', 148, 'test-n-登陆掌贝pos机', '无计划', 'pj_pos', 150, 3, '', 'https', 'saofu.client.test.saofu.cn', 443, '{"函数":"test_interface_of_json","请求头": {"DeviceId":"[CaseStep.device_no]", "SerialNo":"[CaseStep.serial_no]", "Content-Type":"application/json;charset=utf-8","ProductVersion": "[global_product_version]", "ProtocolVersion":"[global_protocol_version]"},"方法":"post","url":"/saofu-client/password/login","参数":{"id":"1318","password":"e10adc3949ba59abbe56e057f20f883e"}}', '{"检查":"body","匹配规则":"键值相等","条件":[{"模式":{"success":true}, "消息":"登录失败,success不为true"},{"模式":{"message": "成功"},"消息":"message不为成功"},{"模式":{"code": "4001"},"消息":"code不为4001"}],"输出":{"Token":{"token":"value"},"OperatorId":{"operator":{"id":"value"}}}}', 'Block', '', '')
2016-11-30 19:25:18,084 testcase.py[line: 77] INFO: 开始执行步骤操作[第3步]
2016-11-30 19:25:18,085 casestep.py[line: 158] INFO: 调用的方法为：InterfaceUnittestTestCase.test_interface_of_json
2016-11-30 19:25:18,085 casestep.py[line: 102] INFO: 转换后的参数体为：{'password': 'e10adc3949ba59abbe56e057f20f883e', 'id': '1318'}
2016-11-30 19:25:18,085 casestep.py[line: 108] INFO: 没找到需要替换的动态参数
2016-11-30 19:25:18,085 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_protocol_version]
2016-11-30 19:25:18,085 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.device_no]
2016-11-30 19:25:18,085 casestep.py[line: 93] INFO: 找到待替换的全局动态参数：[global_product_version]
2016-11-30 19:25:18,085 casestep.py[line: 79] INFO: 找到待替换的非全局动态参数：[CaseStep.serial_no]
